<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Zookeeper入门</title>
      <link href="/2023/04/04/microservice/Zookeeper%E5%85%A5%E9%97%A8/"/>
      <url>/2023/04/04/microservice/Zookeeper%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>ZooKeeper is a high-performance coordination service for distributed applications. It exposes common services - such as naming, configuration management, synchronization, and group services - in a simple interface so you don’t have to write them from scratch. You can use it off-the-shelf to implement consensus, group management, leader election, and presence protocols. And you can build on it for your own, specific needs.</p></blockquote><p><strong>Zookeeper</strong>是一个微服务的注册中心，类似的产品还有<strong>Nacos、Eureka</strong>等。</p><p>官网：<code>https://zookeeper.apache.org/</code></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><blockquote><p>安装Zookeeper集群环境</p></blockquote><p>下载地址：<code>https://zookeeper.apache.org/releases.html</code></p><p>环境要求：jdk</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-zookeeper-3.7.1-bin.tar.gz</span><br><span class="line"><span class="built_in">cd</span> apache-zookeeper-3.7.1-bin/</span><br><span class="line"><span class="built_in">cp</span> conf/zoo_sample.cfg conf/zoo.cfg</span><br><span class="line">vi conf/zoo.cfg</span><br></pre></td></tr></table></figure><p><strong>zoo.cfg</strong></p><blockquote><p>注意：在一台主机上搭建伪集群时，dataDir、clientPort及server.x的两个端口号要不一致。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tickTime=2000</span><br><span class="line">dataDir=/usr/local/zookeeper2181/data</span><br><span class="line">clientPort=2181</span><br><span class="line">initLimit=5</span><br><span class="line">syncLimit=2</span><br><span class="line">server.1=localhost:2888:3888</span><br><span class="line">server.2=localhost:2889:3889</span><br><span class="line">server.3=localhost:2890:3890</span><br></pre></td></tr></table></figure><p><strong>myid</strong></p><p>在<strong>dataDir</strong>目录下新建<strong>myid</strong>文件，内容为该zookeeper在集群中的编号，<strong>zoo.cfg</strong>中<strong>server.x</strong>的<strong>x</strong>指的就是<strong>myid</strong>文件中的编号。集群环境下该编号要确保唯一。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 1 &gt; /usr/local/zookeeper2181/data/myid</span><br></pre></td></tr></table></figure><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/zkServer.sh start|start-foreground|stop|version|restart|status|print-cmd</span><br></pre></td></tr></table></figure><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bin/zkCli.sh -server localhost:2181</span><br><span class="line"><span class="comment"># help查看命令</span></span><br></pre></td></tr></table></figure><h1 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h1><blockquote><p>列举一些zoo.cfg中的配置</p></blockquote><p><strong>tickTime</strong>：zookeeper心跳时间，单位是毫秒。</p><p><strong>dataDir</strong>：存放数据的目录。</p><p><strong>clientPort</strong> ：监听客户端连接的端口。</p><p><strong>initLimit</strong>：集群环境下从机连接和同步到主机的超时时间。配置为5表示5个<strong>tickTime</strong>。</p><p><strong>syncLimit</strong>：集群环境下从机同步到主机的超时时间。配置为2表示2个<strong>tickTime</strong>。</p><p><strong>server.x&#x3D;[hostname]:nnnnn[:nnnnn]<strong>：组成集群环境的zookeeper主机，</strong>x</strong>表示每个zookeeper的<strong>myid</strong>文件中的内容。<strong>hostname</strong>表示主机名，第一个端口号是集群内通信使用，第二个端口号是选举leader使用。</p><h1 id="可视化工具"><a href="#可视化工具" class="headerlink" title="可视化工具"></a>可视化工具</h1><p>prettyZoo</p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zookeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/03/09/hexo%E5%85%A5%E9%97%A8/"/>
      <url>/2023/03/09/hexo%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>hexo是一个轻量的静态博客生成工具，可配合<code>github</code>等构建自己的博客。</p><p>官网：<code>https://hexo.io/zh-cn/index.html</code></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><blockquote><p>安装<code>hexo</code>前先在电脑上安装好<code>git</code>和<code>node.js</code>。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h1 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在folder目录创建网站</span></span><br><span class="line"><span class="comment"># 注意建站的文件夹必须是空文件夹，如果不是空文件夹，需要先清空，建站完毕后再将自己的文件拷贝进来</span></span><br><span class="line">hexo init [folder]</span><br><span class="line">npm install</span><br><span class="line"><span class="comment"># 查看hexo版本</span></span><br><span class="line">hexo version</span><br></pre></td></tr></table></figure><p>建站完成后会生成相应的文件和目录：</p><h2 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h2><p>网站的配置信息</p><h2 id="source"><a href="#source" class="headerlink" title="source"></a>source</h2><p>资源文件夹，除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code> (下划线)的文件 &#x2F; 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹，而其他文件会被拷贝过去。</p><h2 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h2><p>主题文件夹，<code>Hexo</code>会根据不同的主题来生成不同的静态页面。</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>参考官网各配置项。</p><h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><h2 id="help"><a href="#help" class="headerlink" title="help"></a>help</h2><blockquote><p>命令帮助</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -h</span><br></pre></td></tr></table></figure><h2 id="new"><a href="#new" class="headerlink" title="new"></a>new</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 使用默认的post布局创建博客，-p指定博客路径</span><br><span class="line">hexo new [title] -p [path]</span><br></pre></td></tr></table></figure><h2 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h2><blockquote><p>用md文件生成静态文件（html），静态文件放在<code>public</code>目录下。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 可简写为hexo g</span><br><span class="line">hexo generate</span><br><span class="line"># -d部署博客网站</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><h2 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h2><blockquote><p>部署博客网站。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 可简写为hexo d</span><br><span class="line">hexo deploy</span><br><span class="line"># 同hexo g -d</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><h2 id="server"><a href="#server" class="headerlink" title="server"></a>server</h2><blockquote><p>本地启动博客网站，启动后默认访问地址为<code>http://localhost:4000/</code>。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><h2 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h2><blockquote><p>清除缓存<code>db.json</code>和已生成的静态文件<code>public</code>。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><h1 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h1><blockquote><p>即执行<code>hexo deploy</code>时，将静态资源推送到<code>github</code>的<code>pages</code>上。</p><p>前提是需要有开通pages的github仓库。</p></blockquote><h2 id="github-pages"><a href="#github-pages" class="headerlink" title="github pages"></a>github pages</h2><blockquote><p>就是github免费将你一个仓库里的代码部署到公网上（大概是这个意思），前提是仓库名需要为<code>github account.github.io</code>。</p><p>例如我的github账号为<code>xiaoming</code>，那么我可以新建一个名为<code>xiaoming.github.io</code>的仓库，之后配置好这个仓库的<code>pages</code>，再用浏览器访问<code>https://xiaoming.github.io</code>就可以访问到自己的博客网站了。</p></blockquote><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h2 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h2><p>在<code>_config.yml</code>中配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/PeiMouRen/peimouren.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line">  token: ghp_4pBN123xjGo4pi2Q6MOf1234RXSq168Vlyg9M4JmxLT</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="部署到github时身份验证问题"><a href="#部署到github时身份验证问题" class="headerlink" title="部署到github时身份验证问题"></a>部署到github时身份验证问题</h2><p>采用hexo的一键部署时，若在<code>_config.yml</code>中配置的<code>github</code>的<code>token</code>还是提示输入用户名和密码时，这里的用户名随便输，密码需为<code>github</code>的<code>token</code>。</p><p><code>github</code>设置token：<code>头像 -&gt; setting -&gt; Developer setting -&gt; Personal access tokens</code>.</p><h2 id="新建的博客md文件头上没有categories、tags信息"><a href="#新建的博客md文件头上没有categories、tags信息" class="headerlink" title="新建的博客md文件头上没有categories、tags信息"></a>新建的博客md文件头上没有categories、tags信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>打开<code>source/categoriex/index.md</code>，在顶部<code>title</code>和<code>date</code>下加上<code>type: categories</code>。</p><p>再次创建博客md文件时，头上就会出现<code>categories</code>信息。</p><p><code>tags</code>的创建同<code>categories</code>。</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot参考</title>
      <link href="/2022/12/12/spring/SpringBoot%E5%8F%82%E8%80%83/"/>
      <url>/2022/12/12/spring/SpringBoot%E5%8F%82%E8%80%83/</url>
      
        <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>记录一些<code>SpringBoot</code>框架中常用的技术点。</p><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><h2 id="发送http请求"><a href="#发送http请求" class="headerlink" title="发送http请求"></a>发送http请求</h2><p>使用<code>RestTemplate</code>发送http请求，自定义<code>Bean</code>。更多配置详见<code>ClientHttpRequestFactory</code>接口的几个实现类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> RestTemplate <span class="title function_">restTemplate</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">SimpleClientHttpRequestFactory</span> <span class="variable">simpleClientHttpRequestFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleClientHttpRequestFactory</span>();</span><br><span class="line">    simpleClientHttpRequestFactory.setConnectTimeout(<span class="number">3000</span>);</span><br><span class="line">    simpleClientHttpRequestFactory.setReadTimeout(<span class="number">3000</span>);</span><br><span class="line">    <span class="type">RestTemplate</span> <span class="variable">restTemplate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RestTemplate</span>(simpleClientHttpRequestFactory);</span><br><span class="line">    <span class="comment">// 自定义异常处理</span></span><br><span class="line">    restTemplate.setErrorHandler(<span class="keyword">new</span> <span class="title class_">CustomResponseErrorHandler</span>());</span><br><span class="line">    <span class="keyword">return</span> restTemplate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><code>RestTemplate</code>在响应码不为<code>2XX</code>时会直接抛异常，若不想抛异常，可通过实现<code>ResponseErrorHandler</code>来自定义异常处理程序。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomResponseErrorHandler</span> <span class="keyword">implements</span> <span class="title class_">ResponseErrorHandler</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasError</span><span class="params">(ClientHttpResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleError</span><span class="params">(ClientHttpResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"><span class="comment">// hasError返回true时执行</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="redis配置"><a href="#redis配置" class="headerlink" title="redis配置"></a>redis配置</h2><p><code>application.yml</code>配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">cluster:</span></span><br><span class="line">      <span class="attr">nodes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">172.158</span><span class="number">.0</span><span class="number">.1</span><span class="string">:6379</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">172.158</span><span class="number">.0</span><span class="number">.2</span><span class="string">:6379</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">172.158</span><span class="number">.0</span><span class="number">.3</span><span class="string">:6379</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">172.158</span><span class="number">.0</span><span class="number">.4</span><span class="string">:6379</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">172.158</span><span class="number">.0</span><span class="number">.5</span><span class="string">:6379</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">172.158</span><span class="number">.0</span><span class="number">.6</span><span class="string">:6379</span></span><br><span class="line">    <span class="attr">lettuce:</span></span><br><span class="line">      <span class="attr">pool:</span> <span class="comment"># 需依赖commons-pool2</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">max-active:</span> <span class="number">8</span></span><br><span class="line">        <span class="attr">max-idle:</span> <span class="number">8</span></span><br><span class="line">        <span class="attr">min-idle:</span> <span class="number">0</span></span><br><span class="line">        <span class="attr">max-wait:</span> <span class="string">-1ms</span></span><br><span class="line">      <span class="attr">cluster:</span></span><br><span class="line">        <span class="attr">refresh:</span></span><br><span class="line">          <span class="attr">adaptive:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">period:</span> <span class="string">15s</span></span><br></pre></td></tr></table></figure><p>注入<code>RedisTemplate</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> RedisTemplate&lt;String, String&gt; <span class="title function_">redisTemplate</span><span class="params">(RedisConnectionFactory factory)</span> &#123;</span><br><span class="line">    RedisTemplate&lt;String, String&gt; redisTemplate = <span class="keyword">new</span> <span class="title class_">RedisTemplate</span>&lt;&gt;();</span><br><span class="line">    redisTemplate.setKeySerializer(RedisSerializer.string());</span><br><span class="line">    redisTemplate.setValueSerializer(RedisSerializer.string());</span><br><span class="line">    redisTemplate.setHashKeySerializer(RedisSerializer.string());</span><br><span class="line">    redisTemplate.setHashValueSerializer(RedisSerializer.string());</span><br><span class="line">    redisTemplate.setConnectionFactory(factory);</span><br><span class="line">    <span class="keyword">return</span> redisTemplate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="cache"><a href="#cache" class="headerlink" title="cache"></a>cache</h2><p>启动类上添加注解<code>@EnableCaching</code>。</p><p>使用redis作为缓存:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisCacheConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">CACHE_KEY_PREFIX</span> <span class="operator">=</span> <span class="string">&quot;CACHE_KEY_PREFIX_&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CacheManager <span class="title function_">cacheManager</span><span class="params">(RedisConnectionFactory factory)</span> &#123;</span><br><span class="line"></span><br><span class="line">        RedisSerializer&lt;String&gt; redisSerializer = <span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">JsonMapper</span> <span class="variable">jsonMapper</span> <span class="operator">=</span> JsonMapper.builder()</span><br><span class="line">                .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, <span class="literal">false</span>)</span><br><span class="line">                .build();</span><br><span class="line">        jsonMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        jsonMapper.activateDefaultTyping(jsonMapper.getPolymorphicTypeValidator(), ObjectMapper.DefaultTyping.NON_FINAL);</span><br><span class="line"></span><br><span class="line">        Jackson2JsonRedisSerializer&lt;Object&gt; jackson2JsonRedisSerializer = <span class="keyword">new</span> <span class="title class_">Jackson2JsonRedisSerializer</span>&lt;&gt;(Object.class);</span><br><span class="line">        jackson2JsonRedisSerializer.setObjectMapper(jsonMapper);</span><br><span class="line"></span><br><span class="line">        <span class="type">RedisCacheConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> RedisCacheConfiguration.defaultCacheConfig()</span><br><span class="line">                .prefixCacheNameWith(CACHE_KEY_PREFIX)</span><br><span class="line">                .entryTtl(Duration.ofMinutes(<span class="number">5</span>))</span><br><span class="line">                .serializeKeysWith(RedisSerializationContext.SerializationPair.fromSerializer(redisSerializer))</span><br><span class="line">                .serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(jackson2JsonRedisSerializer))</span><br><span class="line">                .disableCachingNullValues();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> RedisCacheManager.builder(factory)</span><br><span class="line">                .cacheDefaults(config)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>缓存方法上添加注解：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Cacheable(value = &quot;CACHE_NAME&quot;, key = &quot;#appId&quot;, unless = &quot;#result == null&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getNameByAppId</span><span class="params">(String appId)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> appDao.getNameByAppId(appId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="上传下载文件"><a href="#上传下载文件" class="headerlink" title="上传下载文件"></a>上传下载文件</h2><h3 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">uploadFile</span><span class="params">(String fileName)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="string">&quot;D:\\test\\&quot;</span>;</span><br><span class="line">        <span class="type">FileSystemResource</span> <span class="variable">fileResource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileSystemResource</span>(filePath + fileName);</span><br><span class="line"></span><br><span class="line">        <span class="type">HttpHeaders</span> <span class="variable">httpHeaders</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpHeaders</span>();</span><br><span class="line">        httpHeaders.setContentType(MediaType.MULTIPART_FORM_DATA);</span><br><span class="line"></span><br><span class="line">        MultiValueMap&lt;String, Object&gt; formData = <span class="keyword">new</span> <span class="title class_">LinkedMultiValueMap</span>&lt;&gt;();</span><br><span class="line">        formData.add(<span class="string">&quot;file&quot;</span>, fileResource);</span><br><span class="line"></span><br><span class="line">        HttpEntity&lt;MultiValueMap&gt; httpEntity = <span class="keyword">new</span> <span class="title class_">HttpEntity</span>&lt;&gt;(formData, httpHeaders);</span><br><span class="line">      </span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;upload url&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> restTemplate.postForObject(url, httpEntity, String.class);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">  <span class="meta">@GetMapping(&quot;/download&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">downloadMedia</span><span class="params">(HttpServletResponse response)</span> &#123;</span><br><span class="line">    log.debug(<span class="string">&quot;下载文件&quot;</span>);</span><br><span class="line">    <span class="type">ClassPathResource</span> <span class="variable">classPathResource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathResource</span>(<span class="string">&quot;static/1.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">    response.reset();</span><br><span class="line">    response.setContentType(<span class="string">&quot;application/octet-stream&quot;</span>);</span><br><span class="line">    response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">    response.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=1.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>(<span class="type">BufferedInputStream</span> <span class="variable">bis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(classPathResource.getInputStream())) &#123;</span><br><span class="line">        <span class="type">byte</span>[] buff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">os</span>  <span class="operator">=</span> response.getOutputStream();</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((i = bis.read(buff)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            os.write(buff, <span class="number">0</span>, i);</span><br><span class="line">            os.flush();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        log.error(<span class="string">&quot;下载文件异常&quot;</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 也可用byte[].class来替换ByteArrayResource.class</span></span><br><span class="line">ResponseEntity&lt;ByteArrayResource&gt; responseEntity = restTemplate.exchange(downloadUrl, HttpMethod.GET, httpEntity, ByteArrayResource.class);</span><br></pre></td></tr></table></figure><hr><p>或者采用<code>execute</code>方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> ResponseEntity <span class="title function_">downloadMedia</span><span class="params">(String fileUrl, String chatbotId)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">HttpHeaders</span> <span class="variable">httpHeaders</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpHeaders</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;xxx&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> restTemplate.execute(url, HttpMethod.GET,</span><br><span class="line">                request -&gt; request.getHeaders().addAll(httpHeaders),</span><br><span class="line">                response -&gt; &#123;</span><br><span class="line">                    <span class="type">HttpHeaders</span> <span class="variable">responseHeaders</span> <span class="operator">=</span> response.getHeaders();</span><br><span class="line"></span><br><span class="line">                    log.debug(<span class="string">&quot;response headers: &#123;&#125;&quot;</span>, responseHeaders);</span><br><span class="line">                    <span class="keyword">if</span> (MediaType.APPLICATION_JSON.equalsTypeAndSubtype(responseHeaders.getContentType())) &#123;</span><br><span class="line">                        <span class="type">String</span> <span class="variable">errorBody</span> <span class="operator">=</span> IOUtils.toString(response.getBody(), StandardCharsets.UTF_8);</span><br><span class="line">                        <span class="keyword">return</span> ResponseEntity.status(HttpStatus.NOT_FOUND).body(errorBody);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">                    IOUtils.copy(response.getBody(), baos);</span><br><span class="line"></span><br><span class="line">                    log.debug(<span class="string">&quot;response headers: &#123;&#125;&quot;</span>, responseHeaders);</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ResponseEntity</span>&lt;&gt;(<span class="keyword">new</span> <span class="title class_">ByteArrayResource</span>(baos.toByteArray()), responseHeaders, HttpStatus.OK);</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="发送邮件"><a href="#发送邮件" class="headerlink" title="发送邮件"></a>发送邮件</h2><p><strong>maven依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>yml配置</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">mail:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">mail.xxx.com</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">25</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">xxx@xxx.com</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">xxx</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">mail:</span></span><br><span class="line">        <span class="attr">smtp:</span></span><br><span class="line">          <span class="attr">connectiontimeout:</span> <span class="number">10000</span></span><br><span class="line">          <span class="attr">timeout:</span> <span class="number">10000</span></span><br><span class="line">          <span class="attr">writetimeout:</span> <span class="number">10000</span></span><br><span class="line"><span class="comment">#          socks:</span></span><br><span class="line"><span class="comment">#            host: 100.10.10.10</span></span><br><span class="line"><span class="comment">#            port: 8989</span></span><br></pre></td></tr></table></figure><p><strong>邮件设置</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> JavaMailSender javaMailSender;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">send</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">MimeMessage</span> <span class="variable">mimeMessage</span> <span class="operator">=</span> javaMailSender.createMimeMessage();</span><br><span class="line">    <span class="type">MimeMessageHelper</span> <span class="variable">mimeMessageHelper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeMessageHelper</span>(mimeMessage);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">InternetAddress</span> <span class="variable">from</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InternetAddress</span>(paramMap.get(Constant.xxx), <span class="string">&quot;xxx系统&quot;</span>, StandardCharsets.UTF_8.name());</span><br><span class="line">        String[] to = StringUtils.split(paramMap.get(Constant.xxx), <span class="string">&quot;,&quot;</span>);</span><br><span class="line">        mimeMessageHelper.setFrom(from);</span><br><span class="line">        mimeMessageHelper.setTo(to);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(paramMap.get(Constant.xxx))) &#123;</span><br><span class="line">            String[] cc = StringUtils.split(paramMap.get(Constant.xxx), <span class="string">&quot;,&quot;</span>);</span><br><span class="line">            mimeMessageHelper.setCc(cc);</span><br><span class="line">        &#125;</span><br><span class="line">        mimeMessageHelper.setSubject(<span class="string">&quot;xxx提醒&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> paramMap.get(Constant.xxx);</span><br><span class="line">        content = StringUtils.replaceEach(content,</span><br><span class="line">                                          <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;$&#123;xxx&#125;&quot;</span>, <span class="string">&quot;$&#123;xxx&#125;&quot;</span>&#125;,</span><br><span class="line">                                          <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;String.valueOf(contentParam.get(<span class="string">&quot;xxx&quot;</span>)), String.valueOf(contentParam.get(<span class="string">&quot;xxx&quot;</span>))&#125;);</span><br><span class="line">        mimeMessageHelper.setText(content);</span><br><span class="line">        javaMailSender.send(mimeMessage);</span><br><span class="line"></span><br><span class="line">        log.debug(<span class="string">&quot;send email end&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        log.debug(<span class="string">&quot;send email error!&quot;</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="db"><a href="#db" class="headerlink" title="db"></a>db</h2><p><strong>maven</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- oracle dependency --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.oracle.database.jdbc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ojdbc8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>21.9.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.oracle.database.nls<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>orai18n<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>21.9.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mysql dependency --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.30<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>yml</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">  <span class="comment">#url: jdbc:mysql://127.0.0.1:3306/db1?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="comment">#driver-class-name: com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:oracle:thin:@127.0.0.1:1521:orcl</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">oracle.jdbc.OracleDriver</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">db1</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    </span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mappers/*</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.xxx.xxx.bean</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span> <span class="comment"># 转换下划线为驼峰</span></span><br><span class="line">    <span class="attr">jdbc-type-for-null:</span> <span class="string">&#x27;null&#x27;</span> <span class="comment"># oracle数据库必须配置</span></span><br></pre></td></tr></table></figure><p><strong>xxxMapper.xml</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.xxx.xxx.dao.xxxDao&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESAPI入门</title>
      <link href="/2022/10/17/middleware/ESAPI%E5%85%A5%E9%97%A8/"/>
      <url>/2022/10/17/middleware/ESAPI%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>ESAPI (The OWASP Enterprise Security API) is a free, open source, web application security control library that makes it easier for programmers to write lower-risk applications.</p><p>ESAPI（OWASP Enterprise Security API）是一个免费的、开源的、Web 应用程序安全控制库，它使程序员更容易编写低风险的应用程序。</p></blockquote><p><strong>官方地址：</strong><code>https://github.com/ESAPI/esapi-java-legacy</code></p><p><strong>文档：</strong><code>https://owasp.org/www-project-enterprise-security-api/</code></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p><strong>版本</strong></p><ul><li>JDK: 8</li><li>ESAPI: 2.5.0.0</li></ul><p><strong>maven坐标</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.owasp.esapi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>esapi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>配置文件</strong></p><p>​复制官网项目中<code>configuration/esapi</code>下的<code>ESAPI.properties</code>和<code>validation.properties</code>到操作系统用户目录下的<code>.esapi</code>目录（默认目录）；</p><p>​若需要将配置文件放到其他目录，则需要在启动项目时指定<code>VM opton</code>：</p><p><code>-Dorg.owasp.esapi.resources=&quot;/path/to/.esapi&quot;</code>;</p><p><strong>使用slf4j</strong></p><p><code>ESAPI.properties</code>中设置<code>ESAPI.Logger</code>属性值为<code>org.owasp.esapi.logging.slf4j.Slf4JLogFactory</code>;</p><h2 id="使用api"><a href="#使用api" class="headerlink" title="使用api"></a>使用api</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 编码</span></span><br><span class="line"><span class="type">String</span> <span class="variable">input</span> <span class="operator">=</span> <span class="string">&quot;xxx&quot;</span>;</span><br><span class="line">input = ESAPI.encoder().encodeForHTML(input);</span><br><span class="line">input = ESAPI.encoder().encodeForHTMLAttribute(input);</span><br><span class="line">input = ESAPI.encoder().encodeForJavaScript(input);</span><br><span class="line">input = ESAPI.encoder().encodeForCSS(input);</span><br><span class="line">input = ESAPI.encoder().encodeForURL(input);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证</span></span><br><span class="line">ESAPI.validator().isValidInput(<span class="string">&quot;&quot;</span>,input,<span class="string">&quot;Email&quot;</span>,<span class="number">11</span>,<span class="literal">false</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ESAPI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ESAPI </tag>
            
            <tag> security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cas入门</title>
      <link href="/2022/09/09/sso/cas%E5%85%A5%E9%97%A8/"/>
      <url>/2022/09/09/sso/cas%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><code>CAS</code>，即<code>Central Authentication Service</code>，是一个开源的企业多语言单点登录的解决方案。</p><p>github:<code>https://github.com/apereo/cas</code></p><p>home:<code>https://www.apereo.org/projects/cas</code></p><h1 id="CAS协议"><a href="#CAS协议" class="headerlink" title="CAS协议"></a>CAS协议</h1><ul><li><code>TGT(Ticket Granting Ticket)</code>: 代表用户的一个<code>sso session</code>会话。</li><li>TGC: 保存<code>TGT</code>的<code>cookie</code>。</li><li><code>ST(Service Ticket)</code>: 作为参数放在<code>url</code>中传递，代表用户访问应用的凭证。</li></ul><p><img src="/cas%E6%B5%81%E7%A8%8B.png" alt="cas流程图"></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><blockquote><p>cas6版本后基于gradle构建代码，并推荐使用<code>waroverlay</code>的方式来进行使用和开发。</p><p>war overlay简介：<code>https://maven.apache.org/plugins/maven-war-plugin/overlays.html</code></p><p>即相同目录、相同文件名的内容会被覆盖掉，可做针对型开发。</p></blockquote><h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><p><code>cas:6.4</code>、<code>jdk:11</code></p><h2 id="获取代码"><a href="#获取代码" class="headerlink" title="获取代码"></a>获取代码</h2><p>项目<code>README.md</code>中介绍了可以使用的<code>task</code>，但有一些不能使用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b 6.4 https://github.com/apereo/cas-overlay-template.git</span><br><span class="line"><span class="built_in">cd</span> cas-overlay-template</span><br></pre></td></tr></table></figure><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew[.bat] clean build</span><br></pre></td></tr></table></figure><p>编译完成后会生成<code>build</code>目录，包含war包、配置文件等信息。</p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><h3 id="使用内部容器运行"><a href="#使用内部容器运行" class="headerlink" title="使用内部容器运行"></a>使用内部容器运行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew[.bat] run </span><br></pre></td></tr></table></figure><p>启动后访问<code>http://localhost:8443</code>，默认用户为<code>casuser/Mellon</code>。</p><h3 id="使用外部容器运行"><a href="#使用外部容器运行" class="headerlink" title="使用外部容器运行"></a>使用外部容器运行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew[.bat] clean build</span><br></pre></td></tr></table></figure><p>编译完成后，在<code>build/libs</code>目录下会生成<code>cas.war</code>，将war包放到外部tomcat的<code>webapps</code>目录下并启动tomcat，访问<code>http://localhost:8080</code>，默认用户为<code>casuser/Mellon</code>。</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="获取内置资源"><a href="#获取内置资源" class="headerlink" title="获取内置资源"></a>获取内置资源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew[.bat] listTemplateViews</span><br></pre></td></tr></table></figure><p>执行后，会在<code>build/cas-resources</code>下生成cas内置的资源，包括配置文件、页面等。</p><p>其中<code>build/cas-resources/application.properties</code>为默认配置文件，如需修改，只需在<code>src/main/resources/application.yml</code>中覆盖对应配置即可。</p><h2 id="使用http"><a href="#使用http" class="headerlink" title="使用http"></a>使用http</h2><p><strong><code>build.gradle</code>配置文件中<code>dependencies</code>添加配置</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 读取json配置</span><br><span class="line">    implementation &quot;org.apereo.cas:cas-server-support-json-service-registry:$&#123;project.&#x27;cas.version&#x27;&#125;&quot;</span><br></pre></td></tr></table></figure><p><strong>修改<code>src/main/resources/application.yml</code>，添加如下配置</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">ssl:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">cas:</span>  </span><br><span class="line">  <span class="attr">tgc:</span></span><br><span class="line">    <span class="attr">secure:</span> <span class="literal">false</span> <span class="comment"># 允许使用http协议发送cookie，默认为true</span></span><br><span class="line">  <span class="attr">service-registry:</span></span><br><span class="line">    <span class="attr">core:</span></span><br><span class="line">      <span class="attr">init-from-json:</span> <span class="literal">true</span> <span class="comment"># 允许从json中注册服务</span></span><br><span class="line">    <span class="attr">json:</span></span><br><span class="line">      <span class="attr">location:</span> <span class="string">classpath:/services</span> <span class="comment"># json文件地址</span></span><br></pre></td></tr></table></figure><p><strong>添加json配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew[.bat] listTemplateViews</span><br></pre></td></tr></table></figure><p>将<code>build/cas-resources/services</code>目录复制到<code>src/main/resources</code>下，并修改json文件中<code>serviceId</code>属性，添加<code>http</code>。</p><h2 id="使用ssl"><a href="#使用ssl" class="headerlink" title="使用ssl"></a>使用ssl</h2><p><strong>使用keytool生成证书</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成证书，别名：cas 算法：RSA key密码：123456 存储库密码：123456 存储库位置：D/cas/keystore</span></span><br><span class="line">keytool -genkeypair -<span class="built_in">alias</span> cas -keyalg RSA -keypass 123456 -storepass 123456 -keystore D:/cas/keystore</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出证书 别名：cas 存储库位置：D/cas/keystore 存储库密码：123456 导出的证书位置：D:/cas/cas.cer</span></span><br><span class="line">keytool -exportcert -<span class="built_in">alias</span> cas -keystore D:/cas/keystore -storepass 123456 -file D:/cas/cas.cer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将生成的证书导入jdk的证书库，jdk证书库的默认密码为changeit</span></span><br><span class="line">keytool -importcert -keystore D:/util/jdk/openJDK11/lib/security/cacerts -file D:/cas/cas.cer -<span class="built_in">alias</span> cas</span><br></pre></td></tr></table></figure><p><strong>修改cas配置文件</strong></p><p>修改<code>src/main/resources/application.yml</code>，添加如下配置，用于覆盖掉默认的<code>ssl</code>配置。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">ssl:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">key-store:</span> <span class="string">file:D:/cas/keystore</span></span><br><span class="line">    <span class="attr">key-store-password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">key-password:</span> <span class="number">123456</span></span><br></pre></td></tr></table></figure><p><strong>设置域名映射</strong></p><p>修改<code>C:\Windows\System32\drivers\etc\hosts</code>，添加域名映射<code>127.0.0.1  sso.rhythm.com</code>；</p><p>刷新dns：<code>ipconfig /flushdns</code></p><p><strong>重新编译运行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew[.bat] clean build run</span><br></pre></td></tr></table></figure><p>启动成功后，访问<code>https://sso.rhythm.com:8443</code>。</p><h2 id="使用jdbc验证账号密码"><a href="#使用jdbc验证账号密码" class="headerlink" title="使用jdbc验证账号密码"></a>使用jdbc验证账号密码</h2><p><strong><code>build.gradle</code>配置文件中<code>dependencies</code>添加配置</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// jdbc验证账号密码</span><br><span class="line">implementation &quot;org.apereo.cas:cas-server-support-jdbc:$&#123;project.&#x27;cas.version&#x27;&#125;&quot;</span><br><span class="line">implementation &quot;org.apereo.cas:cas-server-support-jdbc-drivers:$&#123;project.&#x27;cas.version&#x27;&#125;&quot;</span><br></pre></td></tr></table></figure><p><strong>修改<code>src/main/resources/application.yml</code>，添加如下配置，用于覆盖默认的安全策略</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cas:</span></span><br><span class="line">  <span class="attr">authn:</span></span><br><span class="line">    <span class="attr">jdbc:</span> <span class="comment"># 使用jdbc验证账号密码</span></span><br><span class="line">      <span class="attr">query:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">jdbc:oracle:thin:@172.17.0.3:1521:ORCL</span></span><br><span class="line">          <span class="attr">driver-class:</span> <span class="string">oracle.jdbc.driver.OracleDriver</span></span><br><span class="line">          <span class="attr">dialect:</span> <span class="string">org.hibernate.dialect.Oracle10gDialect</span></span><br><span class="line">          <span class="attr">user:</span> <span class="string">zs</span></span><br><span class="line">          <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">          <span class="attr">password-encoder:</span></span><br><span class="line">            <span class="attr">type:</span> <span class="string">DEFAULT</span></span><br><span class="line">            <span class="attr">encoding-algorithm:</span> <span class="string">MD5</span> <span class="comment"># 密码加密算法</span></span><br><span class="line">          <span class="attr">field-password:</span> <span class="string">PASSWORD_</span></span><br><span class="line">          <span class="attr">sql:</span> <span class="string">select</span> <span class="string">t.PASSWORD_</span> <span class="string">from</span> <span class="string">T_USER_</span> <span class="string">t</span> <span class="string">where</span> <span class="string">lower(t.ACCOUNT_)</span> <span class="string">=</span> <span class="string">lower(?)</span> <span class="string">and</span> <span class="string">t.STATUS_</span> <span class="string">=</span> <span class="string">&#x27;Y&#x27;</span></span><br><span class="line">    <span class="attr">accept:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span> <span class="comment"># 禁用默认的账户名密码</span></span><br></pre></td></tr></table></figure><p><strong>重新编译运行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew[.bat] clean build run</span><br></pre></td></tr></table></figure><p>启动成功后，访问<code>https://localhost:8443</code>，并使用数据库中的账号密码登录。</p><h2 id="自定义登录页面"><a href="#自定义登录页面" class="headerlink" title="自定义登录页面"></a>自定义登录页面</h2><p>在<code>src/main/resources/</code>下新建<code>templates/login</code>目录，在新建的<code>login</code>目录下新建登录页面<code>casLoginView.html</code>，页面使用的静态资源方位<code>/src/main/resources/static/</code>目录下，再参考默认的登录页面（<code>build/cas-resources/templates/login/casLoginView.html</code>）开发自己的登录页面。</p><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> <span class="string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        *&#123; <span class="attribute">padding</span>:<span class="number">0</span>; <span class="attribute">margin</span>:<span class="number">0</span>; <span class="attribute">border</span>:<span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123; <span class="attribute">background</span>:<span class="number">#153767</span>; <span class="attribute">width</span>:<span class="number">100%</span>; &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span>&#123; <span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">images/bg_1.jpg</span>) no-repeat top center; <span class="attribute">width</span>:<span class="number">100%</span>; <span class="attribute">min-height</span>:<span class="number">610px</span>;_height:<span class="number">610px</span>;&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login</span>&#123;<span class="attribute">width</span>:<span class="number">422px</span>;<span class="attribute">padding</span>:<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">48px</span>; <span class="attribute">height</span>:<span class="number">200px</span>; <span class="attribute">position</span>:relative; <span class="attribute">margin</span>:<span class="number">0</span> auto;<span class="attribute">top</span>:<span class="number">250px</span>;&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.wen</span>&#123; <span class="attribute">color</span>:<span class="number">#c9d9e4</span>; <span class="attribute">font-size</span>:<span class="number">12px</span>; <span class="attribute">font-weight</span>:bold; <span class="attribute">height</span>:<span class="number">72px</span>; <span class="attribute">overflow</span>:hidden;&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.denglu</span>&#123; <span class="attribute">position</span>:absolute; <span class="attribute">cursor</span>: pointer; <span class="attribute">bottom</span>:<span class="number">40px</span>; <span class="attribute">right</span>:<span class="number">40px</span>; <span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">images/login_1.jpg</span>) no-repeat; <span class="attribute">width</span>:<span class="number">78px</span>; <span class="attribute">height</span>:<span class="number">60px</span>; <span class="attribute">text-indent</span>:-<span class="number">999px</span>; <span class="attribute">overflow</span>:hidden; <span class="attribute">margin</span>:<span class="number">0</span>; <span class="attribute">padding</span>:<span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login</span> <span class="selector-tag">ul</span>&#123; <span class="attribute">list-style</span>:none; <span class="attribute">padding-top</span>:<span class="number">5px</span>;&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123; <span class="attribute">float</span><span class="selector-pseudo">:left</span>; <span class="attribute">height</span>:<span class="number">30px</span>; <span class="attribute">width</span>:<span class="number">100%</span>; <span class="attribute">overflow</span>:hidden;&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">span</span>&#123; <span class="attribute">float</span><span class="selector-pseudo">:left</span>; <span class="attribute">width</span>:<span class="number">60px</span>; <span class="attribute">line-height</span>:<span class="number">22px</span>; <span class="attribute">color</span>:<span class="number">#fff</span>; <span class="attribute">font-size</span>:<span class="number">12px</span>;&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">input</span>&#123; <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#163865</span>; <span class="attribute">background</span>:<span class="number">#88adc0</span>; <span class="attribute">width</span>:<span class="number">115px</span>; <span class="attribute">height</span>:<span class="number">20px</span>; <span class="attribute">line-height</span>:<span class="number">17px</span>;&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">img</span>&#123;<span class="attribute">position</span>:absolute; <span class="attribute">bottom</span>:<span class="number">37px</span>; <span class="attribute">right</span>:<span class="number">145px</span>; <span class="attribute">width</span>:<span class="number">110px</span>; <span class="attribute">height</span>:<span class="number">30px</span>; <span class="attribute">line-height</span>:<span class="number">22px</span>;&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.STYLE1</span> &#123;<span class="attribute">font-size</span>: <span class="number">16px</span>&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.img_captcha</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#captchawordimage&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">reloadCaptchaImage</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">reloadCaptchaImage</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">reloadCaptchaImage</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> path = <span class="string">&quot;captcha?ct=&quot;</span>+ <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#captchawordimage&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;src&quot;</span>, path);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wen&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;STYLE1&quot;</span>&gt;</span>· <span class="tag">&lt;/<span class="name">span</span>&gt;</span>系统1<span class="tag">&lt;<span class="name">br</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;STYLE1&quot;</span>&gt;</span>·<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            系统2 <span class="tag">&lt;<span class="name">br</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;STYLE1&quot;</span>&gt;</span>·<span class="tag">&lt;/<span class="name">span</span>&gt;</span> 系统3</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;fm1&quot;</span> <span class="attr">action</span>=<span class="string">&quot;login&quot;</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;login(service=$&#123;param.service&#125;)&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>帐 户：<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">style</span>=<span class="string">&quot;width: 215px;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>密 码：<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">style</span>=<span class="string">&quot;width: 215px;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>验证码：<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">style</span>=<span class="string">&quot;width: 80px;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;captchaword&quot;</span> <span class="attr">name</span>=<span class="string">&quot;captchaword&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;captchawordimage&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图片验证码&quot;</span> <span class="attr">class</span>=<span class="string">&quot;img_captcha&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lt&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;loginTicket&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;execution&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;flowExecutionKey&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;_eventId&quot;</span> <span class="attr">value</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;denglu&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;status&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position: absolute; left: 110px; top: 161px; font-family: Verdana, 宋体, Arial, Sans; font-size: 10pt; color: red&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;errorPanel&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;flowRequestContext.messageContext.hasErrorMessages()&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:each</span>=<span class="string">&quot;message : $&#123;flowRequestContext.messageContext.allMessages&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">th:utext</span>=<span class="string">&quot;#&#123;$&#123;message.text&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">                    Error Message Text</span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;param.ve + &#x27;&#x27;&#125; eq &#x27;1&#x27;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>验证码错误！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="注入bean到spring容器"><a href="#注入bean到spring容器" class="headerlink" title="注入bean到spring容器"></a>注入bean到spring容器</h2><p>在<code>src/main/java</code>目录下新建bean后，不会注入到spring容器中，需要在<code>src/main/resources/META-INF/spring.factories</code>文件中进行配置。</p><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.boot.autoconfigure.EnableAutoConfiguration=\</span><br><span class="line">  org.apereo.cas.config.CasOverlayOverrideConfiguration,\</span><br><span class="line">  com.rhythm.controller.CaptchaController,\</span><br><span class="line">  com.rhythm.filters.CaptchaValidateFilter,\</span><br><span class="line">  com.rhythm.config.FilterConfig</span><br></pre></td></tr></table></figure><h1 id="cas客户端"><a href="#cas客户端" class="headerlink" title="cas客户端"></a>cas客户端</h1><p><strong>java-client：</strong><code>https://github.com/apereo/java-cas-client</code></p><h2 id="使用web-xml进行配置"><a href="#使用web-xml进行配置" class="headerlink" title="使用web.xml进行配置"></a>使用<code>web.xml</code>进行配置</h2><h3 id="引入maven依赖"><a href="#引入maven依赖" class="headerlink" title="引入maven依赖"></a>引入maven依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jasig.cas.client<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cas-client-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;java.cas.client.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="web-xml中添加配置"><a href="#web-xml中添加配置" class="headerlink" title="web.xml中添加配置"></a>web.xml中添加配置</h3><p><strong>配置身份验证过滤器<code>AuthenticationFilter</code></strong></p><ul><li>casServerUrlPrefix：指定cas server的地址</li><li>service：指定验证成功后跳转的地址</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CAS Authentication Filter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apereo.cas.client.authentication.AuthenticationFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>casServerUrlPrefix<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>https://battags.ad.ess.rutgers.edu:8443/cas<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>service<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>http://www.acme-client.com<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CAS Authentication Filter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>配置票据验证过滤器<code>TicketValidationFilter</code></strong></p><ul><li>casServerUrlPrefix：指定cas server的地址</li><li>service：指定验证成功后跳转的地址</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CAS Validation Filter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apereo.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>casServerUrlPrefix<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>https://battags.ad.ess.rutgers.edu:8443/cas<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>service<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>http://www.acme-client.com<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CAS Validation Filter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>配置请求包装过滤器<code>HttpServletRequestWrapperFilter</code></strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CAS HttpServletRequest Wrapper Filter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apereo.cas.client.HttpServletRequestWrapperFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CAS HttpServletRequest Wrapper Filter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>配置断言<code>AssertionThreadLocalFilter</code></strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CAS Assertion Thread Local Filter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apereo.cas.client.AssertionThreadLocalFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CAS Assertion Thread Local Filter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>配置单点登出过滤器<code>SingleSignOutFilter</code>和监听器<code>SingleSignOutHttpSessionListener</code></strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CAS Single Sign Out Filter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apereo.cas.client.session.SingleSignOutFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CAS Single Sign Out Filter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.apereo.cas.client.session.SingleSignOutHttpSessionListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用spring进行配置"><a href="#使用spring进行配置" class="headerlink" title="使用spring进行配置"></a>使用spring进行配置</h2><p>在<code>web.xml</code>配置的基础上，可以使用<code>spring ioc</code>配置来代替<code>AuthenticationFilter</code>和<code>TicketValidationFilter</code>。</p><p><strong>注册<code>AuthenticationFilter</code>和<code>TicketValidationFilter</code>Bean</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CasConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean(&quot;authenticationFilter&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> AuthenticationFilter <span class="title function_">authenticationFilter</span><span class="params">(ParamService paramService)</span> &#123;</span><br><span class="line">        <span class="type">AuthenticationFilter</span> <span class="variable">authenticationFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AuthenticationFilter</span>();</span><br><span class="line">        authenticationFilter.setCasServerUrlPrefix(<span class="string">&quot;https://battags.ad.ess.rutgers.edu:8443/cas&quot;</span>);</span><br><span class="line">        authenticationFilter.setService(<span class="string">&quot;http://www.acme-client.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> authenticationFilter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;ticketValidationFilter&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Cas20ProxyReceivingTicketValidationFilter <span class="title function_">validationFilter</span><span class="params">(ParamService paramService)</span> &#123;</span><br><span class="line">paramService.getParamValueAsString(<span class="string">&quot;SSO_SERVER_PREFIX_URL&quot;</span>);</span><br><span class="line">        <span class="type">Cas20ProxyReceivingTicketValidationFilter</span> <span class="variable">validationFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cas20ProxyReceivingTicketValidationFilter</span>();</span><br><span class="line">        validationFilter.setService(<span class="string">&quot;http://www.acme-client.com&quot;</span>);</span><br><span class="line">        <span class="type">Cas20ServiceTicketValidator</span> <span class="variable">validator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cas20ServiceTicketValidator</span>(<span class="string">&quot;https://battags.ad.ess.rutgers.edu:8443/cas&quot;</span>);</span><br><span class="line">        validationFilter.setTicketValidator(validator);</span><br><span class="line">        <span class="keyword">return</span> validationFilter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>修改web.xml配置</strong></p><p><code>web.xml</code>中删除<code>AuthenticationFilter</code>和<code>TicketValidationFilter</code>相关配置，并添加如下配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CAS Authentication Filter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.DelegatingFilterProxy<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>targetBeanName<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>authenticationFilter<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CAS Authentication Filter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CAS Validation Filter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.DelegatingFilterProxy<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>targetBeanName<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>ticketValidationFilter<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CAS Validation Filter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用springboot进行配置"><a href="#使用springboot进行配置" class="headerlink" title="使用springboot进行配置"></a>使用springboot进行配置</h2><p><strong>maven依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jasig.cas.client<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cas-client-support-springboot<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;java.cas.client.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>application.yml配置</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cas:</span></span><br><span class="line">  <span class="attr">server-url-prefix:</span> <span class="string">http://localhost:8443/cas</span></span><br><span class="line">  <span class="attr">server-login-url:</span> <span class="string">http://localhost:8443/cas/login</span></span><br><span class="line">  <span class="attr">client-host-url:</span> <span class="string">http://localhost:8080</span></span><br><span class="line">  <span class="attr">validation-type:</span> <span class="string">CAS</span></span><br><span class="line">  <span class="attr">single-logout:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><strong>其他配置</strong></p><p>启动类上添加<code>@EnableCasClient</code>注解</p>]]></content>
      
      
      <categories>
          
          <category> 单点登录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sso </tag>
            
            <tag> cas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tars入门</title>
      <link href="/2022/09/08/microservice/tars%E5%85%A5%E9%97%A8/"/>
      <url>/2022/09/08/microservice/tars%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>TARS 是 Linux 基金会的开源项目，它是基于名字服务使用 TARS 协议的高性能 RPC 开发框架，配套一体化的运营管理平台，并通过伸缩调度，实现运维半托管服务。</p><p>TARS 是腾讯从 2008 年到今天一直在使用的后台逻辑层的统一应用框架，覆盖腾讯 100 多个产品。目前支持 C++,Java,PHP,Nodejs,Go 语言。该框架为用户提供了涉及到开发、运维、以及测试的一整套解决方案，帮助一个产品或者服务快速开发、部署、测试、上线。 它集可扩展协议编解码、高性能 RPC 通信框架、名字路由与发现、发布监控、日志统计、配置管理等于一体，通过它可以快速用微服务的方式构建自己的稳定可靠的分布式应用，并实现完整有效的服务治理。</p><p>目前该框架在腾讯内部，各大核心业务都在使用，颇受欢迎，基于该框架部署运行的服务节点规模达到上万个。</p></blockquote><p>官方文档：<code>https://doc.tarsyun.com/</code></p><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><blockquote><p>使用Docker部署</p></blockquote><h2 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h2><blockquote><p>Tars 框架的数据最终都存储在 mysql 中, 因此需要安装 mysql。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker network create tars</span><br><span class="line">docker pull mysql:5.7</span><br><span class="line">docker run --name mysql01 -e MYSQL_ROOT_PASSWORD=root -d -p 3306:3306 --network tars \</span><br><span class="line">--privileged=<span class="literal">true</span> -v /tmp/mysql/log:/var/log/mysql -v /tmp/mysql/data:/var/lib/mysql \</span><br><span class="line">-v /tmp/mysql/conf:/etc/mysql/conf.d mysql:5.7</span><br><span class="line"><span class="comment"># 查看mysql的ip(IPAddress属性)</span></span><br><span class="line">docker inspect mysql01</span><br></pre></td></tr></table></figure><h2 id="安装框架服务"><a href="#安装框架服务" class="headerlink" title="安装框架服务"></a>安装框架服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">docker pull tarscloud/framework:latest</span><br><span class="line"><span class="comment"># mysql的配置换成自己的</span></span><br><span class="line"><span class="comment"># 3000端口为web程序端口</span></span><br><span class="line"><span class="comment"># 3001端口为web授权相关服务端口(docker&gt;=v2.4.7可以不暴露该端口)</span></span><br><span class="line"><span class="comment"># 安装完毕后, 访问 http://$&#123;your_machine_ip&#125;:3000 打开 web 管理平台</span></span><br><span class="line">docker run -d \</span><br><span class="line">    --name=tars-framework \</span><br><span class="line">    --network=tars \</span><br><span class="line">    -e MYSQL_HOST=<span class="string">&quot;172.19.0.2&quot;</span> \</span><br><span class="line">    -e MYSQL_ROOT_PASSWORD=<span class="string">&quot;root&quot;</span> \</span><br><span class="line">    -e MYSQL_USER=root \</span><br><span class="line">    -e MYSQL_PORT=3306 \</span><br><span class="line">    -e REBUILD=<span class="literal">false</span> \</span><br><span class="line">    -e INET=eth0 \</span><br><span class="line">    -e SLAVE=<span class="literal">false</span> \</span><br><span class="line">    -v /tmp/tars/framework:/data/tars \</span><br><span class="line">    -p 3000:3000 \</span><br><span class="line">    -p 3001:3001 \</span><br><span class="line">    tarscloud/framework:latest</span><br></pre></td></tr></table></figure><h2 id="安装应用节点"><a href="#安装应用节点" class="headerlink" title="安装应用节点"></a>安装应用节点</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker pull tarscloud/tars-node:latest</span><br><span class="line">docker run -d \</span><br><span class="line">    --name=tars-node \</span><br><span class="line">    --network=tars \</span><br><span class="line">    -e INET=eth0 \</span><br><span class="line">    -e WEB_HOST=<span class="string">&quot;http://172.19.0.3:3000&quot;</span> \</span><br><span class="line">    -v /tmp/tars:/data/tars \</span><br><span class="line">    -p 9000-9010:9000-9010 \</span><br><span class="line">    tarscloud/tars-node:latest</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tars </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch入门</title>
      <link href="/2022/08/31/middleware/ElasticSearch%E5%85%A5%E9%97%A8/"/>
      <url>/2022/08/31/middleware/ElasticSearch%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h1><blockquote><p><strong>官网描述：</strong></p><p>​Elasticsearch 是一个分布式、RESTful 风格的搜索和数据分析引擎，能够解决不断涌现出的各种用例。 作为 Elastic Stack 的核心，它集中存储您的数据，帮助您发现意料之中以及意料之外的情况。</p><p><strong>个人理解：</strong></p><p>​<strong>NoSQL数据库</strong>和<strong>搜索引擎</strong>的结合体，底层基于<code>Lucence</code>(全文搜索引擎)，采用<code>Java</code>开发，屏蔽了底层<code>Lucence</code>复杂的使用方式，提供了一套简洁的<code>RESTful API</code>。</p></blockquote><p>官网地址：<code>https://www.elastic.co/cn/elasticsearch/</code></p><p>下载地址：<code>https://www.elastic.co/cn/downloads/elasticsearch</code></p><p>中文文档（版本比较旧）：<code>https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html</code></p><h2 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h2><ul><li><p><strong>Near Realtime（NRT）</strong> 近实时。数据提交索引后，立马就可以搜索到。</p></li><li><p><strong>Cluster 集群</strong>，一个集群由一个唯一的名字标识，默认为“elasticsearch”。集群名称非常重要，具有相同集群名的节点才会组成一个集群。集群名称可以在配置文件中指定。</p></li><li><p><strong>Node 节点</strong>：存储集群的数据，参与集群的索引和搜索功能。像集群有名字，节点也有自己的名称，默认在启动时会以一个随机的UUID的前七个字符作为节点的名字，你可以为其指定任意的名字。通过集群名在网络中发现同伴组成集群。一个节点也可是集群。</p></li><li><p><strong>Index 索引</strong>: 一个索引是一个文档的集合（等同于solr中的集合）。每个索引有唯一的名字，通过这个名字来操作它。一个集群中可以有任意多个索引。</p></li><li><p><strong>Type 类型</strong>：指在一个索引中，可以索引不同类型的文档，如用户数据、博客数据。从6.0.0 版本起已废弃，一个索引中只存放一类数据。</p></li><li><p><strong>Document 文档</strong>：被索引的一条数据，索引的基本信息单元，以JSON格式来表示。</p></li><li><p><strong>Shard 分片</strong>：在创建一个索引时可以指定分成多少个分片来存储。每个分片本身也是一个功能完善且独立的“索引”，可以被放置在集群的任意节点上。</p></li><li><p><strong>Replication 备份</strong>: 一个分片可以有多个备份（副本）。</p></li></ul><hr><p><strong>关系型数据库与es对比：</strong></p><table><thead><tr><th align="center">RDBMS</th><th align="center">ElasticSearch</th></tr></thead><tbody><tr><td align="center">数据库(database)</td><td align="center">索引(index)</td></tr><tr><td align="center">表(table)</td><td align="center">类型(type)(新版本中已废弃)</td></tr><tr><td align="center">行(row)</td><td align="center">文档(document)</td></tr><tr><td align="center">列(column)</td><td align="center">字段(field)</td></tr><tr><td align="center">表结构(schema)</td><td align="center">映射(mapping)</td></tr><tr><td align="center">索引（正向索引）</td><td align="center">反向索引（倒排索引）</td></tr><tr><td align="center">SQL</td><td align="center">查询DSL</td></tr><tr><td align="center">SELECT * FROM TABLE…</td><td align="center">GET http:&#x2F;&#x2F;…</td></tr><tr><td align="center">UPDATE TABLE SET…</td><td align="center">PUT http:&#x2F;&#x2F;…</td></tr><tr><td align="center">DELETE FROM TABLE…</td><td align="center">DELETE http:&#x2F;&#x2F;…</td></tr></tbody></table><h2 id="RESTful请求类型"><a href="#RESTful请求类型" class="headerlink" title="RESTful请求类型"></a>RESTful请求类型</h2><ul><li><strong>GET</strong>：查询</li><li><strong>POST</strong>：新建</li><li><strong>PUT</strong>：更新</li><li><strong>DELETE</strong>：删除</li></ul><h1 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h1><blockquote><p>可使用安装包安装，本文档使用Docker，版本为8.4.1</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取镜像</span></span><br><span class="line">docker pull docker.elastic.co/elasticsearch/elasticsearch:8.4.1</span><br></pre></td></tr></table></figure><h1 id="3-启动"><a href="#3-启动" class="headerlink" title="3. 启动"></a>3. 启动</h1><h2 id="3-1-单节点集群启动"><a href="#3-1-单节点集群启动" class="headerlink" title="3.1.  单节点集群启动"></a>3.1.  单节点集群启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建docker network</span></span><br><span class="line">docker network create elastic</span><br><span class="line"><span class="comment"># 启动es容器，启动成功后会在终端输出elastic用户的密码、配置集群的token、Kibana的注册token等信息</span></span><br><span class="line"><span class="comment"># 这些信息仅在第一次启动es时显示，请妥善保存这些信息</span></span><br><span class="line">docker run -it --name es01 --net elastic -p 9200:9200 -p 9300:9300 \</span><br><span class="line">docker.elastic.co/elasticsearch/elasticsearch:8.4.1</span><br><span class="line"></span><br><span class="line">docker run -it --name es01 --net es -p 9200:9200 -p 9300:9300 \</span><br><span class="line">-v /tmp/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml \</span><br><span class="line">docker.elastic.co/elasticsearch/elasticsearch:8.4.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新开启一个终端</span></span><br><span class="line"><span class="comment"># 将生成的ca证书复制到当前目录</span></span><br><span class="line">docker <span class="built_in">cp</span> es01:/usr/share/elasticsearch/config/certs/http_ca.crt .</span><br><span class="line"><span class="comment"># 访问es服务器，返回json串</span></span><br><span class="line">curl --cacert http_ca.crt -u elastic https://localhost:9200</span><br></pre></td></tr></table></figure><p><img src="/es%E5%90%AF%E5%8A%A8%E6%88%90%E5%8A%9F.jpg" alt="es启动成功"></p><h3 id="3-1-1-Docker启动失败"><a href="#3-1-1-Docker启动失败" class="headerlink" title="3.1.1.  Docker启动失败"></a>3.1.1.  Docker启动失败</h3><blockquote><p><strong>报错：</strong>max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</p></blockquote><p><strong>解决方法：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改值</span></span><br><span class="line">sysctl -w vm.max_map_count=262144</span><br><span class="line"><span class="comment"># 查看修改后的值</span></span><br><span class="line">sysctl -a | grep vm.max_map_count</span><br><span class="line"><span class="comment"># 重新加载</span></span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><h2 id="3-2-向单节点集群中加入新节点"><a href="#3-2-向单节点集群中加入新节点" class="headerlink" title="3.2. 向单节点集群中加入新节点"></a>3.2. 向单节点集群中加入新节点</h2><p><strong>注意：</strong>3.1.步启动单节点集群后，生成的<code>token</code>在其他节点加入该集群时使用，有效期为30分钟，失效后需要重新生成。</p><p><strong>生成token：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it es01 /bin/bash</span><br><span class="line"><span class="comment"># 生成新token</span></span><br><span class="line">./bin/elasticsearch-create-enrollment-token -s node</span><br></pre></td></tr></table></figure><p><strong>启动新节点并加入集群：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将token替换为自己的</span></span><br><span class="line">docker run -it -e ENROLLMENT_TOKEN=<span class="string">&quot;token&quot;</span> --name es02 --net elastic  docker.elastic.co/elasticsearch/elasticsearch:8.4.1</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-3-用Docker-Compose启动多节点集群"><a href="#3-3-用Docker-Compose启动多节点集群" class="headerlink" title="3.3. 用Docker Compose启动多节点集群"></a>3.3. 用Docker Compose启动多节点集群</h2><p>参考官方文档<code>https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#docker-compose-file</code></p><h1 id="Kibana"><a href="#Kibana" class="headerlink" title="Kibana"></a>Kibana</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Kibana与es配合使用，用于可视化es的数据，并附带es的开发工具。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取kibana镜像</span></span><br><span class="line">docker pull docker.elastic.co/kibana/kibana:8.4.1</span><br><span class="line"><span class="comment"># 启动kibana容器</span></span><br><span class="line">docker run -d --name kib01 --net elastic -p 5601:5601 \</span><br><span class="line">-v /usr/share/kibana/config:/usr/share/kibana/config \</span><br><span class="line">docker.elastic.co/kibana/kibana:8.4.1</span><br><span class="line"><span class="comment"># 查看kibana访问连接</span></span><br><span class="line">docker logs kib01</span><br></pre></td></tr></table></figure><h2 id="设置中文"><a href="#设置中文" class="headerlink" title="设置中文"></a>设置中文</h2><p>配置文件<code>kibana.yml</code>中添加<code>i18n.locale: zh-CN</code></p><h2 id="es重新生成kibana连接用的token"><a href="#es重新生成kibana连接用的token" class="headerlink" title="es重新生成kibana连接用的token"></a>es重新生成kibana连接用的token</h2><p><code>./bin/elasticsearch-create-enrollment-token -s kibana</code></p><h1 id="es命令"><a href="#es命令" class="headerlink" title="es命令"></a>es命令</h1><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><h3 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">PUT /myindex02// 索引名称</span><br><span class="line">&#123;</span><br><span class="line">  &quot;settings&quot;: &#123;// 索引设置配置</span><br><span class="line">    &quot;number_of_shards&quot;: 1,</span><br><span class="line">    &quot;number_of_replicas&quot;: 1</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;mappings&quot;: &#123; // 索引映射配置</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;id&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;integer&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;name&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;age&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;integer&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查找索引"><a href="#查找索引" class="headerlink" title="查找索引"></a>查找索引</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET /myindex02 // 查找整个索引信息</span><br><span class="line">GET /myindex02/_settings // 查找索引设置信息</span><br><span class="line">GET /myindex02/_mapping // 查找索引映射信息</span><br></pre></td></tr></table></figure><h3 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE /myindex01</span><br></pre></td></tr></table></figure><h2 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h2><p>映射是定义文档及其包含的字段如何存储和索引的过程，分为<strong>动态映射</strong>和<strong>显示映射</strong>。</p><h3 id="动态映射"><a href="#动态映射" class="headerlink" title="动态映射"></a>动态映射</h3><p>即由es自动创建index，并自动发现index的映射。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PUT /data/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;count&quot;: 5</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /data</span><br></pre></td></tr></table></figure><h3 id="显示映射"><a href="#显示映射" class="headerlink" title="显示映射"></a>显示映射</h3><p>即创建index时显示指定映射。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PUT /myindex001</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;age&quot;: &#123; &quot;type&quot;: &quot;integer&quot; &#125;,</span><br><span class="line">      &quot;email&quot;: &#123; &quot;type&quot;: &quot;keyword&quot;&#125;,</span><br><span class="line">      &quot;name&quot;: &#123; &quot;type&quot;: &quot;text&quot;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /myindex001/_mapping</span><br></pre></td></tr></table></figure><h3 id="字段数据类型"><a href="#字段数据类型" class="headerlink" title="字段数据类型"></a>字段数据类型</h3><p>包括Binary、Boolean、Date、Keyword、Text、Range等类型。</p><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><h3 id="添加-x2F-更新文档"><a href="#添加-x2F-更新文档" class="headerlink" title="添加&#x2F;更新文档"></a>添加&#x2F;更新文档</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /myindex02/_doc/1 // 指定文档id为1，不存在则添加，存在则更新</span><br><span class="line">&#123;</span><br><span class="line">  &quot;id&quot;: 1,</span><br><span class="line">  &quot;name&quot;: &quot;zhangsan&quot;,</span><br><span class="line">  &quot;age&quot; : 20</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST /myindex02/_doc // 自动生成文档id，不存在则添加，存在则更新</span><br><span class="line">&#123;</span><br><span class="line">  &quot;id&quot;: 2,</span><br><span class="line">  &quot;name&quot;: &quot;lisi&quot;,</span><br><span class="line">  &quot;age&quot; : 21</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取文档"><a href="#获取文档" class="headerlink" title="获取文档"></a>获取文档</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 指定文档id</span><br><span class="line">GET /myindex02/_doc/1</span><br><span class="line"></span><br><span class="line">// 查询张三的信息</span><br><span class="line">GET /myindex02/_search?from=0&amp;size=2</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;name&quot;: &quot;zhangsan&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除文档"><a href="#删除文档" class="headerlink" title="删除文档"></a>删除文档</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE /myindex02/_doc/1 // 指定文档id</span><br></pre></td></tr></table></figure><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><h3 id="组合查询"><a href="#组合查询" class="headerlink" title="组合查询"></a>组合查询</h3><h4 id="bool查询"><a href="#bool查询" class="headerlink" title="bool查询"></a>bool查询</h4><p>bool即布尔，用作组合多个查询条件。</p><hr><p><strong>关键字</strong></p><ul><li>must: 必须匹配，参与计算评分；</li><li>filter：过滤查询结果，不参与计算评分；</li><li>should：选择性匹配，即必须满足其中一个条件，参与计算评分；</li><li>must_not：必须不匹配，不参与计算评分；</li></ul><hr><p><strong>查询示例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">GET /myindex02/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;from&quot;: 0,</span><br><span class="line">  &quot;size&quot;: 20,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;must&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;term&quot;: &#123;</span><br><span class="line">            &quot;name&quot;: &quot;zhangsan&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      &quot;should&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;term&quot;: &#123;</span><br><span class="line">            &quot;age&quot;: 21</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;term&quot;: &#123;</span><br><span class="line">            &quot;age&quot;: 22</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      &quot;must_not&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;range&quot;: &#123;</span><br><span class="line">            &quot;id&quot;: &#123;</span><br><span class="line">              &quot;gte&quot;: 10,</span><br><span class="line">              &quot;lte&quot;: 20</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="术语查询"><a href="#术语查询" class="headerlink" title="术语查询"></a>术语查询</h3><p><strong>exists</strong></p><p>查询给定字段是否存在；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /myindex02/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;exists&quot;: &#123;</span><br><span class="line">      &quot;field&quot;: &quot;name&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>fuzzy</strong></p><p>即模糊查询，查询场景如下：</p><ul><li>改变一个字符（<strong>b</strong> ox → <strong>f</strong> ox）</li><li>删除一个字符（<strong>b</strong>缺少 → 缺少）</li><li>插入一个字符 (sic → sic <strong>k</strong> )</li><li>转置两个相邻字符 ( <strong>ac</strong> t → <strong>ca</strong> t)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /myindex02/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;fuzzy&quot;: &#123;</span><br><span class="line">      &quot;name&quot;: &quot;zhangan&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>ids</strong></p><p>通过文档id集合查询；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /myindex02/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;ids&quot;: &#123;</span><br><span class="line">      &quot;values&quot;: [1, 2, 3]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>prefix</strong></p><p>前缀查询；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /myindex02/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;prefix&quot;: &#123;</span><br><span class="line">      &quot;name&quot;: &quot;zhang&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>range</strong></p><p>范围查询；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /myindex02/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;range&quot;: &#123;</span><br><span class="line">      &quot;age&quot;: &#123;</span><br><span class="line">        &quot;gte&quot;: 10,</span><br><span class="line">        &quot;lte&quot;: 30</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>term</strong></p><p>精确查询；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /myindex02/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;name&quot;: &quot;zhangsan&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>terms</strong></p><p>增强term查询；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /myindex02/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;terms&quot;: &#123;</span><br><span class="line">      &quot;name&quot;: [&quot;zhangsan&quot;, &quot;lisi&quot;, &quot;wangwu&quot;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>wildcard</strong></p><p>通配符查询；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /myindex02/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;wildcard&quot;: &#123;</span><br><span class="line">      &quot;name&quot;: &quot;zhan*&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="聚合查询"><a href="#聚合查询" class="headerlink" title="聚合查询"></a>聚合查询</h3><h4 id="桶聚合"><a href="#桶聚合" class="headerlink" title="桶聚合"></a>桶聚合</h4><p><strong>terms桶聚合</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /myindex02/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;size&quot;: 0, </span><br><span class="line">  &quot;aggs&quot;: &#123;</span><br><span class="line">    &quot;myaggs&quot;: &#123;</span><br><span class="line">        &quot;terms&quot;: &#123;</span><br><span class="line">          &quot;field&quot;: &quot;age&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>composite桶聚合</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">GET /myindex02/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;aggs&quot;: &#123;</span><br><span class="line">    &quot;aggs1&quot;: &#123;</span><br><span class="line">      &quot;composite&quot;: &#123;</span><br><span class="line">        &quot;sources&quot;: [</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;a1&quot;: &#123;</span><br><span class="line">              &quot;terms&quot;: &#123;</span><br><span class="line">                &quot;field&quot;: &quot;age&quot;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;a2&quot;: &#123;</span><br><span class="line">              &quot;terms&quot;: &#123;</span><br><span class="line">                &quot;field&quot;: &quot;id&quot;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>嵌套桶聚合</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">GET /myindex02/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;aggs&quot;: &#123;</span><br><span class="line">    &quot;a1&quot;: &#123;</span><br><span class="line">      &quot;terms&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;age&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;aggs&quot;: &#123;</span><br><span class="line">        &quot;a2&quot;: &#123;</span><br><span class="line">          &quot;avg&quot;: &#123;</span><br><span class="line">            &quot;field&quot;: &quot;id&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="指标聚合"><a href="#指标聚合" class="headerlink" title="指标聚合"></a>指标聚合</h4><p><strong>最大值</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /myindex02/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;aggs&quot;: &#123;</span><br><span class="line">    &quot;a1&quot;: &#123;</span><br><span class="line">      &quot;max&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;age&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="curl方式查询"><a href="#curl方式查询" class="headerlink" title="curl方式查询"></a>curl方式查询</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -d表示json数据，json不能换行，且需要用单引号括起来</span></span><br><span class="line">curl -X GET <span class="string">&quot;http://localhost:9200/hostmsg-get-2022.10.08/_search?pretty&quot;</span> -u elastic:YZ*psc521 -H <span class="string">&#x27;Content-Type: application/json&#x27;</span> -d <span class="string">&#x27; </span></span><br><span class="line"><span class="string">&#123;&quot;from&quot;: 0, &quot;size&quot;:1, &quot;query&quot;: &#123;&quot;match&quot;: &#123;&quot;msg&quot;: &quot;000001489810016120006221881*&quot;&#125;&#125;&#125; &#x27;</span></span><br></pre></td></tr></table></figure><h1 id="es-client插件"><a href="#es-client插件" class="headerlink" title="es-client插件"></a>es-client插件</h1><p>Firefox</p>]]></content>
      
      
      <categories>
          
          <category> ElasticSearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES </tag>
            
            <tag> ElasticSearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringMVC替换Struts1</title>
      <link href="/2022/08/30/spring/SpringMVC%E6%9B%BF%E6%8D%A2Struts1/"/>
      <url>/2022/08/30/spring/SpringMVC%E6%9B%BF%E6%8D%A2Struts1/</url>
      
        <content type="html"><![CDATA[<h1 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h1><p>web项目由<code>Spring + Struts1</code>架构变更为<code>Spring + SpringMVC</code>架构。</p><p>Spring版本：5.3.22</p><p>Struts版本：1.3.10</p><h1 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2. 步骤"></a>2. 步骤</h1><h2 id="2-1-调整maven依赖"><a href="#2-1-调整maven依赖" class="headerlink" title="2.1. 调整maven依赖"></a>2.1. 调整maven依赖</h2><p>删除<code>Struts1</code>的依赖，添加<code>SpringMVC</code>的依赖，</p><p><strong>示例Spring + SpringMVC依赖：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-orm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-2-调整配置文件"><a href="#2-2-调整配置文件" class="headerlink" title="2.2. 调整配置文件"></a>2.2. 调整配置文件</h2><h3 id="2-2-1-web-xml"><a href="#2-2-1-web-xml" class="headerlink" title="2.2.1. web.xml"></a>2.2.1. web.xml</h3><p>去掉<code>ActionServlet</code>的配置，添加<code>SpringMVC</code>的配置。</p><p style="color:red">注意：SpringMVC的url-pattern属性要设置为/,表示不拦截jsp请求，/*则会拦截所有请求，包括jsp。</p><p><strong>示例Spring + SpringMVC配置：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring-*.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span></span><br><span class="line">        org.springframework.web.context.ContextLoaderListener</span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-2-spring-beans-xml"><a href="#2-2-2-spring-beans-xml" class="headerlink" title="2.2.2. spring-beans.xml"></a>2.2.2. spring-beans.xml</h3><p><code>Spring</code>的配置文件，配置不扫描<code>Controller</code>类，示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span> <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.xx&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 省略其他配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-3-spring-mvc-xml"><a href="#2-2-3-spring-mvc-xml" class="headerlink" title="2.2.3. spring-mvc.xml"></a>2.2.3. spring-mvc.xml</h3><p>添加<code>SpringMVC</code>的配置文件，示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;</span></span></span><br><span class="line"><span class="string"><span class="tag">            http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">            http://www.springframework.org/schema/beans/spring-beans-2.0.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">            http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">            https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">            http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="string"><span class="tag">            https://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">            http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">            https://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 启用MVC配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 扫描controller --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.xx&quot;</span> <span class="attr">use-default-filters</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置视图解析 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;viewResolver&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 配置文件上传（使用commons-fileupload） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;multipartResolver&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxUploadSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10240&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 启用@AspectJ支持 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置静态资源映射 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/css/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/css/&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/images/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/images/&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/js/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/js/&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-3-调整form-bean"><a href="#2-3-调整form-bean" class="headerlink" title="2.3. 调整form bean"></a>2.3. 调整form bean</h2><p>将<code>Struts</code>的配置文件<code>struts-config.xml</code>中<code>&lt;form-beans&gt;</code>内配置的<code>form bean</code>去掉对<code>ActionForm</code>的继承。</p><p><code>FormFile</code>可用<code>MultipartFile</code>替换。</p><h2 id="2-4-调整Action"><a href="#2-4-调整Action" class="headerlink" title="2.4. 调整Action"></a>2.4. 调整Action</h2><p>​根据<code>Struts</code>的配置文件<code>struts-config.xml</code>中<code>&lt;action-mappings&gt;</code>内配置的<code>path</code>和<code>Action</code>的映射，修改对应的<code>Action</code>。</p><ul><li><p><code>struts-config.xml</code>中<code>Action</code>的<code>path</code>为页面请求路径去除掉<code>.do</code>后的部分，如页面请求路径为<code>/index.do?method=add</code>，则<code>path</code>配置为<code>/index</code>;</p></li><li><p><code>Action</code>不再继承<code>DispatchAction</code>类；</p></li><li><p>根据<code>struts-config.xml</code>中的映射，给<code>Action</code>添加<code>@Controller</code>和<code>@RequestMapping(path)</code>注解；</p></li><li><p><code>Action</code>类内部的方法调整：</p><ul><li><p>添加<code>@RequestMapping</code>注解，<code>value</code>设置为方法名；</p></li><li><p>不再需要<code>ActionMapping</code>参数，<code>SpirngMVC</code>直接返回<code>jsp</code>路径，配合<strong>视图解析器</strong>来返回页面；</p></li><li><p><code>ActionForm</code>参数替换成<code>2.3.步</code>调整后的<code>JavaBean</code>，<code>Spring</code>会自动将参数封装为对应的<code>JavaBean</code>；</p></li><li><p>返回值不再是<code>ActionForward</code>，按情况调整为<code>String</code>或<code>void</code>，用于返回<code>jsp</code>路径或进行其他操作；</p><h2 id="2-5-调整jsp"><a href="#2-5-调整jsp" class="headerlink" title="2.5. 调整jsp"></a>2.5. 调整jsp</h2></li></ul></li></ul><p>​由于<code>struts</code>的<code>ActionServlet</code>拦截的是<code>*.do</code>的请求，而<code>SpringMVC</code>拦截的是<code>/</code>请求，所以<code>jsp</code>中涉及到请求路径的地方都需要调整：</p><ul><li>静态资源使用绝对路径，如<code>$&#123;pageContext.request.contextPath&#125;/css/xx.css</code>；</li><li>请求<code>url</code>由<code>xx.do?method=xx</code>修改为<code>SpringMVC</code>格式，如<code>index.do?method=top&amp;info=1</code>替换为<code>$&#123;pageContext.request.contextPath&#125;/index/top?info=1</code>；</li></ul><h1 id="3-其他"><a href="#3-其他" class="headerlink" title="3. 其他"></a>3. 其他</h1><h2 id="3-1-使用idea批量查找-x2F-替换"><a href="#3-1-使用idea批量查找-x2F-替换" class="headerlink" title="3.1. 使用idea批量查找&#x2F;替换"></a>3.1. 使用idea批量查找&#x2F;替换</h2><p>idea批量查找快捷键：<code>shift + ctrl + f</code></p><p>idea批量替换快捷键：<code>shift + ctrl + r</code></p><p>可以批量查找&#x2F;替换静态资源、请求路径url等；</p><hr><p><strong>批量替换静态资源url示例：</strong></p><p>将<code>src=&quot;js</code>批量替换为<code>src=&quot;$&#123;pageContext.request.contextPath&#125;/js</code>;</p><p>将<code>href=&quot;./css</code>批量替换为<code>href=&quot;$&#123;pageContext.request.contextPath&#125;/css</code>;</p><hr><p><strong>批量替换请求路径示例：</strong></p><p>将<code>.do?method=</code>批量替换为<code>/</code>;</p><p style="color:red;">注意：上面替换请求路径的方式存在问题：若请求路径为`index.do?method=top&info=1`用上面的方法替换过后，请求路径变为`index/top&info=1`,显然在此基础上还需要将`&`替换为`?`；所以，若使用了上面的替换方法，后续需要大量检查测试。</p><h2 id="3-2-请求路径为空的问题"><a href="#3-2-请求路径为空的问题" class="headerlink" title="3.2. 请求路径为空的问题"></a>3.2. 请求路径为空的问题</h2><p>当请求路径为空时，表示提交到当前页面；</p><p>例如：当前页面请求路径为<code>/index/top</code>，页面中<form>表单中<code>action</code>属性的值为<code>?info=1</code>，提交表单后，请求提交路径为<code>/index/top?info=1</code>；</p><p>因此，在修改<code>jsp</code>中的请求路径时，若请求路径为空（可以带参数），则无需调整该路径；</p><h2 id="3-3-规范代码"><a href="#3-3-规范代码" class="headerlink" title="3.3. 规范代码"></a>3.3. 规范代码</h2><p>若时间充裕，可将<code>Action</code>类的统一调整为<code>xxController</code>格式；</p>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringMVC </tag>
            
            <tag> Struts1.x </tag>
            
            <tag> Framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Caffeine入门</title>
      <link href="/2022/08/18/middleware/Caffeine%E5%85%A5%E9%97%A8/"/>
      <url>/2022/08/18/middleware/Caffeine%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h1><blockquote><p>Caffeine是一个基于Java8开发的提供了近乎<strong>最佳命中率</strong>的<strong>高性能</strong>的本地缓存库。</p></blockquote><p>官网：<code>https://github.com/ben-manes/caffeine</code></p><h1 id="2-使用"><a href="#2-使用" class="headerlink" title="2. 使用"></a>2. 使用</h1><h2 id="2-1-maven坐标"><a href="#2-1-maven坐标" class="headerlink" title="2.1. maven坐标"></a>2.1. maven坐标</h2><blockquote><p>jdk11或更高版本使用<code>3.x</code>版本，其他使用<code>2.x</code>版本</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.ben-manes.caffeine<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>caffeine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-2-添加缓存"><a href="#2-2-添加缓存" class="headerlink" title="2.2. 添加缓存"></a>2.2. 添加缓存</h2><blockquote><p>Caffeine提供了四种缓存添加策略：<strong>手动加载</strong>、<strong>自动加载</strong>、<strong>手动异步加载</strong>和<strong>自动异步加载</strong>。</p></blockquote><h3 id="2-2-1-手动加载"><a href="#2-2-1-手动加载" class="headerlink" title="2.2.1. 手动加载"></a>2.2.1. 手动加载</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> <span class="string">&quot;key&quot;</span>;</span><br><span class="line">String value;</span><br><span class="line"><span class="comment">// 定义缓存</span></span><br><span class="line">Cache&lt;String, String&gt; cache = Caffeine.newBuilder()</span><br><span class="line">    .expireAfterWrite(<span class="number">10</span>, TimeUnit.MINUTES)</span><br><span class="line">    .maximumSize(<span class="number">10_000</span>)</span><br><span class="line">    .build();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找一个缓存元素，不存在时返回null</span></span><br><span class="line">value = cache.getIfPresent(key);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找缓存，若缓存不存在则生成缓存元素并返回，若无法生成则返回null，该方法为原子操作</span></span><br><span class="line">value = cache.get(key, k -&gt; <span class="string">&quot;v1&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加或更新一个缓存</span></span><br><span class="line">cache.put(key, <span class="string">&quot;v2&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 移除一个缓存</span></span><br><span class="line">cache.invalidate(key);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用map对缓存进行操作</span></span><br><span class="line">ConcurrentMap&lt;String, String&gt; cacheMap = cache.asMap();</span><br><span class="line">cacheMap.put(key, <span class="string">&quot;v3&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="2-2-2-自动加载"><a href="#2-2-2-自动加载" class="headerlink" title="2.2.2. 自动加载"></a>2.2.2. 自动加载</h3><blockquote><p>相当于把手动加载时生成缓存的策略(<code>value = cache.get(key, k -&gt; &quot;v1&quot;);</code>)直接配置到缓存对象中<code> .build(k -&gt; k + &quot;-v&quot;)</code>。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> <span class="string">&quot;key&quot;</span>;</span><br><span class="line">String value;</span><br><span class="line"><span class="comment">// 定义自动加载的缓存，加载策略为key + &quot;-v&quot;</span></span><br><span class="line">LoadingCache&lt;String, String&gt; cache = Caffeine.newBuilder()</span><br><span class="line">    .maximumSize(<span class="number">10_000</span>)</span><br><span class="line">    .expireAfterWrite(<span class="number">10</span>, TimeUnit.MINUTES)</span><br><span class="line">    .build(k -&gt; k + <span class="string">&quot;-v&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找缓存，不存在时生成缓存并返回，生成失败时返回null</span></span><br><span class="line">value = cache.get(<span class="string">&quot;key&quot;</span>);</span><br><span class="line"></span><br><span class="line">List&lt;String&gt; keys = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">keys.add(<span class="string">&quot;k1&quot;</span>);</span><br><span class="line">keys.add(<span class="string">&quot;k2&quot;</span>);</span><br><span class="line"><span class="comment">// 批量查找元素，不存在时生成缓存并返回，生成失败时返回null</span></span><br><span class="line">Map&lt;String, String&gt; values = cache.getAll(keys);</span><br></pre></td></tr></table></figure><h3 id="2-2-3-手动异步加载"><a href="#2-2-3-手动异步加载" class="headerlink" title="2.2.3. 手动异步加载"></a>2.2.3. 手动异步加载</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> <span class="string">&quot;key&quot;</span>;</span><br><span class="line">CompletableFuture&lt;String&gt; value;</span><br><span class="line"><span class="comment">// 定义缓存对象</span></span><br><span class="line">AsyncCache&lt;String, String&gt; cache = Caffeine.newBuilder()</span><br><span class="line">    .expireAfterWrite(<span class="number">10</span>, TimeUnit.MINUTES)</span><br><span class="line">    .maximumSize(<span class="number">10_000</span>)</span><br><span class="line">    .buildAsync();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 异步获取缓存，不存在时返回null</span></span><br><span class="line">value = cache.getIfPresent(key);</span><br><span class="line"><span class="keyword">if</span> (value != <span class="literal">null</span>) &#123;</span><br><span class="line">    System.out.println(value.get());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取缓存，缓存不存在时异步生成</span></span><br><span class="line">value = cache.get(key, k -&gt; k + <span class="string">&quot;-v&quot;</span>);</span><br><span class="line">System.out.println(value.get());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加或更新一个元素</span></span><br><span class="line">CompletableFuture&lt;String&gt; v1 = CompletableFuture.supplyAsync(() -&gt; <span class="string">&quot;1111&quot;</span>);</span><br><span class="line">cache.put(key, v1);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 移除一个缓存元素</span></span><br><span class="line"><span class="comment">// synchronous()方法给Cache提供了阻塞直到异步缓存生成完毕的能力</span></span><br><span class="line">cache.synchronous().invalidate(key);</span><br></pre></td></tr></table></figure><h3 id="2-2-4-自动异步加载"><a href="#2-2-4-自动异步加载" class="headerlink" title="2.2.4. 自动异步加载"></a>2.2.4. 自动异步加载</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> <span class="string">&quot;key&quot;</span>;</span><br><span class="line">CompletableFuture&lt;String&gt; value;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义缓存对象</span></span><br><span class="line">AsyncLoadingCache&lt;String, String&gt; cache = Caffeine.newBuilder()</span><br><span class="line">    .expireAfterWrite(<span class="number">10</span>, TimeUnit.MINUTES)</span><br><span class="line">    .maximumSize(<span class="number">10_000</span>)</span><br><span class="line">    .buildAsync(k -&gt; k + <span class="string">&quot;-v&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找缓存元素，若不存在，则异步生成</span></span><br><span class="line">value = cache.get(key);</span><br><span class="line"></span><br><span class="line">List&lt;String&gt; keys = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">keys.add(<span class="string">&quot;k1&quot;</span>);</span><br><span class="line">keys.add(<span class="string">&quot;k2&quot;</span>);</span><br><span class="line"><span class="comment">// 批量查找缓存元素，若不存在，则异步生成</span></span><br><span class="line">CompletableFuture&lt;Map&lt;String, String&gt;&gt; vs = cache.getAll(keys);</span><br></pre></td></tr></table></figure><h2 id="2-3-驱逐缓存"><a href="#2-3-驱逐缓存" class="headerlink" title="2.3. 驱逐缓存"></a>2.3. 驱逐缓存</h2><blockquote><p>驱逐：缓存元素因满足策略而被移除。</p><p>Caffeine提供了三种驱逐策略，分别是<strong>基于容量</strong>、<strong>基于时间</strong>和<strong>基于引用</strong>三种类型。</p></blockquote><h3 id="2-3-1-基于容量"><a href="#2-3-1-基于容量" class="headerlink" title="2.3.1. 基于容量"></a>2.3.1. 基于容量</h3><blockquote><p><strong>基于元素个数的驱逐</strong>和<strong>基于元素权重的驱逐</strong>不能同时使用。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 基于缓存内的元素个数进行驱逐</span></span><br><span class="line">Caffeine.newBuilder()</span><br><span class="line">    .maximumSize(<span class="number">10_000</span>)</span><br><span class="line">    .build();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 基于缓存内元素的权重进行驱逐</span></span><br><span class="line">Caffeine.newBuilder()</span><br><span class="line">    .maximumWeight(<span class="number">10_000</span>)</span><br><span class="line">    .weigher((String k, String v) -&gt; v.length())</span><br><span class="line">    .build();</span><br></pre></td></tr></table></figure><h3 id="2-3-2-基于时间"><a href="#2-3-2-基于时间" class="headerlink" title="2.3.2. 基于时间"></a>2.3.2. 基于时间</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 指定缓存在创建或者更新后，经过固定时间删除</span></span><br><span class="line">Caffeine.newBuilder()</span><br><span class="line">    .expireAfterWrite(<span class="number">10</span>, TimeUnit.MINUTES)</span><br><span class="line">    .build();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定缓存在创建、更新或者读取后，经过固定时间删除</span></span><br><span class="line">Caffeine.newBuilder()</span><br><span class="line">    .expireAfterAccess(<span class="number">10</span>, TimeUnit.MINUTES)</span><br><span class="line">    .build();</span><br><span class="line"></span><br><span class="line">Expiry&lt;String, String&gt; expiry = <span class="keyword">new</span> <span class="title class_">Expiry</span>&lt;&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">expireAfterCreate</span><span class="params">(String key, String value, <span class="type">long</span> currentTime)</span> &#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span>计算该缓存在创建后多久失效</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">expireAfterUpdate</span><span class="params">(String key, String value, <span class="type">long</span> currentTime, <span class="meta">@NonNegative</span> <span class="type">long</span> currentDuration)</span> &#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span>计算该缓存在更新后多久失效</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">expireAfterRead</span><span class="params">(String key, String value, <span class="type">long</span> currentTime, <span class="meta">@NonNegative</span> <span class="type">long</span> currentDuration)</span> &#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span>计算该缓存在读取后多久失效</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 自定义缓存失效策略</span></span><br><span class="line">Caffeine.newBuilder()</span><br><span class="line">    .expireAfter(expiry)</span><br><span class="line">    .build();</span><br></pre></td></tr></table></figure><h3 id="2-3-3-基于引用"><a href="#2-3-3-基于引用" class="headerlink" title="2.3.3. 基于引用"></a>2.3.3. 基于引用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 当key和缓存元素都不存在强引用时驱逐</span></span><br><span class="line">Caffeine.newBuilder()</span><br><span class="line">    .weakKeys()</span><br><span class="line">    .weakValues()</span><br><span class="line">    .build();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当进行GC时进行驱逐</span></span><br><span class="line">Caffeine.newBuilder()</span><br><span class="line">    .softValues()</span><br><span class="line">    .build();</span><br></pre></td></tr></table></figure><h2 id="2-4-失效缓存"><a href="#2-4-失效缓存" class="headerlink" title="2.4. 失效缓存"></a>2.4. 失效缓存</h2><blockquote><p>失效：手动移除缓存元素。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Cache&lt;String, String&gt; cache = Caffeine.newBuilder()</span><br><span class="line">    .maximumSize(<span class="number">10_000</span>)</span><br><span class="line">    .expireAfterWrite(<span class="number">10</span>, TimeUnit.MINUTES)</span><br><span class="line">    .build();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 移除指定key</span></span><br><span class="line">cache.invalidate(<span class="string">&quot;key&quot;</span>);</span><br><span class="line"></span><br><span class="line">List&lt;String&gt; keys = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">keys.add(<span class="string">&quot;k1&quot;</span>);</span><br><span class="line">keys.add(<span class="string">&quot;k2&quot;</span>);</span><br><span class="line">keys.add(<span class="string">&quot;k3&quot;</span>);</span><br><span class="line"><span class="comment">// 批量移除key</span></span><br><span class="line">cache.invalidateAll(keys);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 移除所有key</span></span><br><span class="line">cache.invalidateAll();</span><br></pre></td></tr></table></figure><h2 id="2-5-刷新缓存"><a href="#2-5-刷新缓存" class="headerlink" title="2.5. 刷新缓存"></a>2.5. 刷新缓存</h2><blockquote><p>​刷新和驱逐并不相同。可以通过<code>LoadingCache.refresh(K)</code>方法，异步为key对应的缓存元素刷新一个新的值。与驱逐不同的是，在刷新的时候如果查询缓存元素，其旧值将仍被返回，直到该元素的刷新完毕后结束后才会返回刷新后的新值。</p><p>​与 <code>expireAfterWrite</code>相反，<code>refreshAfterWrite</code> 将会使在写操作之后的一段时间后允许key对应的缓存元素进行刷新，但是只有在这个key被真正查询到的时候才会正式进行刷新操作。所以打个比方，你可以在同一个缓存中同时用到 <code>refreshAfterWrite</code>和<code>expireAfterWrite</code> ，这样缓存元素的在被允许刷新的时候不会直接刷新使得过期时间被盲目重置。当一个元素在其被允许刷新但是没有被主动查询的时候，这个元素也会被视为过期。</p><p>​一个<code>CacheLoader</code>可以通过覆盖重写 <code>CacheLoader.reload(K, V)</code> 方法使得在刷新中可以将旧值也参与到更新的过程中去，这也使得刷新操作显得更加智能。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">LoadingCache&lt;String, String&gt; cache = Caffeine.newBuilder()</span><br><span class="line">    .maximumSize(<span class="number">10_000</span>)</span><br><span class="line">    .expireAfterWrite(<span class="number">10</span>, TimeUnit.MINUTES)</span><br><span class="line">    .refreshAfterWrite(<span class="number">5</span>, TimeUnit.MINUTES)</span><br><span class="line">    .build(k -&gt; k + <span class="string">&quot;-v&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="2-6-性能统计"><a href="#2-6-性能统计" class="headerlink" title="2.6. 性能统计"></a>2.6. 性能统计</h2><blockquote><p>通过使用<code>Caffeine.recordStats()</code>方法可以打开数据收集功能。<code>Cache.stats()</code>方法将会返回一个<code>CacheStats</code>对象，其将会含有一些统计指标。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Cache&lt;String, String&gt; cache = Caffeine.newBuilder()</span><br><span class="line">    .maximumSize(<span class="number">10_000</span>)</span><br><span class="line">    .recordStats()</span><br><span class="line">    .build();</span><br><span class="line"></span><br><span class="line"><span class="type">CacheStats</span> <span class="variable">stats</span> <span class="operator">=</span> cache.stats();</span><br><span class="line"><span class="type">double</span> <span class="variable">hitRate</span> <span class="operator">=</span> stats.hitRate(); <span class="comment">// 缓存命中率</span></span><br><span class="line"><span class="type">long</span> <span class="variable">evictionCount</span> <span class="operator">=</span> stats.evictionCount(); <span class="comment">// 被驱逐的缓存数量</span></span><br><span class="line"><span class="type">double</span> <span class="variable">averageLoadPenalty</span> <span class="operator">=</span> stats.averageLoadPenalty(); <span class="comment">// 加载新值的平均毫秒数</span></span><br></pre></td></tr></table></figure><h2 id="2-7-缓存规范"><a href="#2-7-缓存规范" class="headerlink" title="2.7. 缓存规范"></a>2.7. 缓存规范</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义缓存规范</span></span><br><span class="line"><span class="type">CaffeineSpec</span> <span class="variable">spec</span> <span class="operator">=</span> CaffeineSpec.parse(<span class="string">&quot;maximumWeight=1000, expireAfterWrite=10m, recordStats&quot;</span>);</span><br><span class="line"><span class="comment">// 利用缓存规范来创建缓存</span></span><br><span class="line">Cache&lt;Object, Object&gt; cache = Caffeine.from(spec)</span><br><span class="line">    .refreshAfterWrite(<span class="number">5</span>, TimeUnit.MINUTES)</span><br><span class="line">    .build();</span><br></pre></td></tr></table></figure><h1 id="3-Spring-Boot集成"><a href="#3-Spring-Boot集成" class="headerlink" title="3. Spring Boot集成"></a>3. Spring Boot集成</h1><blockquote><p>主要通过<code>org.springframework.cache.Cache</code>和<code>org.springframework.cache.CacheManager</code>两个接口实现缓存抽象。</p></blockquote><h2 id="3-1-配置"><a href="#3-1-配置" class="headerlink" title="3.1. 配置"></a>3.1. 配置</h2><p><strong>maven坐标</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.ben-manes.caffeine<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>caffeine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>配置文件</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cache:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">caffeine</span></span><br><span class="line">    <span class="attr">cache-names:</span> <span class="string">hello,hi</span></span><br><span class="line">    <span class="attr">caffeine:</span></span><br><span class="line">      <span class="attr">spec:</span> <span class="string">maximumSize=500,expireAfterAccess=10m</span></span><br></pre></td></tr></table></figure><p><strong>启动类添加注解</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@EnableCaching</span><br></pre></td></tr></table></figure><h2 id="3-2-使用注解"><a href="#3-2-使用注解" class="headerlink" title="3.2. 使用注解"></a>3.2. 使用注解</h2><h3 id="3-2-1-Cacheable"><a href="#3-2-1-Cacheable" class="headerlink" title="3.2.1. @Cacheable"></a>3.2.1. @Cacheable</h3><p>作用：触发缓存填充，即缓存特定参数下方法的返回值。</p><p>示例：缓存名为hello，生成密钥的key为参数name，生成缓存的条件为name的长度小于10</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Cacheable(cacheNames = &quot;hello&quot;, key = &quot;#name&quot;, condition = &quot;#name.length() &lt; 10&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/hello/&#123;name&#125;/&#123;gender&#125;/&#123;age&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">(<span class="meta">@PathVariable(&quot;name&quot;)</span> String name, <span class="meta">@PathVariable(&quot;gender&quot;)</span> String gender, <span class="meta">@PathVariable(&quot;age&quot;)</span> <span class="type">int</span> age)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot; - &quot;</span> + gender + <span class="string">&quot; - &quot;</span> + age);</span><br><span class="line">        Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hello &quot;</span> + name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-2-CachePut"><a href="#3-2-2-CachePut" class="headerlink" title="3.2.2. @CachePut"></a>3.2.2. @CachePut</h3><p>作用：在不干扰方法执行的情况下更新缓存。</p><p>示例：更新key为name时，hello的缓存值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CachePut(cacheNames = &quot;hello&quot;, key = &quot;#name&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/hi&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">updateHello</span><span class="params">(String name)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hi &quot;</span> + name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-3-CacheEvict"><a href="#3-2-3-CacheEvict" class="headerlink" title="3.2.3. @CacheEvict"></a>3.2.3. @CacheEvict</h3><p>作用：驱逐缓存。</p><p>示例：驱逐hello中所有缓存。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CacheEvict(cacheNames = &quot;hello&quot;, allEntries = true)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/evict&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">evict</span><span class="params">()</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;evict cache&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-4-Caching"><a href="#3-2-4-Caching" class="headerlink" title="3.2.4. @Caching"></a>3.2.4. @Caching</h3><p>作用：组合多个注解。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Caching(evict = &#123; @CacheEvict(&quot;primary&quot;), @CacheEvict(cacheNames=&quot;secondary&quot;, key=&quot;#p0&quot;) &#125;)</span></span><br><span class="line"><span class="keyword">public</span> Book <span class="title function_">importBooks</span><span class="params">(String deposit, Date date)</span></span><br></pre></td></tr></table></figure><h3 id="3-2-5-CacheConfig"><a href="#3-2-5-CacheConfig" class="headerlink" title="3.2.5. @CacheConfig"></a>3.2.5. @CacheConfig</h3><p>作用：类级别的注释，指定当前类中缓存注解的公共属性。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CacheConfig(cacheNames = &quot;hello&quot;)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 本地缓存 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 缓存 </tag>
            
            <tag> Caffeine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle入门</title>
      <link href="/2022/08/17/db/Oracle%E5%85%A5%E9%97%A8/"/>
      <url>/2022/08/17/db/Oracle%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="常用脚本"><a href="#常用脚本" class="headerlink" title="常用脚本"></a>常用脚本</h1><h2 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$version;</span><br></pre></td></tr></table></figure><h2 id="查看字符集"><a href="#查看字符集" class="headerlink" title="查看字符集"></a>查看字符集</h2><p>对应环境变量<code>NLS_LANG</code>；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> userenv(<span class="string">&#x27;language&#x27;</span>) <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure><h2 id="dual"><a href="#dual" class="headerlink" title="dual"></a>dual</h2><p><code>dual</code>为oralce内部的一张表，为了符合语法，当查询内容不存在任何一张表中时，需要<code>from dual</code>;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sysdate; <span class="comment">-- error</span></span><br><span class="line"><span class="keyword">select</span> sysdate <span class="keyword">from</span> dual; <span class="comment">-- success</span></span><br></pre></td></tr></table></figure><h2 id="批量插入"><a href="#批量插入" class="headerlink" title="批量插入"></a>批量插入</h2><p>方式一：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">all</span> </span><br><span class="line"><span class="keyword">into</span> t_test(name, age, remark) <span class="keyword">values</span>(<span class="string">&#x27;hehe111&#x27;</span>, <span class="number">12</span>, <span class="keyword">null</span>)</span><br><span class="line"><span class="keyword">into</span> t_test(name, age, remark) <span class="keyword">values</span>(<span class="string">&#x27;hehe33&#x27;</span>, <span class="number">13</span>, <span class="number">123</span>)</span><br><span class="line"><span class="keyword">into</span> t_test(name, age, remark) <span class="keyword">values</span>(<span class="string">&#x27;hehe3333&#x27;</span>, <span class="number">14</span>, <span class="number">223</span>)</span><br><span class="line"><span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure><p>方式二：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_test(name, age, <span class="keyword">day</span>)</span><br><span class="line"><span class="keyword">select</span> name, age, <span class="keyword">day</span> <span class="keyword">from</span> </span><br><span class="line">(</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;aa&#x27;</span> <span class="keyword">as</span> name, <span class="number">12</span> <span class="keyword">as</span> age, <span class="string">&#x27;2023-03-20&#x27;</span> <span class="keyword">as</span> <span class="keyword">day</span> <span class="keyword">from</span> dual </span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> </span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;bb&#x27;</span> <span class="keyword">as</span> name, <span class="number">13</span> <span class="keyword">as</span> age, <span class="string">&#x27;2023-03-20&#x27;</span> <span class="keyword">as</span> <span class="keyword">day</span> <span class="keyword">from</span> dual </span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;cc&#x27;</span> <span class="keyword">as</span> name, <span class="number">14</span> <span class="keyword">as</span> age, <span class="string">&#x27;2023-03-20&#x27;</span> <span class="keyword">as</span> <span class="keyword">day</span> <span class="keyword">from</span> dual </span><br><span class="line">)</span><br></pre></td></tr></table></figure><h1 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h1><h2 id="日期相关"><a href="#日期相关" class="headerlink" title="日期相关"></a>日期相关</h2><table><thead><tr><th align="center">函数</th><th align="center">描述</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">to_date</td><td align="center">字符串转为日期</td><td align="center">to_date(‘2022-02-22 13:20:33’, ‘yyyy-mm-dd hh24:mi:ss’)</td></tr><tr><td align="center">to_char</td><td align="center">日期转为字符串</td><td align="center">to_char(sysdate, ‘yyyy-mm-dd hh24:mi:ss’)</td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h1 id="服务器操作"><a href="#服务器操作" class="headerlink" title="服务器操作"></a>服务器操作</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不登录连接</span></span><br><span class="line">sqlplus /nolog</span><br><span class="line"><span class="comment"># 用xxx用户登录</span></span><br><span class="line">conn xxx/xxx</span><br><span class="line">show user;</span><br></pre></td></tr></table></figure><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><h2 id="connection-reset"><a href="#connection-reset" class="headerlink" title="connection reset"></a>connection reset</h2><p><strong>描述：</strong>linux下连接oracle时可能会报这个错误。</p><p><strong>解决方法：</strong></p><ul><li>修改<code>$&#123;JAVA_HOME&#125;/lib/security/java.security</code>文件中<code>securerandom.source</code>的值为<code>file:/dev/./urandom</code>。（已尝试）</li><li>启动java时添加参数<code>-Djava.security.egd=file:/dev/./urandom</code>。（未尝试）</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ShardingSphere入门</title>
      <link href="/2022/08/16/middleware/ShardingSphere%E5%85%A5%E9%97%A8/"/>
      <url>/2022/08/16/middleware/ShardingSphere%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>shardingsphere是一款apache开源的分布式数据库生态项目，可提供数据分片、读写分离、数据加密等功能，由JDBC、Proxy、Sidecar三个模块组成，每个模块可独立部署；</p><ul><li>shardingsphere-JDBC：部署在客户端，通过jar包引入，可与java项目快速集成；</li><li>shardingsphere-Proxy：部署在服务端，可以向连接数据库一样连接Proxy；</li><li>shardingsphere-Sidecar：云原生数据库代理，目前还处于规划阶段；</li></ul><p>官方网站：<code>https://shardingsphere.apache.org/index_zh.html</code></p><p>github:<code>https://github.com/apache/shardingsphere</code></p></blockquote><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><blockquote><p>以shardingsphere-proxy + postgresql + zookeeper集群为例，配置数据分片 + 读写分离</p><p>版本：</p><p>​shardingsphere-proxy:5.1.2</p><p>​zookeeper:3.8.0</p><p>​jdk:17</p><p>​postgresql:12.6</p></blockquote><h2 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h2><p>三个节点的zookeeper集群和三个节点的proxy集群；</p><p>四个pg库，两两一组做读写分离；</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>服务器四台：172.19.3.60&#x2F;61&#x2F;62&#x2F;63</p><p>60、61、62三台服务器分别配置jdk、zookeeper、proxy环境；</p><p>60、61、62、63分别配置好pg环境，且61为60的从机，63为62的从机；</p><p>省略jdk配置、zookeeper集群搭建、pg安装步骤；</p><hr><p><strong>两台pg主机（60、62）上建库建表</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 建库</span><br><span class="line">.<span class="operator">/</span>createdb shard1</span><br><span class="line"># 在shard1上建表</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user_0(</span><br><span class="line">id <span class="type">bigint</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">200</span>),</span><br><span class="line">    phone <span class="type">varchar</span>(<span class="number">11</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user_1(</span><br><span class="line">id <span class="type">bigint</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">200</span>),</span><br><span class="line">    phone <span class="type">varchar</span>(<span class="number">11</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="下载安装proxy"><a href="#下载安装proxy" class="headerlink" title="下载安装proxy"></a>下载安装proxy</h2><p><strong>下载地址</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://shardingsphere.apache.org/document/current/cn/downloads/</span><br></pre></td></tr></table></figure><p><strong>安装</strong></p><p>解压二进制包即可</p><h2 id="配置proxy"><a href="#配置proxy" class="headerlink" title="配置proxy"></a>配置proxy</h2><p><strong>60服务器proxy配置</strong></p><p><code>conf/server.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 采用zookeeper的集群模式</span></span><br><span class="line"><span class="attr">mode:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">Cluster</span></span><br><span class="line">  <span class="attr">repository:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">ZooKeeper</span></span><br><span class="line">    <span class="attr">props:</span></span><br><span class="line">      <span class="attr">namespace:</span> <span class="string">governance_ds</span></span><br><span class="line">      <span class="attr">server-lists:</span> <span class="number">172.19</span><span class="number">.3</span><span class="number">.60</span><span class="string">:2181,172.19.3.61:2181,172.19.3.62:2181</span></span><br><span class="line">      <span class="attr">retryIntervalMilliseconds:</span> <span class="number">500</span></span><br><span class="line">      <span class="attr">timeToLiveSeconds:</span> <span class="number">60</span></span><br><span class="line">      <span class="attr">maxRetries:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">operationTimeoutMilliseconds:</span> <span class="number">500</span></span><br><span class="line">  <span class="attr">overwrite:</span> <span class="literal">true</span> <span class="comment"># 表示本地配置会覆盖zookeeper中的配置 </span></span><br><span class="line"><span class="comment"># 权限配置</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="type">!AUTHORITY</span></span><br><span class="line">    <span class="attr">users:</span> <span class="comment"># 配置连接proxy的用户，该用户必须在服务器上存在</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">root@%:123</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">postgres@%:postgres</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">sms@%:itc123</span></span><br><span class="line">    <span class="attr">provider:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">ALL_PRIVILEGES_PERMITTED</span></span><br><span class="line"></span><br><span class="line"><span class="attr">props:</span> </span><br><span class="line">  <span class="attr">sql-show:</span> <span class="literal">true</span> <span class="comment"># 在日志中显示sql语句</span></span><br></pre></td></tr></table></figure><p><code>conf/config-sharding.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">databaseName:</span> <span class="string">smsdb</span> <span class="comment"># proxy中的逻辑数据库名称</span></span><br><span class="line"><span class="comment"># 数据源配置</span></span><br><span class="line"><span class="attr">dataSources:</span></span><br><span class="line">  <span class="attr">ds0_master:</span> <span class="comment"># 自定义数据源名称</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:postgresql://172.19.3.60:5432/shard1?stringtype=unspecified</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">sms</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">itc123</span></span><br><span class="line">    <span class="attr">connectionTimeoutMilliseconds:</span> <span class="number">30000</span></span><br><span class="line">    <span class="attr">idleTimeoutMilliseconds:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">maxLifetimeMilliseconds:</span> <span class="number">1800000</span></span><br><span class="line">    <span class="attr">maxPoolSize:</span> <span class="number">50</span></span><br><span class="line">    <span class="attr">minPoolSize:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">ds0_slave:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:postgresql://172.19.3.61:5432/shard1?stringtype=unspecified</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">sms</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">itc123</span></span><br><span class="line">    <span class="attr">connectionTimeoutMilliseconds:</span> <span class="number">30000</span></span><br><span class="line">    <span class="attr">idleTimeoutMilliseconds:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">maxLifetimeMilliseconds:</span> <span class="number">1800000</span></span><br><span class="line">    <span class="attr">maxPoolSize:</span> <span class="number">50</span></span><br><span class="line">    <span class="attr">minPoolSize:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">ds1_master:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:postgresql://172.19.3.62:5432/shard1?stringtype=unspecified</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">sms</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">itc123</span></span><br><span class="line">    <span class="attr">connectionTimeoutMilliseconds:</span> <span class="number">30000</span></span><br><span class="line">    <span class="attr">idleTimeoutMilliseconds:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">maxLifetimeMilliseconds:</span> <span class="number">1800000</span></span><br><span class="line">    <span class="attr">maxPoolSize:</span> <span class="number">50</span></span><br><span class="line">    <span class="attr">minPoolSize:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">ds1_slave:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:postgresql://172.19.3.63:5432/shard1?stringtype=unspecified</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">sms</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">itc123</span></span><br><span class="line">    <span class="attr">connectionTimeoutMilliseconds:</span> <span class="number">30000</span></span><br><span class="line">    <span class="attr">idleTimeoutMilliseconds:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">maxLifetimeMilliseconds:</span> <span class="number">1800000</span></span><br><span class="line">    <span class="attr">maxPoolSize:</span> <span class="number">50</span></span><br><span class="line">    <span class="attr">minPoolSize:</span> <span class="number">1</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 规则配置</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="comment"># 分片规则配置</span></span><br><span class="line"><span class="bullet">-</span> <span class="type">!SHARDING</span></span><br><span class="line">  <span class="attr">tables:</span></span><br><span class="line">    <span class="attr">t_user:</span> <span class="comment"># 自定义逻辑表名</span></span><br><span class="line">      <span class="comment"># 真实节点，使用行表达式，该配置的含义是：t_user表被分成四份，坐标为</span></span><br><span class="line">      <span class="comment"># readwrite_ds0.t_user_0、readwrite_ds0.t_user_1</span></span><br><span class="line">      <span class="comment"># readwrite_ds1.t_user_0、readwrite_ds1.t_user_1</span></span><br><span class="line">      <span class="attr">actualDataNodes:</span> <span class="string">readwrite_ds$-&gt;&#123;0..1&#125;.t_user_$-&gt;&#123;0..1&#125;</span></span><br><span class="line">      <span class="comment"># 分库策略</span></span><br><span class="line">      <span class="attr">databaseStrategy:</span> </span><br><span class="line">        <span class="attr">standard:</span> </span><br><span class="line">          <span class="attr">shardingColumn:</span> <span class="string">id</span> <span class="comment"># 分库依据列</span></span><br><span class="line">          <span class="attr">shardingAlgorithmName:</span> <span class="string">t_user_inline</span> <span class="comment"># 分库算法名，需在shardingAlgorithms下定义</span></span><br><span class="line">      <span class="comment"># 分表策略</span></span><br><span class="line">      <span class="attr">tableStrategy:</span></span><br><span class="line">        <span class="attr">standard:</span></span><br><span class="line">          <span class="attr">shardingColumn:</span> <span class="string">phone</span> <span class="comment"># 分表依据列</span></span><br><span class="line">          <span class="attr">shardingAlgorithmName:</span> <span class="string">t_user_custom</span> <span class="comment"># 分表算法名，需在shardingAlgorithms下定义</span></span><br><span class="line">      <span class="comment"># 主键生成策略绝</span></span><br><span class="line">      <span class="attr">keyGenerateStrategy:</span></span><br><span class="line">        <span class="attr">column:</span> <span class="string">id</span> <span class="comment"># 主键列</span></span><br><span class="line">        <span class="attr">keyGeneratorName:</span> <span class="string">snowflake</span> <span class="comment"># 主键生成算法，需在keyGenerators下定义</span></span><br><span class="line">  <span class="comment"># 广播表配置</span></span><br><span class="line">  <span class="attr">broadcastTables:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">t_city</span></span><br><span class="line">  <span class="comment"># 分片算法配置</span></span><br><span class="line">  <span class="attr">shardingAlgorithms:</span></span><br><span class="line">    <span class="attr">t_user_custom:</span> <span class="comment"># 自定义算法名</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">CLASS_BASED</span> <span class="comment"># 使用自定义的算法</span></span><br><span class="line">      <span class="attr">props:</span></span><br><span class="line">        <span class="attr">strategy:</span> <span class="string">STANDARD</span></span><br><span class="line">        <span class="comment"># 自定义算法类全路径，这个算法是根据手机尾号对2取模</span></span><br><span class="line">        <span class="attr">algorithmClassName:</span> <span class="string">com.xx.sharding.algorithm.PhoneTailShardingAlgorithm</span></span><br><span class="line">    <span class="attr">t_user_inline:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">INLINE</span> <span class="comment"># 使用行表达式</span></span><br><span class="line">      <span class="attr">props:</span></span><br><span class="line">        <span class="attr">algorithm-expression:</span> <span class="string">readwrite_ds$&#123;id</span> <span class="string">%</span> <span class="number">2</span><span class="string">&#125;</span></span><br><span class="line">  <span class="comment"># 主键生成算法</span></span><br><span class="line">  <span class="attr">keyGenerators:</span></span><br><span class="line">    <span class="attr">snowflake:</span> <span class="comment"># 自定义算法名</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">SNOWFLAKE</span> <span class="comment"># 使用内置的雪花算法</span></span><br><span class="line"><span class="comment"># 读写分离规则</span></span><br><span class="line"><span class="bullet">-</span> <span class="type">!READWRITE_SPLITTING</span></span><br><span class="line">  <span class="comment"># 数据源配置</span></span><br><span class="line">  <span class="attr">dataSources:</span></span><br><span class="line">    <span class="attr">readwrite_ds0:</span> <span class="comment"># 自定义数据源名称</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">Static</span> <span class="comment"># 静态路由</span></span><br><span class="line">      <span class="attr">props:</span></span><br><span class="line">        <span class="attr">write-data-source-name:</span> <span class="string">ds0_master</span> <span class="comment"># 写库，数据源需在dataSources下定义</span></span><br><span class="line">        <span class="attr">read-data-source-names:</span> <span class="string">ds0_slave</span> <span class="comment"># 读库，数据源需在dataSources下定义</span></span><br><span class="line">      <span class="attr">loadBalancerName:</span> <span class="string">random</span> <span class="comment"># 这里指定的算法名需在loadBalancers下定义</span></span><br><span class="line">    <span class="attr">readwrite_ds1:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">Static</span></span><br><span class="line">      <span class="attr">props:</span></span><br><span class="line">        <span class="attr">write-data-source-name:</span> <span class="string">ds1_master</span></span><br><span class="line">        <span class="attr">read-data-source-names:</span> <span class="string">ds1_slave</span></span><br><span class="line">      <span class="attr">loadBalancerName:</span> <span class="string">random</span></span><br><span class="line">  <span class="comment"># 负载均衡算法</span></span><br><span class="line">  <span class="attr">loadBalancers:</span></span><br><span class="line">    <span class="attr">random:</span> <span class="comment"># 自定义算法名称</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">RANDOM</span> <span class="comment"># 使用内置的随机算法</span></span><br></pre></td></tr></table></figure><hr><p><strong>61、62服务器proxy配置</strong></p><p><code>conf/server.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 采用zookeeper的集群模式</span></span><br><span class="line"><span class="attr">mode:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">Cluster</span></span><br><span class="line">  <span class="attr">repository:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">ZooKeeper</span></span><br><span class="line">    <span class="attr">props:</span></span><br><span class="line">      <span class="attr">namespace:</span> <span class="string">governance_ds</span></span><br><span class="line">      <span class="attr">server-lists:</span> <span class="number">172.19</span><span class="number">.3</span><span class="number">.60</span><span class="string">:2181,172.19.3.61:2181,172.19.3.62:2181</span></span><br><span class="line">      <span class="attr">retryIntervalMilliseconds:</span> <span class="number">500</span></span><br><span class="line">      <span class="attr">timeToLiveSeconds:</span> <span class="number">60</span></span><br><span class="line">      <span class="attr">maxRetries:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">operationTimeoutMilliseconds:</span> <span class="number">500</span></span><br><span class="line">  <span class="attr">overwrite:</span> <span class="literal">false</span> <span class="comment"># 表示使用zookeeper中的配置 </span></span><br></pre></td></tr></table></figure><h2 id="启动proxy"><a href="#启动proxy" class="headerlink" title="启动proxy"></a>启动proxy</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/start.sh</span><br></pre></td></tr></table></figure><h2 id="连接proxy"><a href="#连接proxy" class="headerlink" title="连接proxy"></a>连接proxy</h2><h3 id="使用客户端连接"><a href="#使用客户端连接" class="headerlink" title="使用客户端连接"></a>使用客户端连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># psql：使用pg客户端连接-h:proxy所在地址-p:proxy的端口，默认为3307</span></span><br><span class="line"><span class="comment"># -U：登录用户，在server.yaml中配置-d:连接数据库，在config-sharding.yaml中配置</span></span><br><span class="line">psql -h 172.19.3.60 -p 3307 -U root -d smsdb</span><br></pre></td></tr></table></figure><h3 id="使用工具连接"><a href="#使用工具连接" class="headerlink" title="使用工具连接"></a>使用工具连接</h3><blockquote><p>这里使用navicat16测试可连接成功</p></blockquote><p><img src="/navicat%E8%BF%9E%E6%8E%A5proxy.png" alt="navicat连接proxy"></p><h3 id="jdbc连接"><a href="#jdbc连接" class="headerlink" title="jdbc连接"></a>jdbc连接</h3><p>使用pg的驱动连接即可，例如<code>Spring Boot</code>数据源配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">org.postgresql.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:postgresql://172.19.3.60:3307/smsdb</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123</span></span><br></pre></td></tr></table></figure><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><blockquote><p>这里用navicat连接proxy做一些简单验证；</p><p>说明：上面proxy分片和读写分离的策略为：根据id%2分库，根据phone尾号%2分表，ds0_master、ds1_master为主库，可以插入数据，ds0_slave、ds1_slave为从库，只可以读取数据。</p></blockquote><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><p><strong>sql</strong>:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 这里表名前需要加数据库中真实表表所在的schema，否则生成主键失败</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> sms.t_user(NAME, PHONE) <span class="keyword">VALUES</span>(<span class="string">&#x27;zhangsan&#x27;</span>, <span class="string">&#x27;18328442123&#x27;</span>);</span><br></pre></td></tr></table></figure><p><strong>分析</strong>：</p><p>id是使用雪花算法自动生成的，所以还不确定会插入哪个库；</p><p>手机尾号%2&#x3D;1，所以可以确定该条数据会插入t_user_1表；</p><p><strong>执行并查看日志</strong>：</p><p>执行上面的sql，并查看日志<code>logs/stdout.log</code>，可以发现，生成的<code>id</code>为<code>761164204387336192</code>，<code>id%2=0</code>，所以会选择读写分离数据源<code>readwrite_ds0</code>中可插入数据的数据源<code>ds0_master</code>，且插入表为<code>t_user_1</code>;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[INFO ] 2022-08-02 09:54:48.331 [Connection-6-ThreadExecutor] ShardingSphere-SQL - Logic SQL: INSERT INTO sms.t_user(NAME, PHONE) VALUES(&#x27;zhangsan&#x27;, &#x27;18328442123&#x27;)</span><br><span class="line">[INFO ] 2022-08-02 09:54:48.331 [Connection-6-ThreadExecutor] ShardingSphere-SQL - SQLStatement: PostgreSQLInsertStatement(withSegment=Optional.empty)</span><br><span class="line">[INFO ] 2022-08-02 09:54:48.331 [Connection-6-ThreadExecutor] ShardingSphere-SQL - Actual SQL: ds0_master ::: INSERT INTO sms.t_user_1(NAME, PHONE, id) VALUES(&#x27;zhangsan&#x27;, &#x27;18328442123&#x27;, 761164204387336192)</span><br></pre></td></tr></table></figure><h3 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h3><p><strong>sql</strong>:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> sms.t_user;</span><br></pre></td></tr></table></figure><p><strong>分析</strong>：</p><p>这条sql没有指定分库和分表的查询条件，所以从<code>ds0_slave</code>中的<code>t_user_0</code>、<code>t_user_1</code>和<code>ds1_slave</code>中的<code>t_user_0</code>、<code>t_user_1</code>。</p><p><strong>执行并查看日志</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[INFO ] 2022-08-02 10:02:26.680 [Connection-6-ThreadExecutor] ShardingSphere-SQL - Logic SQL: SELECT * FROM sms.t_user</span><br><span class="line">[INFO ] 2022-08-02 10:02:26.680 [Connection-6-ThreadExecutor] ShardingSphere-SQL - SQLStatement: PostgreSQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)</span><br><span class="line">[INFO ] 2022-08-02 10:02:26.680 [Connection-6-ThreadExecutor] ShardingSphere-SQL - Actual SQL: ds0_slave ::: SELECT * FROM sms.t_user_0 UNION ALL SELECT * FROM sms.t_user_1</span><br><span class="line">[INFO ] 2022-08-02 10:02:26.680 [Connection-6-ThreadExecutor] ShardingSphere-SQL - Actual SQL: ds1_slave ::: SELECT * FROM sms.t_user_0 UNION ALL SELECT * FROM sms.t_user_1</span><br></pre></td></tr></table></figure><hr><p><strong>sql</strong>:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> sms.t_user <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">761164204387336192</span> <span class="keyword">AND</span> phone <span class="operator">=</span> <span class="string">&#x27;18328442123&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>分析</strong>：</p><p>这条sql指定了分库和分表的查询条件，且<code>id%2=0</code>，<code>phone尾号%2=1</code>，所以会查询<code>ds0_slave.t_user_1</code>。</p><p><strong>执行并查看日志</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[INFO ] 2022-08-02 10:05:48.852 [Connection-6-ThreadExecutor] ShardingSphere-SQL - Logic SQL: SELECT * FROM sms.t_user WHERE id = 761164204387336192 AND phone = &#x27;18328442123&#x27;</span><br><span class="line">[INFO ] 2022-08-02 10:05:48.853 [Connection-6-ThreadExecutor] ShardingSphere-SQL - SQLStatement: PostgreSQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)</span><br><span class="line">[INFO ] 2022-08-02 10:05:48.853 [Connection-6-ThreadExecutor] ShardingSphere-SQL - Actual SQL: ds0_slave ::: SELECT * FROM sms.t_user_1 WHERE id = 761164204387336192 AND phone = &#x27;18328442123&#x27;</span><br></pre></td></tr></table></figure><h2 id="自定义算法"><a href="#自定义算法" class="headerlink" title="自定义算法"></a>自定义算法</h2><blockquote><p>shardingsphere使用<code>SPI</code>的方式扩展相应算法，下面列举一个自定义的分片算法</p></blockquote><ol><li><p>实现<code>StandardShardingAlgorithm</code>接口；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.google.common.collect.Range;</span><br><span class="line"><span class="keyword">import</span> org.apache.shardingsphere.sharding.api.sharding.standard.PreciseShardingValue;</span><br><span class="line"><span class="keyword">import</span> org.apache.shardingsphere.sharding.api.sharding.standard.RangeShardingValue;</span><br><span class="line"><span class="keyword">import</span> org.apache.shardingsphere.sharding.api.sharding.standard.StandardShardingAlgorithm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Timestamp;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据日期分片</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DayShardingAlgorithm</span> <span class="keyword">implements</span> <span class="title class_">StandardShardingAlgorithm</span>&lt;String&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Properties properties;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(Properties props)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.properties = props;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Properties <span class="title function_">getProps</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.properties;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 精确分片</span></span><br><span class="line"><span class="comment">    **/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">doSharding</span><span class="params">(Collection&lt;String&gt; availableTargetNames, PreciseShardingValue&lt;String&gt; shardingValue)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">day</span> <span class="operator">=</span> getDayFromStr(shardingValue.getValue());</span><br><span class="line">        <span class="keyword">return</span> shardingValue.getDataNodeInfo().getPrefix() + day;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 范围分片</span></span><br><span class="line"><span class="comment">    **/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Collection&lt;String&gt; <span class="title function_">doSharding</span><span class="params">(Collection&lt;String&gt; availableTargetNames, RangeShardingValue&lt;String&gt; shardingValue)</span> &#123;</span><br><span class="line">        Collection&lt;String&gt; tables = <span class="keyword">new</span> <span class="title class_">LinkedHashSet</span>&lt;&gt;();</span><br><span class="line">        Range&lt;String&gt; valueRange = shardingValue.getValueRange();</span><br><span class="line">        <span class="type">String</span> <span class="variable">prefix</span> <span class="operator">=</span> shardingValue.getDataNodeInfo().getPrefix();</span><br><span class="line">        <span class="type">int</span> <span class="variable">lowerValue</span> <span class="operator">=</span> valueRange.hasLowerBound()? getDayFromStr(valueRange.lowerEndpoint()) : <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">upperValue</span> <span class="operator">=</span> valueRange.hasUpperBound()? getDayFromStr(valueRange.upperEndpoint()) : <span class="number">31</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> lowerValue; i &lt;= upperValue; i++) &#123;</span><br><span class="line">            tables.add(prefix + i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tables;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getDayFromStr</span><span class="params">(String dateStr)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (dateStr == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NullPointerException</span>(<span class="string">&quot;日期不能为空! &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">beginIndex</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">endIndex</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> dateStr.length();</span><br><span class="line">        <span class="keyword">if</span> (length == <span class="number">8</span>) &#123;</span><br><span class="line">            beginIndex = <span class="number">6</span>;</span><br><span class="line">            endIndex = <span class="number">8</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (length &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">            beginIndex = <span class="number">8</span>;</span><br><span class="line">            endIndex = <span class="number">10</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;日期格式异常: &quot;</span> + dateStr);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Integer.parseInt(dateStr.substring(beginIndex, endIndex));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在项目 <code>resources</code> 目录下创建 <code>META-INF/services</code> 目录；</p></li><li><p>在 <code>META-INF/services</code> 目录下新建<code>org.apache.shardingsphere.sharding.spi.ShardingAlgorithm</code>文件，并将实现类的全路径写到文件中；</p><p><img src="/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%AE%97%E6%B3%95.png" alt="自定义算法"></p></li><li><p>将上述 Java 文件打包成 jar 包；</p></li><li><p>将上述 jar 包拷贝至 ShardingSphere-Proxy 解压后的 <code>ext-lib/</code> 目录；</p></li></ol><h2 id="DistSQL"><a href="#DistSQL" class="headerlink" title="DistSQL"></a>DistSQL</h2><blockquote><p>DistSQL（Distributed SQL）是 Apache ShardingSphere 特有的操作语言。 它与标准 SQL 的使用方式完全一致，用于提供增量功能的 SQL 级别操作能力;</p><p>DistSQL 细分为 RDL、RQL、RAL 和 RUL 四种类型:</p><ul><li>RDL:Resource &amp; Rule Definition Language，负责资源和规则的创建、修改和删除。</li><li>RQL:Resource &amp; Rule Query Language，负责资源和规则的查询和展现。</li><li>RAL:Resource &amp; Rule Administration Language，负责强制路由、熔断、配置导入导出、数据迁移控制等管理功能。</li><li>RUL:Resource Utility Language，负责 SQL 解析、SQL 格式化、执行计划预览等功能。</li></ul></blockquote><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>可通过<code>DistSQL</code>动态地调整Proxy上的资源、规则等配置，具体语法见官网。</p><h1 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h1><blockquote><p>版本：5.1.2</p></blockquote><h2 id="行表达式"><a href="#行表达式" class="headerlink" title="行表达式"></a>行表达式</h2><p>使用<code>Groovy </code>的语法，自行搜索。</p><h2 id="proxy的数据库名"><a href="#proxy的数据库名" class="headerlink" title="proxy的数据库名"></a>proxy的数据库名</h2><p><code>config-xxx.yaml</code>配置文件中，<code>databaseName</code>即为创建的数据库名，在<strong>Zookeeper</strong>的<code>metadata</code>节点下可以看到，navicat或应用程序连接proxy时，通过这个数据库名连接。</p><h2 id="配置文件加载优先级"><a href="#配置文件加载优先级" class="headerlink" title="配置文件加载优先级"></a>配置文件加载优先级</h2><p><code>mode.overwrite</code>属性为<code>true</code>时，会使用本地配置覆盖Zookeeper中的配置，否则优先加载<strong>Zookeeper</strong>中的配置。</p><h2 id="分片和读写分离配合使用"><a href="#分片和读写分离配合使用" class="headerlink" title="分片和读写分离配合使用"></a>分片和读写分离配合使用</h2><p>分片和读写分离配合使用时，分片规则处使用的数据源名称，要为读写分离规则处定义的数据源。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line">rules:</span><br><span class="line">- !SHARDING</span><br><span class="line">  tables:</span><br><span class="line">    t_mt_log:</span><br><span class="line">      # 这里的readwrite_ds为读写分离规则处配置的数据源</span><br><span class="line">      actualDataNodes: readwrite_ds$-&gt;&#123;0..1&#125;.t_mt_log</span><br><span class="line">- !READWRITE_SPLITTING</span><br><span class="line">  dataSources:</span><br><span class="line">    readwrite_ds:</span><br><span class="line">      type: Static</span><br><span class="line">      </span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="广播表规则"><a href="#广播表规则" class="headerlink" title="广播表规则"></a>广播表规则</h2><p><strong>issue19753</strong>:</p><p>广播表需存在所有的数据源中，且表结构必须一致；</p><p>若一张表存在于所有数据源中，但没有配置为广播表，则该表将被视为单表，且只使用任一数据源中的该表；</p><h2 id="使用pg的问题"><a href="#使用pg的问题" class="headerlink" title="使用pg的问题"></a>使用pg的问题</h2><p>必须在sql中指定表所在的schema，否则可能出现不可预知的问题，例如<strong>不能生成分布式主键</strong>等，见<code>issue19541</code>;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 必须指定sms</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> sms.t_order...</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 中间件 </category>
          
          <category> 分库分表 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ShardingSphere </tag>
            
            <tag> 分库分表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PostgreSQL入门</title>
      <link href="/2022/08/16/db/PostgreSQL%E5%85%A5%E9%97%A8/"/>
      <url>/2022/08/16/db/PostgreSQL%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="PostgreSQL部署"><a href="#PostgreSQL部署" class="headerlink" title="PostgreSQL部署"></a>PostgreSQL部署</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 官方下载</span><br><span class="line">https://www.postgresql.org/download/</span><br><span class="line"># 中文社区下载</span><br><span class="line">http://www.postgres.cn/v2/download</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p>使用操作系统用户postgres创建并初始化数据库时，pg会默认创建一个postgres用户，但该数据库用户没有设置密码，所以需要手动创建数据库用户或者给数据库postgres用户设置密码。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载并解压</span></span><br><span class="line">wget https://ftp.postgresql.org/pub/source/v12.2/postgresql-12.2.tar.bz2</span><br><span class="line">tar xjvf postgresql*.bz2</span><br><span class="line"><span class="built_in">cd</span> postgresql-12.2</span><br><span class="line"><span class="comment"># 编译安装</span></span><br><span class="line">./configure --prefix=/usr/local/pgsql <span class="comment"># /usr/local/pgsql为安装目录</span></span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="comment"># 配置数据库用户及目录</span></span><br><span class="line">adduser postgres</span><br><span class="line"><span class="built_in">mkdir</span> /usr/local/pgsql/data</span><br><span class="line"><span class="built_in">chown</span> -R postgres:postgres /usr/local/pgsql/data</span><br><span class="line"><span class="comment"># 使用postgres用户初始化并启动数据库</span></span><br><span class="line"></span><br><span class="line">su postgres</span><br><span class="line"><span class="comment"># 设置环境变量</span></span><br><span class="line"><span class="comment">#PAHT = /usr/local/pgsql/bin:$PATH</span></span><br><span class="line"><span class="comment">#export PATH</span></span><br><span class="line"><span class="comment">#PGDATA = /usr/local/pgsql/data</span></span><br><span class="line"><span class="comment">#export PGDATA</span></span><br><span class="line"><span class="comment"># -D选项缺省时，使用PGDATA环境变量</span></span><br><span class="line">/usr/local/pgsql/bin/initdb -D /usr/local/pgsql/data</span><br><span class="line">/usr/local/pgsql/bin/pg_ctl -D /usr/local/pgsql/data -l logfile start</span><br><span class="line"><span class="comment"># 创建并进入数据库</span></span><br><span class="line">/usr/local/pgsql/bin/createdb testdb</span><br><span class="line">/usr/local/pgsql/bin/psql testdb</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><p><code>initdb</code>执行完成后，会在<code>PGDATA</code>目录下生成相应的配置文件，常见需要调整的配置文件有<code>pg_hba.conf</code>和<code>postgresql.conf</code>两个。</p><hr><p><strong>pg_hba.conf</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 允许所有ip连接</span><br><span class="line"># IPv4 local connections:</span><br><span class="line">host    all             all             0.0.0.0/0               md5</span><br></pre></td></tr></table></figure><hr><p><strong>postgresql.conf</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 监听所有TCP/IP连接</span><br><span class="line">listen_addresses = &#x27;*&#x27;</span><br><span class="line">port=5432</span><br><span class="line"># 开启日志记录</span><br><span class="line">logging_collector = on</span><br><span class="line">log_directory = &#x27;pg_log&#x27;</span><br></pre></td></tr></table></figure><h1 id="PostgreSQL常用命令"><a href="#PostgreSQL常用命令" class="headerlink" title="PostgreSQL常用命令"></a>PostgreSQL常用命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动/停止/重启数据库</span></span><br><span class="line">/usr/local/pgsql/bin/pg_ctl -D /usr/local/pgsql/data start|stop|restart</span><br><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line">/usr/local/pgsql/bin/createdb testdb</span><br><span class="line"><span class="comment"># 查看数据库列表</span></span><br><span class="line">/usr/local/pgsql/bin/psql -l</span><br><span class="line"><span class="comment"># 连接数据库</span></span><br><span class="line">/usr/local/pgsql/bin/psql testdb</span><br></pre></td></tr></table></figure><h1 id="PostgreSQL数据类型"><a href="#PostgreSQL数据类型" class="headerlink" title="PostgreSQL数据类型"></a>PostgreSQL数据类型</h1><h2 id="数字类型"><a href="#数字类型" class="headerlink" title="数字类型"></a>数字类型</h2><table><thead><tr><th align="center">名字</th><th align="center">大小</th><th align="center">描述</th><th align="center">范围</th></tr></thead><tbody><tr><td align="center"><code>smallint</code></td><td align="center">2字节</td><td align="center">小范围整数</td><td align="center">-32768 to +32767</td></tr><tr><td align="center"><code>integer</code></td><td align="center">4字节</td><td align="center">整数的典型选择</td><td align="center">-2147483648 to +2147483647</td></tr><tr><td align="center"><code>bigint</code></td><td align="center">8字节</td><td align="center">大范围整数</td><td align="center">-9223372036854775808 to +9223372036854775807</td></tr><tr><td align="center"><code>decimal</code></td><td align="center">可变</td><td align="center">用户指定精度，精确</td><td align="center">最高小数点前131072位，以及小数点后16383位</td></tr><tr><td align="center"><code>numeric</code></td><td align="center">可变</td><td align="center">用户指定精度，精确</td><td align="center">最高小数点前131072位，以及小数点后16383位</td></tr><tr><td align="center"><code>real</code></td><td align="center">4字节</td><td align="center">可变精度，不精确</td><td align="center">6位十进制精度</td></tr><tr><td align="center"><code>double precision</code></td><td align="center">8字节</td><td align="center">可变精度，不精确</td><td align="center">15位十进制精度</td></tr><tr><td align="center"><code>smallserial</code></td><td align="center">2字节</td><td align="center">自动增加的小整数</td><td align="center">1到32767</td></tr><tr><td align="center"><code>serial</code></td><td align="center">4字节</td><td align="center">自动增加的整数</td><td align="center">1到2147483647</td></tr></tbody></table><h2 id="序数类型"><a href="#序数类型" class="headerlink" title="序数类型"></a>序数类型</h2><p><code>smallserial</code>、<code>serial</code>和<code>bigserial</code>类型不是真正的类型，它们只是为了创建唯一标识符列而存在的方便符号（类似其它一些数据库中支持的<code>AUTO_INCREMENT</code>属性）。 在目前的实现中，下面一个语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tablename (</span><br><span class="line">    colname SERIAL</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>等价于以下语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> SEQUENCE tablename_colname_seq <span class="keyword">AS</span> <span class="type">integer</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tablename (</span><br><span class="line">    colname <span class="type">integer</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> nextval(<span class="string">&#x27;tablename_colname_seq&#x27;</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">ALTER</span> SEQUENCE tablename_colname_seq OWNED <span class="keyword">BY</span> tablename.colname;</span><br></pre></td></tr></table></figure><p>因此，我们就创建了一个整数列并且把它的缺省值安排为从一个序列发生器取值。应用了一个<code>NOT NULL</code>约束以确保空值不会被插入（在大多数情况下你可能还希望附加一个<code>UNIQUE</code>或者<code>PRIMARY KEY</code>约束避免意外地插入重复的值，但这个不是自动发生的）。最后，该序列被标记为“属于”该列，这样当列或表被删除时该序列也会被删除。</p><h2 id="字符类型"><a href="#字符类型" class="headerlink" title="字符类型"></a>字符类型</h2><table><thead><tr><th align="center">名字</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><code>character varying(n)</code>, <code>varchar(n)</code></td><td align="center">有限制的变长</td></tr><tr><td align="center"><code>character(n)</code>, <code>char(n)</code></td><td align="center">定长，空格填充</td></tr><tr><td align="center"><code>text</code></td><td align="center">无限变长</td></tr></tbody></table><h2 id="日期-x2F-时间类型"><a href="#日期-x2F-时间类型" class="headerlink" title="日期&#x2F;时间类型"></a>日期&#x2F;时间类型</h2><table><thead><tr><th align="center">名字</th><th align="center">描述</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">timestamp</td><td align="center">包括日期和时间（无时区）</td><td align="center">1999-01-08 04:05:06.332</td></tr><tr><td align="center">date</td><td align="center">日期</td><td align="center">1999-01-08、19990108</td></tr><tr><td align="center">time</td><td align="center">一天中的时间</td><td align="center">04:05:06.789</td></tr><tr><td align="center">interval</td><td align="center">时间间隔</td><td align="center">interval ‘1 day’</td></tr></tbody></table><h3 id="间隔单位缩写"><a href="#间隔单位缩写" class="headerlink" title="间隔单位缩写"></a>间隔单位缩写</h3><table><thead><tr><th align="center">缩写</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">Y</td><td align="center">年</td></tr><tr><td align="center">M</td><td align="center">月（在日期部分中）</td></tr><tr><td align="center">W</td><td align="center">周</td></tr><tr><td align="center">D</td><td align="center">日</td></tr><tr><td align="center">H</td><td align="center">小时</td></tr><tr><td align="center">M</td><td align="center">分钟 (在时间部分中）</td></tr><tr><td align="center">S</td><td align="center">秒</td></tr></tbody></table><h2 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h2><table><thead><tr><th align="center">名称</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">boolean</td><td align="center">输入：<br />真：true、yes、on、1或者这些字符的唯一前缀，不区分大小写<br />假：false、no、off、0或者这些字符的唯一前缀，不区分大小写<br />输出：<br />真：t<br />假：f<br /></td></tr></tbody></table><h2 id="常用函数和操作符"><a href="#常用函数和操作符" class="headerlink" title="常用函数和操作符"></a>常用函数和操作符</h2><h3 id="字符串相关"><a href="#字符串相关" class="headerlink" title="字符串相关"></a>字符串相关</h3><table><thead><tr><th align="center">名称</th><th align="center">描述</th><th align="center">案例</th><th align="center">结果</th></tr></thead><tbody><tr><td align="center">||</td><td align="center">串接</td><td align="center">‘Post’ || ‘greSQL’</td><td align="center">PostgreSQL</td></tr><tr><td align="center">bit_length(<em><code>string</code></em>)</td><td align="center">串中的位数</td><td align="center"><code>bit_length(&#39;jose&#39;)</code></td><td align="center"><code>32</code></td></tr><tr><td align="center"><code>char_length(</code>string<code>)</code> or <code>character_length(</code>string<code>)</code></td><td align="center">串中字符数</td><td align="center"><code>char_length(&#39;jose&#39;)</code></td><td align="center"><code>4</code></td></tr><tr><td align="center">length(<em><code>string</code></em>)</td><td align="center">*<code>string</code>*中的字符数</td><td align="center"><code>length(&#39;jose&#39;)</code></td><td align="center"><code>4</code></td></tr><tr><td align="center">lower(<em><code>string</code></em>)</td><td align="center">将字符串转换为小写形式</td><td align="center"><code>lower(&#39;TOM&#39;)</code></td><td align="center"><code>tom</code></td></tr><tr><td align="center">upper(<em><code>string</code></em>)</td><td align="center">将字符串转换成大写形式</td><td align="center"><code>upper(&#39;tom&#39;)</code></td><td align="center"><code>TOM</code></td></tr><tr><td align="center">overlay(<em><code>string</code></em> placing <em><code>string</code></em> from <code>int</code> [for <code>int</code>])</td><td align="center">替换子串</td><td align="center"><code>overlay(&#39;Txxxxas&#39; placing &#39;hom&#39; from 2 for 4)</code></td><td align="center"><code>Thomas</code></td></tr><tr><td align="center">position(<em><code>substring</code></em> in <em><code>string</code></em>)</td><td align="center">定位指定子串</td><td align="center"><code>position(&#39;om&#39; in &#39;Thomas&#39;)</code></td><td align="center"><code>3</code></td></tr><tr><td align="center">substring(<em><code>string</code></em> [from <code>int</code>] [for <code>int</code>])</td><td align="center">提取子串</td><td align="center"><code>substring(&#39;Thomas&#39; from 2 for 3)</code></td><td align="center"><code>hom</code></td></tr><tr><td align="center">substr(<em><code>string</code></em>, <em><code>from</code></em> [, <em><code>count</code></em>])</td><td align="center">提取子串</td><td align="center"><code>substr(&#39;alphabet&#39;, 3, 2)</code></td><td align="center"><code>ph</code></td></tr><tr><td align="center">trim([leading |trailing|both] [<em><code>characters</code></em>] from <em><code>string</code></em>)</td><td align="center">从*<code>string</code><em>的开头、结尾或者两端（<code>both</code>是默认值）移除只包含</em><code>characters</code>*（默认是一个空格）中字符的最长字符串</td><td align="center"><code>trim(both &#39;xyz&#39; from &#39;yxTomxx&#39;)</code></td><td align="center"><code>Tom</code></td></tr><tr><td align="center">ascii(<em><code>string</code></em>)</td><td align="center">参数第一个字符的ASCII代码。对于UTF8返回该字符的Unicode代码点。对于其他多字节编码，该参数必须是一个ASCII字符。</td><td align="center"><code>ascii(&#39;x&#39;)</code></td><td align="center"><code>120</code></td></tr><tr><td align="center">chr(<code>int</code>)</td><td align="center">给定代码的字符。对于UTF8该参数被视作一个Unicode代码点。对于其他多字节编码该参数必须指定一个ASCII字符。NULL (0) 字符不被允许，因为文本数据类型不能存储这种字节。</td><td align="center"><code>chr(65)</code></td><td align="center"><code>A</code></td></tr><tr><td align="center">left(<em><code>str</code></em> <code>text</code>, <em><code>n</code></em> <code>int</code>)</td><td align="center">返回字符串中的前*<code>n</code><em>个字符。当</em><code>n</code>*为负时，将返回除了最后</td><td align="center"><em><code>n</code></em>|个字符之外的所有字符。</td><td align="center"><code>left(&#39;abcde&#39;, 2)</code></td></tr><tr><td align="center">right(<em><code>str</code></em> <code>text</code>, <em><code>n</code></em> <code>int</code>)</td><td align="center">回字符串中的最后*<code>n</code><em>个字符。如果</em><code>n</code>*为负，返回除最前面的</td><td align="center"><em><code>n</code></em>|个字符外的所有字符。</td><td align="center"><code>right(&#39;abcde&#39;, 2)</code></td></tr><tr><td align="center">md5(<em><code>string</code></em>)</td><td align="center">计算*<code>string</code>*的 MD5 哈希，返回十六进制的结果</td><td align="center"><code>md5(&#39;abc&#39;)</code></td><td align="center"><code>900150983cd24fb0 d6963f7d28e17f72</code></td></tr><tr><td align="center">repeat(<em><code>string</code></em> <code>text</code>, <em><code>number</code></em> <code>int</code>)</td><td align="center">重复*<code>string</code><em>指定的</em><code>number</code>*次</td><td align="center"><code>repeat(&#39;Pg&#39;, 4)</code></td><td align="center"><code>PgPgPgPg</code></td></tr><tr><td align="center">replace(<em><code>string</code></em> <code>text</code>, <em><code>from</code></em> <code>text</code>, <em><code>to</code></em> <code>text</code>)</td><td align="center">将*<code>string</code><em>中出现的所有子串</em><code>from</code><em>替换为子串</em><code>to</code>*</td><td align="center"><code>replace(&#39;abcdefabcdef&#39;, &#39;cd&#39;, &#39;XX&#39;)</code></td><td align="center"><code>abXXefabXXef</code></td></tr><tr><td align="center">reverse(<em><code>str</code></em>)</td><td align="center">返回反转的字符串。</td><td align="center"><code>reverse(&#39;abcde&#39;)</code></td><td align="center"><code>edcba</code></td></tr><tr><td align="center">starts_with(<em><code>string</code></em>, <em><code>prefix</code></em>)</td><td align="center">如果*<code>string</code><em>以</em><code>prefix</code>*开始则返回真。</td><td align="center"><code>starts_with(&#39;alphabet&#39;, &#39;alph&#39;)</code></td><td align="center"><code>t</code></td></tr><tr><td align="center">to_hex(<em><code>number</code></em> <code>int</code> or <code>bigint</code>)</td><td align="center">将*<code>number</code>*转换到它等效的十六进制表示</td><td align="center"><code>to_hex(2147483647)</code></td><td align="center"><code>7fffffff</code></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h3 id="日期-x2F-时间相关"><a href="#日期-x2F-时间相关" class="headerlink" title="日期&#x2F;时间相关"></a>日期&#x2F;时间相关</h3><table><thead><tr><th align="center">名称</th><th align="center">描述</th><th></th></tr></thead><tbody><tr><td align="center">to_date(<code>text</code>, <code>text</code>)</td><td align="center">把字符串转成日期</td><td>to_date(‘2022-01-01’, ‘YYYY-MM-DD’)</td></tr><tr><td align="center">to_char(<code>date</code>, <code>text</code>)</td><td align="center">把日期转成字符串</td><td>to_char(date1, ‘YYYYMMDD’)</td></tr><tr><td align="center">current_date</td><td align="center">当前日期</td><td></td></tr><tr><td align="center">current_time</td><td align="center">当前时间with time zone</td><td></td></tr><tr><td align="center">current_timestamp</td><td align="center">当前日期和时间with time zone</td><td></td></tr><tr><td align="center">localtime</td><td align="center">当前时间</td><td></td></tr><tr><td align="center">localtimestamp</td><td align="center">当前日期和时间</td><td></td></tr><tr><td align="center">now()</td><td align="center">当前日期和时间with time zone</td><td></td></tr><tr><td align="center"></td><td align="center"></td><td></td></tr></tbody></table><h1 id="PostgreSQL常用sql脚本"><a href="#PostgreSQL常用sql脚本" class="headerlink" title="PostgreSQL常用sql脚本"></a>PostgreSQL常用sql脚本</h1><h2 id="查看数据库版本"><a href="#查看数据库版本" class="headerlink" title="查看数据库版本"></a>查看数据库版本</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> version();</span><br></pre></td></tr></table></figure><h2 id="查看所有表信息"><a href="#查看所有表信息" class="headerlink" title="查看所有表信息"></a>查看所有表信息</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> pg_tables;</span><br></pre></td></tr></table></figure><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test(</span><br><span class="line">    id <span class="type">int</span> <span class="keyword">primary</span> key, <span class="comment">-- primary key表示主键</span></span><br><span class="line">key1 <span class="type">numeric</span> <span class="keyword">default</span> <span class="number">0.0</span>, <span class="comment">-- default指定默认值</span></span><br><span class="line">    key2 text <span class="keyword">default</span> <span class="string">&#x27;test&#x27;</span> <span class="keyword">not</span> <span class="keyword">null</span>, <span class="comment">-- not null表示非空约束</span></span><br><span class="line">    <span class="comment">-- generated always as () stored 表示生成列的生成规则</span></span><br><span class="line">    key3 <span class="type">numeric</span> generated always <span class="keyword">as</span> (key1 <span class="operator">/</span> <span class="number">10</span>) stored,</span><br><span class="line">    <span class="comment">-- 列约束，constraint指定约束名称 check 表示检查约束</span></span><br><span class="line">    key4 <span class="type">numeric</span> <span class="keyword">constraint</span> test_key4 <span class="keyword">check</span> (key4 <span class="operator">&gt;</span> <span class="number">0</span>), </span><br><span class="line">    key5 <span class="type">integer</span> <span class="keyword">unique</span>, <span class="comment">-- unique表示唯一约束，可写为 unique (key5)</span></span><br><span class="line">     <span class="comment">-- 外键约束,on delete restrict表示其他表中相关数据删除后，本表数据不删除</span></span><br><span class="line">    key6 <span class="type">integer</span> <span class="keyword">references</span> test2(id) <span class="keyword">on</span> <span class="keyword">delete</span> restrict,</span><br><span class="line">    <span class="comment">-- on delete cascade表示其他表中数据删除后，本表数据也要删除</span></span><br><span class="line">    key7 <span class="type">integer</span> <span class="keyword">references</span> test3(id) <span class="keyword">on</span> <span class="keyword">delete</span> cascade,</span><br><span class="line">    <span class="comment">-- 表级检查约束</span></span><br><span class="line">    <span class="keyword">constraint</span> test_key4_key1 <span class="keyword">check</span> (key4 <span class="operator">&gt;</span> key1 <span class="keyword">and</span> key1 <span class="operator">&gt;</span> <span class="number">0</span>),</span><br><span class="line">    <span class="comment">-- 表级唯一约束</span></span><br><span class="line">    <span class="keyword">constraint</span> test_key4_key5 <span class="keyword">unique</span> (key4, key5),</span><br><span class="line">    <span class="comment">-- 表级外键约束</span></span><br><span class="line">    <span class="keyword">constraint</span> test_key1_key5 <span class="keyword">foreign</span> key (key1, key5) <span class="keyword">references</span> test3(key1, key2)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="给表、列添加注释"><a href="#给表、列添加注释" class="headerlink" title="给表、列添加注释"></a>给表、列添加注释</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">comment <span class="keyword">on</span> <span class="keyword">table</span> test <span class="keyword">is</span> <span class="string">&#x27;testtest&#x27;</span>;</span><br><span class="line">comment <span class="keyword">on</span> <span class="keyword">column</span> test.key2 <span class="keyword">is</span> <span class="string">&#x27;key2test&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> INDEX test2_mm_idx <span class="keyword">ON</span> test2 (major, minor);</span><br><span class="line"><span class="keyword">DROP</span> INDEX test2_mm_idx;</span><br></pre></td></tr></table></figure><h2 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 增加列，创建表时的一些约束都可以用在这儿</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">add</span> <span class="keyword">column</span> key8 text, <span class="keyword">add</span> <span class="keyword">column</span> key9 text;</span><br><span class="line"># 移除列,cascade表示授权删除任何依赖该列的数据（如外键）</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">drop</span> <span class="keyword">column</span> key8 cascade;</span><br><span class="line"># 增加约束</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">add</span> <span class="keyword">check</span>(key7 <span class="operator">&gt;</span> <span class="number">0</span>);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">alter</span> <span class="keyword">column</span> key7 <span class="keyword">set</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br><span class="line"># 移除约束</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">drop</span> <span class="keyword">constraint</span> constraint_name;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">alter</span> <span class="keyword">column</span> key7 <span class="keyword">drop</span> <span class="keyword">not</span> <span class="keyword">null</span>; <span class="comment">-- 移除test表key7列上的非空约束</span></span><br><span class="line"># 修改列的默认值</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">alter</span> <span class="keyword">column</span> key1 <span class="keyword">set</span> <span class="keyword">default</span> <span class="number">2.0</span>;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">alter</span> <span class="keyword">column</span> key1 <span class="keyword">drop</span> <span class="keyword">default</span>; <span class="comment">-- 移除默认值</span></span><br><span class="line"># 修改列的数据类型</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">alter</span> <span class="keyword">column</span> key1 type <span class="type">numeric</span>(<span class="number">10</span>, <span class="number">2</span>);</span><br><span class="line"># 重命名列</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test rename <span class="keyword">column</span> id <span class="keyword">to</span> key0;</span><br><span class="line"># 重命名表</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test rename <span class="keyword">to</span> test1;</span><br></pre></td></tr></table></figure><h2 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 重新分配test表的所有者，超级用户总是可以做到这点，普通角色只有同时是对象的当前所有者（或者是拥有角色的一个成员）以及新拥有角色的一个成员时才能做同样的事</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test owner <span class="keyword">to</span> new_owner;</span><br><span class="line"># 授予joe用户更新test表的权限</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">update</span> <span class="keyword">on</span> test <span class="keyword">to</span> joe;</span><br><span class="line">## 授权其他写法</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> mytable <span class="keyword">TO</span> PUBLIC;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">UPDATE</span>, <span class="keyword">INSERT</span> <span class="keyword">ON</span> mytable <span class="keyword">TO</span> admin;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> (col1), <span class="keyword">UPDATE</span> (col1) <span class="keyword">ON</span> mytable <span class="keyword">TO</span> miriam_rw;</span><br><span class="line"># 撤销public用户对test表的所有权限</span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">all</span> <span class="keyword">on</span> test <span class="keyword">from</span> public;</span><br></pre></td></tr></table></figure><h2 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># 创建分区表，<span class="keyword">range</span>表示范围分区，其他的还有list和hash分区</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test2(</span><br><span class="line">id <span class="type">integer</span>,</span><br><span class="line">logtime <span class="type">date</span></span><br><span class="line">) <span class="keyword">partition</span> <span class="keyword">by</span> <span class="keyword">range</span>(logtime);</span><br><span class="line"># 创建分区</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test2_202001 <span class="keyword">partition</span> <span class="keyword">of</span> test2 <span class="keyword">for</span> <span class="keyword">values</span> <span class="keyword">from</span> (MINVALUE) <span class="keyword">to</span> (<span class="string">&#x27;2020-01-01&#x27;</span>);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test2_202002 <span class="keyword">partition</span> <span class="keyword">of</span> test2 <span class="keyword">for</span> <span class="keyword">values</span> <span class="keyword">from</span> (<span class="string">&#x27;2020-01-01&#x27;</span>) <span class="keyword">to</span> (<span class="string">&#x27;2020-02-01&#x27;</span>);</span><br><span class="line"># 删除分区</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> test2_202001;</span><br><span class="line"></span><br><span class="line"># 列表分区</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test3(</span><br><span class="line">id <span class="type">integer</span>,</span><br><span class="line">logtime <span class="type">date</span></span><br><span class="line">) <span class="keyword">partition</span> <span class="keyword">by</span> <span class="keyword">range</span>(id);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test3_p1 <span class="keyword">partition</span> <span class="keyword">of</span> test3 <span class="keyword">for</span> <span class="keyword">values</span> <span class="keyword">in</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"># 哈希分区 MODULUS<span class="operator">-</span>模REMAINDER<span class="operator">-</span>余数</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test4(</span><br><span class="line">id <span class="type">integer</span>,</span><br><span class="line">logtime <span class="type">date</span></span><br><span class="line">) <span class="keyword">partition</span> <span class="keyword">by</span> hash(id);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test4_p1 <span class="keyword">partition</span> <span class="keyword">of</span> test4 <span class="keyword">for</span> <span class="keyword">values</span> <span class="keyword">with</span>(MODULUS <span class="number">4</span>, REMAINDER <span class="number">0</span>);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test4_p2 <span class="keyword">partition</span> <span class="keyword">of</span> test4 <span class="keyword">for</span> <span class="keyword">values</span> <span class="keyword">with</span>(MODULUS <span class="number">4</span>, REMAINDER <span class="number">1</span>);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test4_p3 <span class="keyword">partition</span> <span class="keyword">of</span> test4 <span class="keyword">for</span> <span class="keyword">values</span> <span class="keyword">with</span>(MODULUS <span class="number">4</span>, REMAINDER <span class="number">2</span>);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test4_p4 <span class="keyword">partition</span> <span class="keyword">of</span> test4 <span class="keyword">for</span> <span class="keyword">values</span> <span class="keyword">with</span>(MODULUS <span class="number">4</span>, REMAINDER <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"># 创建默认分区</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> cities_partdef <span class="keyword">PARTITION</span> <span class="keyword">OF</span> cities <span class="keyword">DEFAULT</span></span><br></pre></td></tr></table></figure><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 分页</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> account limit <span class="number">3</span> <span class="keyword">offset</span> <span class="number">0</span>;</span><br><span class="line"># <span class="keyword">with</span>的简单使用</span><br><span class="line"><span class="keyword">with</span> t <span class="keyword">as</span> (</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> account <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;lisi&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t;</span><br></pre></td></tr></table></figure><h2 id="事务操作"><a href="#事务操作" class="headerlink" title="事务操作"></a>事务操作</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span>; <span class="comment">-- 开启事务</span></span><br><span class="line"><span class="keyword">update</span> account <span class="keyword">set</span> balance <span class="operator">=</span> balance <span class="operator">-</span> <span class="number">10</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line"><span class="keyword">savepoint</span> my_savepoint; <span class="comment">-- 添加保存点</span></span><br><span class="line"><span class="keyword">update</span> account <span class="keyword">set</span> balance <span class="operator">=</span> balance <span class="operator">+</span> <span class="number">10</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;lisi&#x27;</span>;</span><br><span class="line"><span class="keyword">rollback</span> <span class="keyword">to</span> my_savepoint; <span class="comment">-- 回滚至保存点</span></span><br><span class="line"><span class="keyword">update</span> account <span class="keyword">set</span> balance <span class="operator">=</span> balance <span class="operator">+</span> <span class="number">10</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;wangwu&#x27;</span>;</span><br><span class="line"><span class="keyword">commit</span>; <span class="comment">-- 提交事务</span></span><br><span class="line"><span class="comment">-- rollback; 回滚事务</span></span><br></pre></td></tr></table></figure><h2 id="窗口函数"><a href="#窗口函数" class="headerlink" title="窗口函数"></a>窗口函数</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 窗口函数与聚合函数类似，只不过窗口函数不会将结果聚合在一行输出</span><br><span class="line"># 关键字有 <span class="keyword">over</span>、rank、<span class="keyword">window</span>、<span class="keyword">partition</span>等</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(salary) <span class="keyword">over</span> w, <span class="built_in">avg</span>(salary) <span class="keyword">over</span> w, <span class="built_in">rank</span>() <span class="keyword">over</span> w</span><br><span class="line"><span class="keyword">from</span> empsalary </span><br><span class="line"><span class="keyword">window</span> w <span class="keyword">as</span> (<span class="keyword">partition</span> <span class="keyword">by</span> depname <span class="keyword">order</span> <span class="keyword">by</span> salary <span class="keyword">desc</span>);</span><br></pre></td></tr></table></figure><h2 id="表继承"><a href="#表继承" class="headerlink" title="表继承"></a>表继承</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 一张表继承另一张表的所有列</span><br><span class="line"># 关键字:inherits</span><br><span class="line"># <span class="keyword">only</span>表示只查询cities，不涉及继承于cities的其他表</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> capitals (</span><br><span class="line">state <span class="type">int</span></span><br><span class="line">) inherits (cities);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">only</span> cities;</span><br></pre></td></tr></table></figure><h2 id="索引-1"><a href="#索引-1" class="headerlink" title="索引"></a>索引</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 创建索引</span><br><span class="line"><span class="keyword">create</span> index test3_idx_id <span class="keyword">on</span> test3(id, name);</span><br><span class="line"># 删除索引</span><br><span class="line"><span class="keyword">drop</span> index test3_idx_id;</span><br><span class="line"># 唯一索引,pgsql会自动在唯一列上创建一个唯一索引</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index idx_name <span class="keyword">on</span> table_name(column1, column2);</span><br><span class="line"># 表达式索引</span><br><span class="line"><span class="keyword">CREATE</span> INDEX test1_lower_col1_idx <span class="keyword">ON</span> test1 (<span class="built_in">lower</span>(col1));</span><br><span class="line"><span class="keyword">CREATE</span> INDEX people_names <span class="keyword">ON</span> people ((first_name <span class="operator">||</span> <span class="string">&#x27; &#x27;</span> <span class="operator">||</span> last_name));</span><br><span class="line"># 部分索引</span><br><span class="line"># 使用部分索引的一个主要原因是避免索引公值。由于搜索一个公值的查询（一个在所有表行中占比超过一定百分比的值）不会使用索引，所以完全没有理由将这些行保留在索引中。这可以减小索引的尺寸，同时也将加速使用索引的查询。它也将加速很多表更新操作，因为这种索引并不需要在所有情况下都被更新</span><br><span class="line"><span class="keyword">create</span> index indx_name <span class="keyword">on</span> tablename(columnname)</span><br><span class="line"><span class="keyword">where</span> columnname <span class="operator">&gt;</span> <span class="number">20</span>;</span><br><span class="line"># 覆盖索引</span><br><span class="line"># PostgreSQL中的所有索引是二级索引,这意味着每个索引都是与表的主数据区（在PostgreSQL术语称为表的堆中）分开存储。这意味着在普通索引扫描中，每行检索都需要从索引和堆中取数据。 此外，虽然匹配给定的可索引<span class="keyword">WHERE</span>条件的索引条目通常在一起靠近存储，但它们引用的表行可能在堆中的任何地方。 因此索引扫描的堆访问部分涉及到对堆的大量随机访问，这可能很慢，特别是在传统旋转媒介上。如 第 <span class="number">11.5</span> 节 中所述，位图扫描尝试通过按排序的顺序进行堆访问来减少成本，但这远远不够）。</span><br><span class="line"># 为了解决这种性能问题，PostgreSQL支持只用索引的扫描，这类扫描可以仅用一个索引来回答查询而不产生任何堆访问。其基本思想是直接从每一个索引项中直接返回值，而不是去参考相关的堆项</span><br><span class="line"># 例如 表的x、y列上有索引</span><br><span class="line"><span class="keyword">SELECT</span> x, y <span class="keyword">FROM</span> tab <span class="keyword">WHERE</span> x <span class="operator">=</span> <span class="string">&#x27;key&#x27;</span> <span class="keyword">AND</span> y <span class="operator">&lt;</span> <span class="number">42</span>; <span class="comment">-- 只使用索引的扫描</span></span><br><span class="line"><span class="keyword">SELECT</span> x, z <span class="keyword">FROM</span> tab <span class="keyword">WHERE</span> x <span class="operator">=</span> <span class="string">&#x27;key&#x27;</span>; <span class="comment">-- 产生堆访问</span></span><br><span class="line"># 查看执行计划</span><br><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test3 <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">2</span>;</span><br></pre></td></tr></table></figure><h1 id="角色-x2F-用户"><a href="#角色-x2F-用户" class="headerlink" title="角色&#x2F;用户"></a>角色&#x2F;用户</h1><p><strong>角色可用属性</strong></p><ul><li>login：登录权限。<code>create role test login;</code></li><li>superuser: 超级管理员权限.<code>create role test superuser;</code></li><li>createdb: 创建数据库的权限。<code>create role test createdb;</code></li><li>replication: 流复制的权限，一个拥有流复制权限的角色也需要被赋予登录的权限。<code>create role test replication login;</code></li><li>password: 设置角色登录密码。<code>create role test password &#39;123456&#39;</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 创建角色</span><br><span class="line"><span class="keyword">create</span> role test password <span class="string">&#x27;testpwd&#x27;</span> login;</span><br><span class="line"># 修改角色</span><br><span class="line"><span class="keyword">create</span> role test superuser;</span><br><span class="line"># 删除角色</span><br><span class="line"><span class="keyword">drop</span> role test;</span><br></pre></td></tr></table></figure><h1 id="权限-1"><a href="#权限-1" class="headerlink" title="权限"></a>权限</h1><h2 id="schema"><a href="#schema" class="headerlink" title="schema"></a>schema</h2><p>pg14版本及以前的版本，所有用户对<code>public</code>schema都有<code>CREATE</code>和<code>USAGE</code>的权限，pg15以后取消了<code>CREATE</code>的权限，需要手动授权。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 第一个public表示public schema，第二个public表示所有用户</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">CREATE</span> <span class="keyword">ON</span> SHCEMA public <span class="keyword">TO</span> PUBLIC;</span><br></pre></td></tr></table></figure><p><strong>查询&#x2F;设置搜索路径</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> search_path;</span><br><span class="line"><span class="keyword">SET</span> search_path <span class="keyword">TO</span> myschema,public;</span><br></pre></td></tr></table></figure><h1 id="使用pgAdmin"><a href="#使用pgAdmin" class="headerlink" title="使用pgAdmin"></a>使用pgAdmin</h1><h2 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h2><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># windows客户端下载</span><br><span class="line">https://www.pgadmin.org/download/pgadmin-4-windows/</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="汉化"><a href="#汉化" class="headerlink" title="汉化"></a>汉化</h3><p>File -&gt; preference -&gt; Miscellaneous -&gt; User language</p><p><img src="/pgAdmin%E6%B1%89%E5%8C%96.jpg" alt="pgAdmin汉化"> </p><h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><ul><li>改动数据库配置</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 修改data目录下pg_hba.conf,增加IPv4配置</span></span><br><span class="line">host    all         all          192.168.100.117/32        trust</span><br><span class="line"><span class="comment"># 2. 修改data目录下的postgresql.conf</span></span><br><span class="line">listen_addresses = <span class="string">&#x27;*&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>重启数据库</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/pgsql/bin/pg_ctl restart -D /usr/local/pgsql/data</span><br></pre></td></tr></table></figure><ul><li>pgAdmin创建连接</li></ul><p><img src="/pgAdmin%E6%B3%A8%E5%86%8C%E6%9C%8D%E5%8A%A1%E5%99%A8.jpg" alt="pgAdmin注册服务器"></p><h1 id="jdbc连接pg"><a href="#jdbc连接pg" class="headerlink" title="jdbc连接pg"></a>jdbc连接pg</h1><h2 id="jar包下载"><a href="#jar包下载" class="headerlink" title="jar包下载"></a>jar包下载</h2><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 下载地址</span><br><span class="line">https://jdbc.postgresql.org/download.html</span><br></pre></td></tr></table></figure><h2 id="maven依赖"><a href="#maven依赖" class="headerlink" title="maven依赖"></a>maven依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.postgresql/postgresql --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.postgresql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>postgresql<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>42.3.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="jdbc连接查询"><a href="#jdbc连接查询" class="headerlink" title="jdbc连接查询"></a>jdbc连接查询</h2><p><strong>url</strong></p><p><code>jdbc:postgresql://ip:port/dbname?stringtype=unspecified</code></p><ul><li><code>stringtype=unspecified</code>：不指定字符串的类型，而由服务器来推断字符串的类型，默认值为<code>varchar</code>，可用于解决sql参数不能传字符串的问题；</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lhx.pg;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PgTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注册驱动</span></span><br><span class="line">        Class.forName(<span class="string">&quot;org.postgresql.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// url: jdbc:postgresql://ip:port/dbname?stringtype=unspecified</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:postgresql://192.168.5.112:5432/genericdb&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;postgres&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;postgres&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from account&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> (</span><br><span class="line">                <span class="comment">// 获取连接</span></span><br><span class="line">                <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> DriverManager.getConnection(url, user, password);</span><br><span class="line">                <span class="comment">// 获取数据库操作对象</span></span><br><span class="line">                <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> connection.prepareStatement(sql);</span><br><span class="line">                <span class="comment">// 执行sql</span></span><br><span class="line">                <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> preparedStatement.executeQuery()</span><br><span class="line">            ) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取执行结果</span></span><br><span class="line">            <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> resultSet.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">                <span class="type">Integer</span> <span class="variable">balance</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;balance&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;name: &quot;</span> + name + <span class="string">&quot;, balance: &quot;</span> + balance);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="pg搭建主从复制"><a href="#pg搭建主从复制" class="headerlink" title="pg搭建主从复制"></a>pg搭建主从复制</h1><blockquote><p>版本：12.6</p><p>主机：172.19.3.63</p><p>从机：172.19.3.60</p></blockquote><h2 id="主机配置"><a href="#主机配置" class="headerlink" title="主机配置"></a>主机配置</h2><p><strong>创建postgres用户和用户组</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建用户和组，有的安装方式在安装完时会自动创建</span></span><br><span class="line">groupadd postgres</span><br><span class="line">useradd -g postgres postgres</span><br><span class="line"><span class="comment"># 切换用户</span></span><br><span class="line">su postgres</span><br></pre></td></tr></table></figure><p><strong>初始化并启动数据库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./initdb -D /home/postgres/data</span><br><span class="line">./pg_ctl -D /home/postgres/data -l logfile start</span><br><span class="line"><span class="comment"># 连接postgres数据库</span></span><br><span class="line">./psql</span><br></pre></td></tr></table></figure><p><strong>创建用于复制的用户</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 主服务器上创建复制用户replicator/itc123，拥有登录和复制权限</span></span><br><span class="line"><span class="keyword">CREATE</span> ROLE replicator LOGIN REPLICATION PASSWORD <span class="string">&#x27;itc123&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>修改配置文件</strong></p><p><code>/home/postgres/data/pg_hba.conf</code>添加复制用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Allow replication connections from localhost, by a user with the</span><br><span class="line"># replication privilege.</span><br><span class="line">host replicationreplicator172.19.3.60/32md5</span><br></pre></td></tr></table></figure><p><code>/home/postgres/data/postgresql.conf</code>修改配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">listen_addresses = &#x27;*&#x27;</span><br><span class="line">wal_level = replica</span><br><span class="line">archive_mode = on</span><br><span class="line">archive_command = &#x27;test ! -f /home/postgres/data/pgarchive/%f &amp;&amp; cp %p /home/postgres/data/pgarchive/%f&#x27;</span><br><span class="line">max_wal_senders = 2</span><br><span class="line">wal_keep_segments = 64</span><br><span class="line">max_connections = 100</span><br></pre></td></tr></table></figure><p><strong>重启主库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./pg_ctl -D /home/postgres/data -l logfile restart</span><br></pre></td></tr></table></figure><h2 id="从机配置"><a href="#从机配置" class="headerlink" title="从机配置"></a>从机配置</h2><blockquote><p>从机不用初始化，需要从主机备份数据；若已初始化，删除<code>/home/postgres/data</code></p><p>从机是只读的</p></blockquote><hr><p><strong>创建postgres用户和用户组</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建用户和组，有的安装方式在安装完时会自动创建</span></span><br><span class="line">groupadd postgres</span><br><span class="line">useradd -g postgres postgres</span><br><span class="line"><span class="comment"># 切换用户</span></span><br><span class="line">su postgres</span><br></pre></td></tr></table></figure><p><strong>从主库备份数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./pg_basebackup -h 172.19.3.63 -p 5432 -U replicator -W -F p -R -P -X stream -D /home/postgres/data</span><br></pre></td></tr></table></figure><p><strong>修改配置文件</strong></p><p><code>/home/postgres/data/standby.signal</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">standby_mode = &#x27;on&#x27;</span><br></pre></td></tr></table></figure><p><code>/home/postgres/data/postgresql.conf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">primary_conninfo = &#x27;host=172.19.3.63 port=5432 user=replicator password=itc123&#x27;</span><br><span class="line">recovery_target_timeline = &#x27;latest&#x27;</span><br><span class="line">hot_standby = on</span><br><span class="line">max_standby_streaming_delay = 30s</span><br><span class="line">wal_receiver_status_interval = 10s</span><br><span class="line">hot_standby_feedback = on</span><br></pre></td></tr></table></figure><p><strong>启动数据库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./pg_ctl -D /home/postgres/data -l logfile start</span><br></pre></td></tr></table></figure><h2 id="验证主从"><a href="#验证主从" class="headerlink" title="验证主从"></a>验证主从</h2><p><strong>主从查看复制状态</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 主库查看发送状态</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> pg_stat_replication;</span><br><span class="line"><span class="comment">-- 从库查看接收状态</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> pg_stat_wal_receiver;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 主从库查看复制状态</span></span><br><span class="line">./pg_controldata -D /home/postgres/data/</span><br></pre></td></tr></table></figure><p><strong>主库操作</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_test(id serial, name <span class="type">varchar</span>(<span class="number">200</span>));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_test(name) <span class="keyword">values</span>(<span class="string">&#x27;test1&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_test;</span><br></pre></td></tr></table></figure><p><strong>从库操作</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_test;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_test(name) <span class="keyword">values</span>(<span class="string">&#x27;test2&#x27;</span>); <span class="comment">-- error,从库只读</span></span><br></pre></td></tr></table></figure><h2 id="主从切换"><a href="#主从切换" class="headerlink" title="主从切换"></a>主从切换</h2><p><strong>停止主库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 模拟故障，停止主库</span></span><br><span class="line">./pg_ctl -D /home/postgres/data -l logfile stop </span><br></pre></td></tr></table></figure><p><strong>升级从库为主库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./pg_ctl promote -D /home/postgres/data</span><br></pre></td></tr></table></figure><h1 id="pg异常处理"><a href="#pg异常处理" class="headerlink" title="pg异常处理"></a>pg异常处理</h1><h2 id="启动异常"><a href="#启动异常" class="headerlink" title="启动异常"></a>启动异常</h2><p><strong>异常信息：</strong><code>could not open shared memory segment &quot;/PostgreSQL.1219399659&quot;: Permission denied</code></p><p><strong>解决方法：</strong>修改<code>postgresql.conf</code>中<code>dynamic_shared_memory_type = sysv</code></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PostgreSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle迁移至PostgreSQL</title>
      <link href="/2022/08/16/middleware/Oracle%E8%BF%81%E7%A7%BB%E8%87%B3PostgreSQL/"/>
      <url>/2022/08/16/middleware/Oracle%E8%BF%81%E7%A7%BB%E8%87%B3PostgreSQL/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="数据库迁移"><a href="#数据库迁移" class="headerlink" title="数据库迁移"></a>数据库迁移</h1><blockquote><p>使用工具<code>Ora2Pg</code>进行数据库迁移；</p><p><code>Ora2Pg</code>:<strong>Moves Oracle and MySQL database to PostgreSQL</strong></p><p><code>Ora2Pg</code>官网：<code>https://ora2pg.darold.net/</code></p></blockquote><h2 id="搭建Ora2Pg环境"><a href="#搭建Ora2Pg环境" class="headerlink" title="搭建Ora2Pg环境"></a>搭建Ora2Pg环境</h2><h3 id="安装oracle-client"><a href="#安装oracle-client" class="headerlink" title="安装oracle client"></a>安装oracle client</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装oracle client</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># oracle instant client下载地址</span></span><br><span class="line"><span class="comment"># https://www.oracle.com/database/technologies/instant-client/linux-x86-64-downloads.html</span></span><br><span class="line"><span class="comment"># rpm包默认会安装到/usr/lib/oracle/11.2/client64目录下</span></span><br><span class="line">rpm -ivh oracle-instantclient11.2-basic-11.2.0.4.0-1.x86_64.rpm</span><br><span class="line">rpm -ivh oracle-instantclient11.2-sqlplus-11.2.0.4.0-1.x86_64.rpm</span><br><span class="line">rpm -ivh oracle-instantclient11.2-devel-11.2.0.4.0-1.x86_64.rpm</span><br><span class="line">rpm -ivh oracle-instantclient11.2-jdbc-11.2.0.4.0-1.x86_64.rpm</span><br><span class="line"><span class="built_in">mkdir</span> -p /usr/lib/oracle/11.2/client64/network/admin</span><br><span class="line">vi /usr/lib/oracle/11.2/client64/network/admin/tnsnames.ora <span class="comment"># 配置监听文件，内容见下</span></span><br><span class="line">vi /etc/profile <span class="comment"># 配置环境变量，添加内容见下</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"><span class="comment"># 测试连接oracle</span></span><br><span class="line">sqlplus username/password@tnsnames.ora中的监听器名称</span><br><span class="line">sqlplus username/password@ip:port/服务名称</span><br></pre></td></tr></table></figure><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tnsnames.ora文件内容</span></span><br><span class="line"><span class="attr">监听器名称</span> = <span class="string"></span></span><br><span class="line"> <span class="attr">(DESCRIPTION</span> =<span class="string"></span></span><br><span class="line">    <span class="attr">(ADDRESS_LIST</span> =<span class="string"></span></span><br><span class="line">      <span class="attr">(ADDRESS</span> = <span class="string">(PROTOCOL = TCP)(HOST = ip地址)(PORT = 端口号))</span></span><br><span class="line">    <span class="attr">)</span></span><br><span class="line">    <span class="attr">(CONNECT_DATA</span> =<span class="string"></span></span><br><span class="line">      <span class="attr">(SERVICE_NAME</span> = <span class="string">服务名) </span></span><br><span class="line">    <span class="attr">)</span> <span class="string"></span></span><br><span class="line"><span class="attr">)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># /etc/profile添加配置</span></span><br><span class="line"><span class="attr">export</span> <span class="string">ORACLE_HOME=/usr/lib/oracle/11.2/client64</span></span><br><span class="line"><span class="attr">export</span> <span class="string">PATH=$ORACLE_HOME/bin:$PATH</span></span><br><span class="line"><span class="attr">export</span> <span class="string">TNS_ADMIN=$ORACLE_HOME/network/admin</span></span><br><span class="line"><span class="attr">export</span> <span class="string">LD_LIBRARY_PATH=$ORACLE_HOME/lib:$LD_LIBRARY_PATH</span></span><br><span class="line"><span class="attr">export</span> <span class="string">NLS_LANG=AMERICAN_AMERICA.UTF8</span></span><br></pre></td></tr></table></figure><h3 id="安装Perl模块"><a href="#安装Perl模块" class="headerlink" title="安装Perl模块"></a>安装Perl模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看perl版本，需要5.10及以上的版本</span></span><br><span class="line">perl -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装相关模块</span></span><br><span class="line">yum -y install perl-YAML perl-Term-ReadLine perl-version perl-libs perl-devel perl-Test-* perl-Pod-* perl-ExtUtils-* perl-CGI perl-CPAN</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装DBI</span></span><br><span class="line"><span class="comment"># 下载地址https://github.com/perl5-dbi/dbi/tags</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /usr/local/perl/dbi</span><br><span class="line"><span class="built_in">cd</span> /usr/local/perl/dbi</span><br><span class="line">tar -zxvf DBI-1.643.tar.gz</span><br><span class="line"><span class="built_in">cd</span> DBI-1.643</span><br><span class="line">perl Makefile.PL</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装DBD::Oracle</span></span><br><span class="line"><span class="comment"># 下载地址https://github.com/singingfish/DBD-Oracle/tags</span></span><br><span class="line"><span class="comment"># https://cpan.metacpan.org/authors/id/Z/ZA/ZARQUON/DBD-Oracle-1.83.tar.gz</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /usr/local/perl/dbdoracle</span><br><span class="line"><span class="built_in">cd</span> /usr/local/perl/dbdoracle/</span><br><span class="line">tar -zxvf DBD-Oracle-1.83.tar.gz</span><br><span class="line"><span class="built_in">cd</span> DBD-Oracle-1.83</span><br><span class="line">perl Makefile.PL</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装DBD::Pg</span></span><br><span class="line"><span class="comment"># 下载地址：https://github.com/bucardo/dbdpg/tags</span></span><br><span class="line">yum install postgresql-devel</span><br><span class="line"><span class="built_in">mkdir</span> -p /usr/local/perl/dbdpg</span><br><span class="line"><span class="built_in">cd</span> /usr/local/perl/dbdpg/</span><br><span class="line">tar -zxvf dbdpg-3.15.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> dbdpg-3.15.1</span><br><span class="line">perl Makefile.PL</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装ora2pg</span></span><br><span class="line"><span class="comment"># 下载地址https://github.com/darold/ora2pg/tags</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /usr/local/perl/ora2pg</span><br><span class="line"><span class="built_in">cd</span> /usr/local/perl/ora2pg/</span><br><span class="line">tar -zxvf ora2pg-22.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> ora2pg-22.0</span><br><span class="line">perl Makefile.PL</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3 id="查看已安装的perl模块"><a href="#查看已安装的perl模块" class="headerlink" title="查看已安装的perl模块"></a>查看已安装的perl模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /tmp/check.pl <span class="comment"># 内容见下文</span></span><br><span class="line">perl /tmp/check.pl</span><br></pre></td></tr></table></figure><p><strong>check.pl内容</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/usr/bin/perl</span></span><br><span class="line">use strict;</span><br><span class="line">use ExtUtils::Installed;</span><br><span class="line">my $inst=ExtUtils::Installed-&gt;new();</span><br><span class="line">my @modules = $inst-&gt;modules();</span><br><span class="line">foreach(@modules)&#123;</span><br><span class="line">    my $ver = $inst-&gt;version($_) || &quot;???&quot;;</span><br><span class="line">    printf(&quot;%-12s -- %s\n&quot;,$_,$ver);</span><br><span class="line">&#125;</span><br><span class="line">exit;</span><br></pre></td></tr></table></figure><h3 id="删除安装的perl模块"><a href="#删除安装的perl模块" class="headerlink" title="删除安装的perl模块"></a>删除安装的perl模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在安装目录下执行</span></span><br><span class="line">make uninstall|grep <span class="built_in">unlink</span>|sh</span><br></pre></td></tr></table></figure><h2 id="使用Ora2Pg"><a href="#使用Ora2Pg" class="headerlink" title="使用Ora2Pg"></a>使用Ora2Pg</h2><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /etc/ora2pg/ora2pg.conf.dist /etc/ora2pg/ora2pg.conf</span><br><span class="line">vi /etc/ora2pg/ora2pg.conf <span class="comment"># 修改内容见下</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ORACLE_HOME/usr/lib/oracle/11.2/client64</span><br><span class="line">ORACLE_DSNdbi:Oracle:host=172.17.3.3;sid=orcl;port=1521</span><br><span class="line">ORACLE_USERir # 该用户需为DBA用户</span><br><span class="line">ORACLE_PWDir</span><br><span class="line">SCHEMAir</span><br><span class="line">EXPORT_SCHEMA1</span><br><span class="line">CREATE_SCHEMA1</span><br><span class="line">TYPETABLE # 导出表结构</span><br><span class="line">PG_DSNdbi:Pg:dbname=genericdb;host=192.168.5.112;port=5432</span><br><span class="line">PG_USER ir</span><br><span class="line">PG_PWDir</span><br><span class="line">FILE_PER_FKEYS1 # 将外键放到单独的sql脚本中，等数据迁移完毕后，再给表增加外键</span><br></pre></td></tr></table></figure><h3 id="导出结构和数据"><a href="#导出结构和数据" class="headerlink" title="导出结构和数据"></a>导出结构和数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、导出结构</span></span><br><span class="line"><span class="comment"># 设置ora2pg.conf中TYPE参数</span></span><br><span class="line">TYPE TABLE,VIEW,SEQUENCE,TRIGGER,FUNCTION,PROCEDURE,TABLESPACE,PARTITION</span><br><span class="line"><span class="comment"># 执行后会在当前目录下生成对应的sql脚本和ora2pg.log</span></span><br><span class="line">ora2pg -d -l ora2pg.log</span><br><span class="line"><span class="comment"># pg创建用户</span></span><br><span class="line">create user ir with password <span class="string">&#x27;ir&#x27;</span> superuser;</span><br><span class="line"><span class="comment"># 导入结构，分别执行导出的sql脚本</span></span><br><span class="line"><span class="comment"># 注意检查一下PARTITION_output.sql中是否存在重名的分区表，若存在，则手动调整一下分区表名称</span></span><br><span class="line"><span class="comment"># 注意：pg中，建表语句中表名如果不加双引号限制，则创建的表名默认为全小写，而oracle中为全大写</span></span><br><span class="line"><span class="comment"># 存放外键的sql脚本要等到表数据迁移完毕后再执行</span></span><br><span class="line">./psql -d genericdb -h 192.168.5.112 -p 5432 -U ir -f /tmp/xxx.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、导出数据</span></span><br><span class="line"><span class="comment"># 设置ora2pg.conf中TYPE参数</span></span><br><span class="line">TYPE INSERT</span><br><span class="line"><span class="comment"># 执行后数据会自动插入到pg库中</span></span><br><span class="line">ora2pg -d -l ora2pg.log</span><br></pre></td></tr></table></figure><h2 id="pg库方面的改动"><a href="#pg库方面的改动" class="headerlink" title="pg库方面的改动"></a>pg库方面的改动</h2><h3 id="修改配置文件-1"><a href="#修改配置文件-1" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>调整存放数据的<code>data</code>目录下的配置文件，允许其他ip连接pg</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 1. 修改data目录下pg_hba.conf,增加IPv4配置</span><br><span class="line">host    all         all          0.0.0.0/0        trust</span><br><span class="line"># 2. 修改data目录下的postgresql.conf</span><br><span class="line">listen_addresses = &#x27;*&#x27;</span><br></pre></td></tr></table></figure><h3 id="修改编码"><a href="#修改编码" class="headerlink" title="修改编码"></a>修改编码</h3><p>若<code>ora2pg</code>导出到<code>pg</code>失败，可考虑是pg库编码的问题。</p><hr><p><strong>命令行查看编码</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psql -l</span><br></pre></td></tr></table></figure><hr><p><strong>sql查看编码</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> pg_database <span class="keyword">where</span> datname <span class="operator">=</span> <span class="string">&#x27;postgres&#x27;</span>;</span><br></pre></td></tr></table></figure><hr><p><strong>修改编码为utf8</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> pg_database <span class="keyword">set</span> encoding <span class="operator">=</span> pg_char_to_encoding(<span class="string">&#x27;UTF8&#x27;</span>), datcollate <span class="operator">=</span> <span class="string">&#x27;en_US.UTF-8&#x27;</span>, datctype <span class="operator">=</span> <span class="string">&#x27;en_US.UTF-8&#x27;</span> <span class="keyword">where</span> datname <span class="operator">=</span> <span class="string">&#x27;postgres&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="代码调整"><a href="#代码调整" class="headerlink" title="代码调整"></a>代码调整</h1><h2 id="切换数据源"><a href="#切换数据源" class="headerlink" title="切换数据源"></a>切换数据源</h2><ul><li>mvn依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.postgresql/postgresql --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.postgresql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>postgresql<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>42.3.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>jar包下载</li></ul><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://jdbc.postgresql.org/download.html</span><br></pre></td></tr></table></figure><ul><li>url</li></ul><p> <code>jdbc:postgresql://ip:port/dbname</code></p><ul><li>driver class</li></ul><p><code>org.postgresql.Driver</code></p><h2 id="sql调整"><a href="#sql调整" class="headerlink" title="sql调整"></a>sql调整</h2><table><thead><tr><th>对比项</th><th>oracle</th><th>postgresql</th></tr></thead><tbody><tr><td>dual</td><td>select 1 + 1 from dual</td><td>select 1 + 1</td></tr><tr><td>系统时间</td><td>sysdate</td><td>now(), current_timestamp, localtimestamp</td></tr><tr><td>时间加减</td><td>sysdate + 1</td><td>now() + INTERVAL ‘1 DAY’</td></tr><tr><td>获取序列值</td><td>sequence.nextval</td><td>nextval(‘sequence’)</td></tr><tr><td>序列当前值</td><td>sequence.currval</td><td>currval(‘sequence’)</td></tr><tr><td>判断空值</td><td>nvl(exp1, exp2)</td><td>coalesce(exp1, exp2)</td></tr><tr><td>检索字符串</td><td>instr(‘str1’, ‘str2’)</td><td>strpos(‘str1’, ‘str2’)</td></tr><tr><td>分页</td><td>rownum</td><td>limit pageSize offset pageSize * pageNum</td></tr><tr><td>行号</td><td>rownum</td><td>row_number() over() as rownum</td></tr><tr><td>条件判断</td><td>decode()</td><td>case when then else end</td></tr></tbody></table><h2 id="jndi配置"><a href="#jndi配置" class="headerlink" title="jndi配置"></a>jndi配置</h2><blockquote><p>若使用jndi数据源，则直接修改tomcat的配置文件即可，注意需要在tomcat的lib包下放pg的jar包。</p></blockquote><p><code>$&#123;tomcathome&#125;/conf/context.xml</code>添加配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Context</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- ... --&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">Resource</span> <span class="attr">name</span>=<span class="string">&quot;jdbc/ir&quot;</span> <span class="attr">auth</span>=<span class="string">&quot;Container&quot;</span> </span></span><br><span class="line"><span class="tag">              <span class="attr">type</span>=<span class="string">&quot;javax.sql.DataSource&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">username</span>=<span class="string">&quot;ir&quot;</span> <span class="attr">password</span>=<span class="string">&quot;ir&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">driverClassName</span>=<span class="string">&quot;org.postgresql.Driver&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">url</span>=<span class="string">&quot;jdbc:postgresql://192.168.5.112:5432/genericdb&quot;</span> </span></span><br><span class="line"><span class="tag">              <span class="attr">maxTotal</span>=<span class="string">&quot;8&quot;</span> <span class="attr">maxIdle</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Context</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ol><li><p><code>hibernate</code>框架需要调整<code>sessionFactory</code>中的<code>hibernate.dialect</code>属性为<code>org.hibernate.dialect</code>包下对应版本的<code>PostgreSQLXXDialet</code>。</p></li><li><p>pg在使用聚合函数时的问题；</p><p><strong>pg要求sql语句中出现聚合函数或order by时，除非group by的字段是主键，否则select、order by等关键字后面跟的字段必须要在group by关键字中声明。</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 例如存在如下表结构和数据</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">id serial,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    logdate <span class="type">date</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(name, logdate) <span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;zhangsan&#x27;</span>, <span class="string">&#x27;20220606&#x27;</span>),(<span class="string">&#x27;zhangsan&#x27;</span>, <span class="string">&#x27;20220607&#x27;</span>),(<span class="string">&#x27;lisi&#x27;</span>, <span class="string">&#x27;20220607&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ERROR:  column &quot;t_user.id&quot; must appear in the GROUP BY clause or be used in an aggregate function</span></span><br><span class="line"><span class="keyword">select</span> id, name, logdate, <span class="built_in">count</span>(logdate) <span class="keyword">from</span> t_user <span class="keyword">group</span> <span class="keyword">by</span> logdate;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- success</span></span><br><span class="line"><span class="keyword">select</span> logdate, <span class="built_in">count</span>(logdate) <span class="keyword">from</span> t_user <span class="keyword">group</span> <span class="keyword">by</span> logdate;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ERROR:  column &quot;t_user.name&quot; must appear in the GROUP BY clause or be used in an aggregate function</span></span><br><span class="line"><span class="keyword">select</span> logdate, <span class="built_in">count</span>(logdate) <span class="keyword">from</span> t_user <span class="keyword">group</span> <span class="keyword">by</span> logdate <span class="keyword">order</span> <span class="keyword">by</span> name;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 现在将表t_user中的id属性设置为主键</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_user <span class="keyword">add</span> <span class="keyword">primary</span> key (id);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- success</span></span><br><span class="line"><span class="keyword">select</span> id, name, logdate, <span class="built_in">count</span>(logdate) <span class="keyword">from</span> t_user <span class="keyword">group</span> <span class="keyword">by</span> id <span class="keyword">order</span> <span class="keyword">by</span> name;</span><br></pre></td></tr></table></figure></li><li><p>pg在使用update set时的问题；</p><p><strong>pg要求update时，不能在更新列的说明中包含表的名称（别名也不行）。</strong></p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ERROR:  column &quot;t&quot; of relation &quot;t_service&quot; does not exist</span></span><br><span class="line"><span class="keyword">update</span> T_SERVICE t <span class="keyword">set</span> t.SERVICENAME <span class="operator">=</span> <span class="string">&#x27;业务0002&#x27;</span> <span class="keyword">where</span> t.SERVICECODE <span class="operator">=</span> <span class="string">&#x27;1000038436&#x27;</span>;</span><br><span class="line"><span class="comment">-- success</span></span><br><span class="line"><span class="keyword">update</span> T_SERVICE t <span class="keyword">set</span> SERVICENAME <span class="operator">=</span> <span class="string">&#x27;业务0002&#x27;</span> <span class="keyword">where</span> t.SERVICECODE <span class="operator">=</span> <span class="string">&#x27;1000038436&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>pg在获取序列下个值时的问题；</p><p><strong>pg要求调用nextval(‘sequence’)时，不能在一个只读的事务中，即spring在配置事务时，涉及到序列的方法不能设置为只读事务。</strong></p><p><strong>例：&lt;tx:method name&#x3D;”getNext*Id” read-only&#x3D;”false”&#x2F;&gt;</strong></p></li><li><p>标识符和关键字问题</p><p>pg和oracle中<strong>关键词和不被引号修饰的标识符</strong>都是大小写不敏感的，但pg会统一转换为小写，而oracle会统一转换为大写，所以要特别注意sql中用引号修饰的标识符。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># oracle</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> T_TEST(id <span class="type">int</span>, name varchar2(<span class="number">20</span>)); # 创建T_TEST表</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_test; # 成功，t_test会自动转为T_TEST</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> &quot;t_test&quot;; # 失败，表t_test不存在</span><br><span class="line"># pg</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> T_TEST(id serial, name <span class="type">varchar</span>(<span class="number">20</span>)); # 创建t_test表</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_test; # 成功</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> &quot;T_TEST&quot;; # 失败，表T_TEST不存在</span><br></pre></td></tr></table></figure></li></ol><p>​</p>]]></content>
      
      
      <categories>
          
          <category> 中间件 </category>
          
          <category> 数据迁移 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oracle </tag>
            
            <tag> PostgreSQL </tag>
            
            <tag> 数据迁移 </tag>
            
            <tag> Ora2Pg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nacos入门</title>
      <link href="/2022/08/16/microservice/Nacos%E5%85%A5%E9%97%A8/"/>
      <url>/2022/08/16/microservice/Nacos%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>阿里开源的组件，可与<strong>Spring</strong>、<strong>SpringBoot</strong>、<strong>SpringCloud</strong>、<strong>Docker</strong>、<strong>K8s</strong>等集成，实现<strong>服务注册与发现</strong>、<strong>配置管理</strong>等功能。</p><p>官网地址：<code>https://nacos.io/zh-cn/index.html</code></p><p>github：<code>https://github.com/alibaba/nacos</code></p></blockquote><h1 id="集群环境搭建"><a href="#集群环境搭建" class="headerlink" title="集群环境搭建"></a>集群环境搭建</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ol><li>64 bit OS Linux&#x2F;Unix&#x2F;Mac，推荐使用Linux系统。</li><li>64 bit JDK 1.8+。</li><li>3个或3个以上Nacos节点才能构成集群。</li></ol><h3 id="linux配置jdk环境"><a href="#linux配置jdk环境" class="headerlink" title="linux配置jdk环境"></a>linux配置jdk环境</h3><p><strong>下载jdk</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># openjdk下载地址</span><br><span class="line">https://adoptium.net/zh-CN/</span><br></pre></td></tr></table></figure><p><strong>解压jdk</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf OpenJDK8U-jdk_x64_linux_hotspot_8u322b06.tar.gz</span><br></pre></td></tr></table></figure><p><strong>设置环境变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.bash_profile</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 在文件后添加如下设置，注意路径</span><br><span class="line">JAVA_HOME=/home/nacos/jdk8u322-b06</span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export JAVA_HOME</span><br><span class="line">export PATH</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使环境变量生效</span></span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br><span class="line"><span class="comment"># 查看环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><h2 id="集群架构"><a href="#集群架构" class="headerlink" title="集群架构"></a>集群架构</h2><p><img src="/nacos%E9%9B%86%E7%BE%A4%E6%9E%B6%E6%9E%84.png" alt="nacos集群架构"></p><h2 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h2><p><strong>下载安装包</strong></p><p>地址：<code>https://github.com/alibaba/nacos/releases</code></p><p>本次下载的是2.1.0版本</p><hr><p><strong>解压安装包</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nacos-server-2.1.0.tar.gz</span><br></pre></td></tr></table></figure><hr><p><strong>配置集群配置文件</strong></p><p>三个节点各自修改配置文件<code>nacos/conf/cluster.conf</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># ip:port</span><br><span class="line">172.19.4.41:8848</span><br><span class="line">172.19.4.42:8848</span><br><span class="line">172.19.4.43:8848</span><br></pre></td></tr></table></figure><hr><p><strong>设置数据源为mysql</strong></p><blockquote><p>nacos默认使用内置数据源，集群环境下各节点数据可能不一致，所以需要切换为外置数据源，目前只支持mysql。</p></blockquote><p>执行sql脚本<code>conf/nacos-mysql.sql</code>；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 先创建数据库</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE nacos CHARSET utf8;</span><br><span class="line">USE nacos;</span><br><span class="line"># 执行脚本，注意脚本路径</span><br><span class="line">source nacos<span class="operator">-</span>mysql.sql</span><br></pre></td></tr></table></figure><p>三个节点分别修改配置文件<code>conf/application.properties</code>;</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这几项在配置文件中都被注释掉了，这里需要去掉注释，并修改属性值即可</span></span><br><span class="line"><span class="attr">spring.datasource.platform</span>=<span class="string">mysql</span></span><br><span class="line"><span class="attr">db.num</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">db.url.0</span>=<span class="string">jdbc:mysql://172.19.4.37:3306/nacos?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=UTC</span></span><br><span class="line"><span class="attr">db.user.0</span>=<span class="string">nacos</span></span><br><span class="line"><span class="attr">db.password.0</span>=<span class="string">itc123</span></span><br></pre></td></tr></table></figure><hr><p><strong>配置nginx</strong></p><p>修改<code>conf/nginx.conf</code>配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># 需要有nginx stream模块，用于转发nacos2.0版本的grpc请求</span><br><span class="line">stream &#123;</span><br><span class="line"></span><br><span class="line">upstream nacos-server-grpc &#123;</span><br><span class="line">server 172.19.4.41:9848;</span><br><span class="line">server 172.19.4.42:9848;</span><br><span class="line">server 172.19.4.43:9848;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">listen9848;</span><br><span class="line">proxy_pass http://nacos9848;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line"></span><br><span class="line"># 其他内容</span><br><span class="line"></span><br><span class="line">    upstream nacos &#123;</span><br><span class="line">        server 172.19.4.41:8848;</span><br><span class="line">        server 172.19.4.42:8848;</span><br><span class="line">        server 172.19.4.43:8848;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen8848;</span><br><span class="line">        server_namenacos_server;</span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass http://nacos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    # 其他内容</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动nginx</p><p><code>nginx/sbin/nginx</code></p><hr><p><strong>启动nacos服务器</strong></p><p>三个节点分别执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> nacos</span><br><span class="line">sh bin/startup.sh</span><br></pre></td></tr></table></figure><hr><p><strong>验证集群</strong></p><p>控制台访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url:http://nginxip:8848/nacos</span><br><span class="line">account:nacos/nacos</span><br></pre></td></tr></table></figure><p><img src="/nacos%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%AE%BF%E9%97%AE.png" alt="nacos控制台访问"></p><p><img src="/nacos%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9.png" alt="nacos集群节点"></p><h1 id="使用Nacos作为配置中心"><a href="#使用Nacos作为配置中心" class="headerlink" title="使用Nacos作为配置中心"></a>使用Nacos作为配置中心</h1><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li>nacos用<strong>namespace + group id + data id</strong>来标识唯一的配置；</li></ul><p><img src="/%E6%A0%87%E8%AF%86%E5%94%AF%E4%B8%80%E9%85%8D%E7%BD%AE.png" alt="标识唯一配置"></p><ul><li>namespace可用于区分环境，如dev、test、pro等；</li><li>支持text、json、xml、yaml、html、properties等格式的配置文件；</li></ul><h2 id="与Spring集成"><a href="#与Spring集成" class="headerlink" title="与Spring集成"></a>与Spring集成</h2><blockquote><p>官方地址：<code>https://github.com/nacos-group/nacos-spring-project</code></p></blockquote><h3 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jdk: 1.8+</span><br><span class="line">spring: 3.2+</span><br></pre></td></tr></table></figure><p><strong>Maven坐标</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba.nacos/nacos-spring-context --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.nacos<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nacos-spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p><strong>配置类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="comment">// 开启nacos配置</span></span><br><span class="line"><span class="meta">@EnableNacosConfig(globalProperties = @NacosProperties(</span></span><br><span class="line"><span class="meta">        serverAddr = &quot;172.19.4.41:8848,172.19.4.42:8848,172.19.4.43:8848&quot;,</span></span><br><span class="line"><span class="meta">        username = &quot;nacos&quot;, password = &quot;nacos&quot;, namespace = &quot;9e50602c-2575-4761-8166-290af5da5044&quot;</span></span><br><span class="line"><span class="meta">))</span></span><br><span class="line"><span class="comment">// 通过groupId和dataId加载配置文件</span></span><br><span class="line"><span class="meta">@NacosPropertySource(groupId = &quot;DEFAULT_GROUP&quot;, dataId = &quot;ir1&quot;, type = ConfigType.YAML, autoRefreshed = true)</span></span><br><span class="line"><span class="meta">@NacosPropertySource(groupId = &quot;DEFAULT_GROUP&quot;, dataId = &quot;ir2&quot;, type = ConfigType.YAML, autoRefreshed = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NacosConfig</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>nacos配置</strong></p><p>在<code>dev</code>下添加配置：</p><p><img src="/%E6%B7%BB%E5%8A%A0%E9%85%8D%E7%BD%AE.png" alt="添加配置"></p><p><code>ir1</code>配置详情：</p><p><img src="/%E9%85%8D%E7%BD%AE%E8%AF%A6%E6%83%851.png" alt="配置详情1"></p><p><code>ir2</code>配置详情：</p><p><img src="/%E9%85%8D%E7%BD%AE%E8%AF%A6%E6%83%852.png" alt="配置详情2"></p><hr><p><strong>获取配置</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;config&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用@NacosValue注解获取配置，开启自动刷新</span></span><br><span class="line">    <span class="meta">@NacosValue(value = &quot;$&#123;sso.service&#125;&quot;, autoRefreshed = true)</span></span><br><span class="line">    <span class="keyword">private</span> String ssoService;</span><br><span class="line">    <span class="meta">@NacosValue(value = &quot;$&#123;sso.server.login-url&#125;&quot;, autoRefreshed = true)</span></span><br><span class="line">    <span class="keyword">private</span> String ssoServerLoginUrl;</span><br><span class="line">    <span class="meta">@NacosValue(value = &quot;$&#123;sso.server.prefix-url&#125;&quot;, autoRefreshed = true)</span></span><br><span class="line">    <span class="keyword">private</span> String ssoServerPrefixUrl;</span><br><span class="line">    <span class="comment">// 默认值为hi</span></span><br><span class="line">    <span class="meta">@NacosValue(value = &quot;$&#123;hello:hi&#125;&quot;, autoRefreshed = true)</span></span><br><span class="line">    <span class="keyword">private</span> String hello;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/get&quot;, method = GET)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">get</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ssoService + <span class="string">&quot; - &quot;</span> + ssoServerLoginUrl + <span class="string">&quot; - &quot;</span> + </span><br><span class="line">            ssoServerPrefixUrl + <span class="string">&quot; - &quot;</span> + hello;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>浏览器访问<code>http://ip:port/config/get</code>；</p><hr><p><strong>修改配置</strong></p><p>在控制台修改配置：</p><p><img src="/%E7%BC%96%E8%BE%91%E9%85%8D%E7%BD%AE.png" alt="编辑配置"></p><hr><p><strong>再次获取配置</strong></p><p>浏览器再次访问<code>http://ip:port/config/get</code>，此时获取到更新后的配置。</p><h2 id="与Spring-Boot集成"><a href="#与Spring-Boot集成" class="headerlink" title="与Spring Boot集成"></a>与Spring Boot集成</h2><blockquote><p>官方地址：<code>https://github.com/nacos-group/nacos-spring-boot-project</code></p></blockquote><p><strong>Maven坐标</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba.boot/nacos-config-spring-boot-starter --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nacos-config-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.2.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p><strong>application.yml配置</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nacos:</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="comment"># nacos server地址</span></span><br><span class="line">    <span class="comment"># 因为nginx没有配置stream模块，所以没有使用nginx代理的地址，而是直接使用nacos集群的地址</span></span><br><span class="line">    <span class="attr">server-addr:</span> <span class="number">172.19</span><span class="number">.4</span><span class="number">.41</span><span class="string">:8848,172.19.4.42:8848,172.19.4.43:8848</span></span><br><span class="line">    <span class="attr">bootstrap:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开启配置预加载功能</span></span><br><span class="line">    <span class="attr">remote-first:</span> <span class="literal">true</span> <span class="comment"># 设置nacos上的配置优先于本地配置</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">9e50602c-2575-4761-8166-290af5da5044</span> <span class="comment"># 命名空间id</span></span><br><span class="line">    <span class="attr">group:</span> <span class="string">group1</span> <span class="comment"># group id</span></span><br><span class="line">    <span class="attr">data-ids:</span> <span class="string">test1.yml</span> <span class="comment"># data id，多个用逗号隔开</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">yaml</span> <span class="comment"># 配置文件类型</span></span><br><span class="line">    <span class="attr">auto-refresh:</span> <span class="literal">true</span>  <span class="comment"># 开启自动刷新</span></span><br><span class="line">    <span class="attr">max-retry:</span> <span class="number">10</span> <span class="comment"># 最大重试次数</span></span><br><span class="line">    <span class="attr">config-retry-time:</span> <span class="number">2333</span> <span class="comment"># 重试时间</span></span><br><span class="line">    <span class="attr">config-long-poll-timeout:</span> <span class="number">46000</span> <span class="comment"># 监听长轮询超时时间</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">nacos</span> <span class="comment"># 用户名</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">nacos</span> <span class="comment"># 密码</span></span><br><span class="line">    <span class="comment"># 加载其他配置，类似@NacosPropertySource()</span></span><br><span class="line">    <span class="attr">ext-config:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">namespace:</span> <span class="string">9e50602c-2575-4761-8166-290af5da5044</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">group2</span></span><br><span class="line">        <span class="attr">data-ids:</span> <span class="string">test2.yml</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">yaml</span></span><br><span class="line">        <span class="attr">auto-refresh:</span> <span class="literal">true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">namespace:</span> <span class="string">9e50602c-2575-4761-8166-290af5da5044</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">group3</span></span><br><span class="line">        <span class="attr">data-ids:</span> <span class="string">test3.yml</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">yaml</span></span><br><span class="line">        <span class="attr">auto-refresh:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><hr><p><strong>nacos配置</strong></p><p><img src="/%E9%85%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B1.png" alt="配置示例1"></p><p><img src="/%E9%85%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B2.png" alt="配置示例2"></p><p><img src="/%E9%85%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B3.png" alt="配置示例3"></p><p><img src="/%E9%85%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B4.png" alt="配置示例4"></p><p><strong>获取属性值</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.nacos.api.config.ConfigType;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.nacos.api.config.annotation.NacosConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@NacosConfigurationProperties(groupId = &quot;group1&quot;, dataId = &quot;test1.yml&quot;, prefix = &quot;people&quot;, type = ConfigType.YAML, autoRefreshed = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PeopleConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// getter、setter、toString</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.nacos.api.config.annotation.NacosValue;</span><br><span class="line"><span class="keyword">import</span> com.lhx.nacosconfigdemo.config.PeopleConfig;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/config&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NacosValue(value = &quot;$&#123;hello:hi&#125;&quot;, autoRefreshed = true)</span></span><br><span class="line">    <span class="keyword">private</span> String hello;</span><br><span class="line">    <span class="meta">@NacosValue(value = &quot;$&#123;count:-1&#125;&quot;, autoRefreshed = true)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> count;</span><br><span class="line">    <span class="meta">@NacosValue(value = &quot;$&#123;ping:unknow&#125;&quot;, autoRefreshed = true)</span></span><br><span class="line">    <span class="keyword">private</span> String ping;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PeopleConfig peopleConfig;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/get&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">get</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(peopleConfig);</span><br><span class="line">        System.out.println(hello);</span><br><span class="line">        System.out.println(count);</span><br><span class="line">        System.out.println(ping);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>浏览器请求<code>http://localhost:8080/config/get</code>;</p><hr><p><strong>编辑配置</strong></p><p> 在控制台编辑配置：</p><p><img src="/%E7%BC%96%E8%BE%91%E9%85%8D%E7%BD%AE2.png" alt="编辑配置2"></p><hr><p><strong>再次获取配置</strong></p><p>浏览器再次请求<code>http://localhost:8080/config/get</code>，成功从配置中心获取到更新后的配置；</p><h1 id="维护Nacos配置中心"><a href="#维护Nacos配置中心" class="headerlink" title="维护Nacos配置中心"></a>维护Nacos配置中心</h1><blockquote><p>方法：</p><ul><li>登录到nacos控制台维护配置；</li><li>使用open api维护配置；</li></ul></blockquote><h2 id="使用控制台编辑配置"><a href="#使用控制台编辑配置" class="headerlink" title="使用控制台编辑配置"></a>使用控制台编辑配置</h2><blockquote><p>控制台手册：<code>https://nacos.io/zh-cn/docs/console-guide.html</code></p></blockquote><p>浏览器访问<code>http://nacos-server-ip:port/nacos</code>，输入初始账号密码<code>nacos/nacos</code>后登录到nacos控制台；</p><p><img src="/%E6%8E%A7%E5%88%B6%E5%8F%B0%E7%99%BB%E5%BD%95.png" alt="控制台登录"></p><p>在控制台<strong>配置管理</strong>处编辑配置信息；</p><p><img src="/%E7%BC%96%E8%BE%91%E9%85%8D%E7%BD%AE3.png" alt="编辑配置3"></p><h2 id="使用Open-API编辑配置"><a href="#使用Open-API编辑配置" class="headerlink" title="使用Open API编辑配置"></a>使用Open API编辑配置</h2><blockquote><p>api指南：<code>https://nacos.io/zh-cn/docs/open-api.html</code></p></blockquote><h3 id="获取配置"><a href="#获取配置" class="headerlink" title="获取配置"></a>获取配置</h3><p>请求方式：GET</p><p>URL：&#x2F;nacos&#x2F;v1&#x2F;cs&#x2F;configs</p><p>请求参数：</p><table><thead><tr><th align="left">名称</th><th align="left">类型</th><th align="left">是否必须</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">tenant</td><td align="left">string</td><td align="left">否</td><td align="left">租户信息，对应 Nacos 的命名空间ID字段。</td></tr><tr><td align="left">dataId</td><td align="left">string</td><td align="left">是</td><td align="left">配置 ID。</td></tr><tr><td align="left">group</td><td align="left">string</td><td align="left">是</td><td align="left">配置分组。</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET <span class="string">&#x27;http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=nacos.example&amp;group=com.alibaba.nacos&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="发布-x2F-更新配置"><a href="#发布-x2F-更新配置" class="headerlink" title="发布&#x2F;更新配置"></a>发布&#x2F;更新配置</h3><p>请求方式：POST</p><p>URL：&#x2F;nacos&#x2F;v1&#x2F;cs&#x2F;configs</p><p>请求参数：</p><table><thead><tr><th align="left">名称</th><th align="left">类型</th><th align="left">是否必须</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">tenant</td><td align="left">string</td><td align="left">否</td><td align="left">租户信息，对应 Nacos 的命名空间ID字段</td></tr><tr><td align="left">dataId</td><td align="left">string</td><td align="left">是</td><td align="left">配置 ID</td></tr><tr><td align="left">group</td><td align="left">string</td><td align="left">是</td><td align="left">配置分组</td></tr><tr><td align="left">content</td><td align="left">string</td><td align="left">是</td><td align="left">配置内容</td></tr><tr><td align="left">type</td><td align="left">String</td><td align="left">否</td><td align="left">配置类型，yaml、json、xml、text、properties等</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST <span class="string">&#x27;http://127.0.0.1:8848/nacos/v1/cs/configs&#x27;</span> -d <span class="string">&#x27;dataId=nacos.example&amp;group=com.alibaba.nacos&amp;content=contentTest&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="删除配置"><a href="#删除配置" class="headerlink" title="删除配置"></a>删除配置</h3><p>请求方式：DELETE</p><p>URL：&#x2F;nacos&#x2F;v1&#x2F;cs&#x2F;configs</p><p>请求参数：</p><table><thead><tr><th align="left">名称</th><th align="left">类型</th><th align="left">是否必须</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">tenant</td><td align="left">string</td><td align="left">否</td><td align="left">租户信息，对应 Naocs 的命名空间ID字段</td></tr><tr><td align="left">dataId</td><td align="left">string</td><td align="left">是</td><td align="left">配置 ID</td></tr><tr><td align="left">group</td><td align="left">string</td><td align="left">是</td><td align="left">配置分组</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X DELETE <span class="string">&#x27;http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=nacos.example&amp;group=com.alibaba.nacos&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nacos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL入门</title>
      <link href="/2022/08/16/db/MySQL%E5%85%A5%E9%97%A8/"/>
      <url>/2022/08/16/db/MySQL%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="功能记录"><a href="#功能记录" class="headerlink" title="功能记录"></a>功能记录</h1><h2 id="查询表分区"><a href="#查询表分区" class="headerlink" title="查询表分区"></a>查询表分区</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> information_schema.`PARTITIONS` <span class="keyword">WHERE</span> table_schema <span class="operator">=</span> SCHEMA() <span class="keyword">AND</span> table_name <span class="operator">=</span> <span class="string">&#x27;employees&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="查看区分大小写情况"><a href="#查看区分大小写情况" class="headerlink" title="查看区分大小写情况"></a>查看区分大小写情况</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- lower_case_table_names为1表示不区分大小写</span></span><br><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;%case%&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL迁移至PostgreSQL</title>
      <link href="/2022/08/16/middleware/MySQL%E8%BF%81%E7%A7%BB%E8%87%B3PostgreSQL/"/>
      <url>/2022/08/16/middleware/MySQL%E8%BF%81%E7%A7%BB%E8%87%B3PostgreSQL/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="数据迁移"><a href="#数据迁移" class="headerlink" title="数据迁移"></a>数据迁移</h1><h2 id="使用pgloader工具"><a href="#使用pgloader工具" class="headerlink" title="使用pgloader工具"></a>使用pgloader工具</h2><blockquote><p>官方地址：<code>https://github.com/dimitri/pgloader</code></p><p>文档地址：<code>https://pgloader.readthedocs.io/en/latest/index.html</code></p></blockquote><hr><p><strong>安装</strong></p><p>github上有源码安装方式，本次使用docker安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull dimitri/pgloader <span class="comment"># 拉取镜像</span></span><br><span class="line">docker run -it --name mypgloader dimitri/pgloader /bin/bash <span class="comment"># 启动并进入容器</span></span><br><span class="line"><span class="built_in">exit</span> <span class="comment"># 退出容器</span></span><br></pre></td></tr></table></figure><hr><p><strong>使用</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入到容器内</span></span><br><span class="line">docker <span class="built_in">exec</span> -it mypgloader /bin/bash</span><br><span class="line"><span class="comment"># 查看pgloader版本和帮助信息</span></span><br><span class="line">pgloader -V</span><br><span class="line">pgloader -h</span><br><span class="line"><span class="comment"># 编辑配置文件，内容见下</span></span><br><span class="line">vim /tmp/pgloader.load</span><br></pre></td></tr></table></figure><p><strong>pgloader.load</strong></p><blockquote><p>配置文件说明见说明文档：<code>https://pgloader.readthedocs.io/en/latest/ref/mysql.html#</code></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">LOAD DATABASE</span><br><span class="line">     FROM mysql://isms:POSTisms2019@172.19.4.37:3306/isms</span><br><span class="line">     INTO postgresql://isms:POSTisms2019@192.168.1.157:5432/postgres</span><br><span class="line"></span><br><span class="line">WITH include drop, create tables, create indexes, foreign keys,</span><br><span class="line">     uniquify index names, downcase identifiers, workers = 8, concurrency = 1</span><br><span class="line">;</span><br></pre></td></tr></table></figure><p><strong>pg库准备</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 创建isms用户、模式</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> isms <span class="keyword">WITH</span> PASSWORD <span class="string">&#x27;POSTisms2019&#x27;</span> SUPERUSER;</span><br><span class="line"><span class="keyword">CREATE</span> SCHEMA isms;</span><br><span class="line"><span class="keyword">ALTER</span> SCHEMA isms OWNER <span class="keyword">TO</span> isms;</span><br></pre></td></tr></table></figure><p><strong>开始迁移数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 容器内部执行</span></span><br><span class="line">pgloader /tmp/pgloader.load</span><br></pre></td></tr></table></figure><h2 id="pgloader存在的问题及解决方法"><a href="#pgloader存在的问题及解决方法" class="headerlink" title="pgloader存在的问题及解决方法"></a>pgloader存在的问题及解决方法</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ol><li>只能迁移表结构和表数据，视图、函数等无法迁移；</li><li>mysql中的分区表迁移后没有分区；</li></ol><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ol><li><p>迁移视图问题，可通过数据库连接工具（如navicat）批量导出视图的ddl语句，再针对pg与mysql语法的不同之处进行适当修改，最后在pg库中手动执行ddl语句来创建视图；</p><ul><li>删除<code>CREATE</code>和<code>VIEW</code>关键字之间的内容；</li><li>删除所有的反引号<code>`</code>;</li><li><code>FROM</code>后尽量不要跟括号<code>()</code>，否则有可能报错；</li><li><code>JOIN</code>后要跟<code>ON</code>；</li><li>替换用到的函数，如格式化日期函数等；</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- mysql create view</span></span><br><span class="line"><span class="keyword">CREATE</span> ALGORITHM <span class="operator">=</span> UNDEFINED DEFINER <span class="operator">=</span> `isms` @`<span class="operator">%</span>` <span class="keyword">SQL</span> SECURITY DEFINER <span class="keyword">VIEW</span> `v_pro_cpsrv` <span class="keyword">AS</span> <span class="keyword">SELECT</span></span><br><span class="line">`t_cp_service`.`CP_SERVICE_CODE` <span class="keyword">AS</span> `CPSRVCODE`,</span><br><span class="line">`t_cp`.`PROVINCE_CODE` <span class="keyword">AS</span> `PROVINCE_CODE` </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">( `t_cp_service` <span class="keyword">JOIN</span> `t_cp` ) </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">( `t_cp_service`.`CPCORP_ID` <span class="operator">=</span> `t_cp`.`CPCORP_ID` );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- pg create view</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> v_pro_cpsrv <span class="keyword">AS</span> <span class="keyword">SELECT</span></span><br><span class="line">t_cp_service.CP_SERVICE_CODE <span class="keyword">AS</span> CPSRVCODE,</span><br><span class="line">t_cp.PROVINCE_CODE <span class="keyword">AS</span> PROVINCE_CODE </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line"> t_cp_service <span class="keyword">JOIN</span> t_cp  </span><br><span class="line"><span class="keyword">ON</span></span><br><span class="line"> (t_cp_service.CPCORP_ID <span class="operator">=</span> t_cp.CPCORP_ID);</span><br></pre></td></tr></table></figure></li><li><p>分区表问题，可先查出mysql中的分区表，再将pg中对应表删除后重新创建；</p><ol><li><p>查询mysql中的分区表；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">distinct</span> table_name <span class="keyword">FROM</span> information_schema.PARTITIONS <span class="keyword">where</span> table_schema <span class="operator">=</span> <span class="string">&#x27;isms&#x27;</span> <span class="keyword">and</span> partition_method <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure></li><li><p>使用navicat导出pg中对应表的DDL；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;isms&quot;.&quot;t_hy_order&quot; (</span><br><span class="line">  &quot;order_id&quot; <span class="type">numeric</span>(<span class="number">10</span>,<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;service_code&quot; <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">COLLATE</span> &quot;pg_catalog&quot;.&quot;default&quot;,</span><br><span class="line">  &quot;cp_service_code&quot; <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">COLLATE</span> &quot;pg_catalog&quot;.&quot;default&quot;,</span><br><span class="line">  &quot;op_service_code&quot; <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">COLLATE</span> &quot;pg_catalog&quot;.&quot;default&quot;,</span><br><span class="line">  &quot;phone&quot; <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">COLLATE</span> &quot;pg_catalog&quot;.&quot;default&quot;,</span><br><span class="line">  &quot;phone_type&quot; <span class="type">numeric</span>(<span class="number">10</span>,<span class="number">0</span>),</span><br><span class="line">  &quot;action&quot; <span class="type">numeric</span>(<span class="number">10</span>,<span class="number">0</span>),</span><br><span class="line">  &quot;access_mode&quot; <span class="type">numeric</span>(<span class="number">10</span>,<span class="number">0</span>),</span><br><span class="line">  &quot;opcorp_id&quot; <span class="type">varchar</span>(<span class="number">6</span>) <span class="keyword">COLLATE</span> &quot;pg_catalog&quot;.&quot;default&quot;,</span><br><span class="line">  &quot;order_flag&quot; <span class="type">numeric</span>(<span class="number">10</span>,<span class="number">0</span>),</span><br><span class="line">  &quot;order_time&quot; timestamptz(<span class="number">6</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">  &quot;attach_info_type&quot; <span class="type">numeric</span>(<span class="number">10</span>,<span class="number">0</span>),</span><br><span class="line">  &quot;attach_info&quot; <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">COLLATE</span> &quot;pg_catalog&quot;.&quot;default&quot;,</span><br><span class="line">  &quot;remark&quot; <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">COLLATE</span> &quot;pg_catalog&quot;.&quot;default&quot;,</span><br><span class="line">  &quot;branch_no&quot; <span class="type">varchar</span>(<span class="number">16</span>) <span class="keyword">COLLATE</span> &quot;pg_catalog&quot;.&quot;default&quot;,</span><br><span class="line">  &quot;oper_no&quot; <span class="type">varchar</span>(<span class="number">16</span>) <span class="keyword">COLLATE</span> &quot;pg_catalog&quot;.&quot;default&quot;,</span><br><span class="line">  &quot;fee_value&quot; <span class="type">numeric</span>(<span class="number">6</span>,<span class="number">0</span>),</span><br><span class="line">  &quot;province_code&quot; <span class="type">char</span>(<span class="number">6</span>) <span class="keyword">COLLATE</span> &quot;pg_catalog&quot;.&quot;default&quot;,</span><br><span class="line">  &quot;city_code&quot; <span class="type">char</span>(<span class="number">6</span>) <span class="keyword">COLLATE</span> &quot;pg_catalog&quot;.&quot;default&quot;,</span><br><span class="line">  &quot;town_code&quot; <span class="type">varchar</span>(<span class="number">9</span>) <span class="keyword">COLLATE</span> &quot;pg_catalog&quot;.&quot;default&quot;,</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> &quot;idx_37895_primary&quot; <span class="keyword">PRIMARY</span> KEY (&quot;order_id&quot;, &quot;order_time&quot;)</span><br><span class="line">)</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> &quot;isms&quot;.&quot;t_hy_order&quot; </span><br><span class="line">  OWNER <span class="keyword">TO</span> &quot;isms&quot;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> INDEX &quot;idx_37895_attach_info&quot; <span class="keyword">ON</span> &quot;isms&quot;.&quot;t_hy_order&quot; <span class="keyword">USING</span> btree (</span><br><span class="line">  &quot;attach_info&quot; <span class="keyword">COLLATE</span> &quot;pg_catalog&quot;.&quot;default&quot; &quot;pg_catalog&quot;.&quot;text_ops&quot; <span class="keyword">ASC</span> NULLS <span class="keyword">LAST</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> INDEX &quot;idx_37895_phone&quot; <span class="keyword">ON</span> &quot;isms&quot;.&quot;t_hy_order&quot; <span class="keyword">USING</span> btree (</span><br><span class="line">  &quot;phone&quot; <span class="keyword">COLLATE</span> &quot;pg_catalog&quot;.&quot;default&quot; &quot;pg_catalog&quot;.&quot;text_ops&quot; <span class="keyword">ASC</span> NULLS <span class="keyword">LAST</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>删除pg中未进行分区的表；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> t_hy_order;</span><br></pre></td></tr></table></figure></li><li><p>结合mysql中表的分区信息，对第2步导出的DDL信息进行改造；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;t_hy_order&quot; (</span><br><span class="line">  &quot;order_id&quot; <span class="type">numeric</span>(<span class="number">10</span>,<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;service_code&quot; <span class="type">varchar</span>(<span class="number">32</span>),</span><br><span class="line">  &quot;cp_service_code&quot; <span class="type">varchar</span>(<span class="number">32</span>),</span><br><span class="line">  &quot;op_service_code&quot; <span class="type">varchar</span>(<span class="number">32</span>),</span><br><span class="line">  &quot;phone&quot; <span class="type">varchar</span>(<span class="number">32</span>),</span><br><span class="line">  &quot;phone_type&quot; <span class="type">numeric</span>(<span class="number">10</span>,<span class="number">0</span>),</span><br><span class="line">  &quot;action&quot; <span class="type">numeric</span>(<span class="number">10</span>,<span class="number">0</span>),</span><br><span class="line">  &quot;access_mode&quot; <span class="type">numeric</span>(<span class="number">10</span>,<span class="number">0</span>),</span><br><span class="line">  &quot;opcorp_id&quot; <span class="type">varchar</span>(<span class="number">6</span>),</span><br><span class="line">  &quot;order_flag&quot; <span class="type">numeric</span>(<span class="number">10</span>,<span class="number">0</span>),</span><br><span class="line">  &quot;order_time&quot; timestamptz(<span class="number">6</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">  &quot;attach_info_type&quot; <span class="type">numeric</span>(<span class="number">10</span>,<span class="number">0</span>),</span><br><span class="line">  &quot;attach_info&quot; <span class="type">varchar</span>(<span class="number">64</span>),</span><br><span class="line">  &quot;remark&quot; <span class="type">varchar</span>(<span class="number">64</span>),</span><br><span class="line">  &quot;branch_no&quot; <span class="type">varchar</span>(<span class="number">16</span>),</span><br><span class="line">  &quot;oper_no&quot; <span class="type">varchar</span>(<span class="number">16</span>),</span><br><span class="line">  &quot;fee_value&quot; <span class="type">numeric</span>(<span class="number">6</span>,<span class="number">0</span>),</span><br><span class="line">  &quot;province_code&quot; <span class="type">char</span>(<span class="number">6</span>),</span><br><span class="line">  &quot;city_code&quot; <span class="type">char</span>(<span class="number">6</span>),</span><br><span class="line">  &quot;town_code&quot; <span class="type">varchar</span>(<span class="number">9</span>),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> &quot;idx_37895_primary&quot; <span class="keyword">PRIMARY</span> KEY (&quot;order_id&quot;, &quot;order_time&quot;)</span><br><span class="line">) <span class="keyword">partition</span> <span class="keyword">by</span> <span class="keyword">range</span>(ORDER_TIME);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_hy_order_P201901 <span class="keyword">partition</span> <span class="keyword">of</span> t_hy_order <span class="keyword">for</span> <span class="keyword">values</span> <span class="keyword">from</span> (MINVALUE) <span class="keyword">to</span> (<span class="string">&#x27;2019-02-01&#x27;</span>);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_hy_order_P201902 <span class="keyword">partition</span> <span class="keyword">of</span> t_hy_order <span class="keyword">for</span> <span class="keyword">values</span> <span class="keyword">from</span> (<span class="string">&#x27;2019-02-01&#x27;</span>) <span class="keyword">to</span> (<span class="string">&#x27;2019-03-01&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> INDEX &quot;idx_37895_attach_info&quot; <span class="keyword">ON</span> &quot;t_hy_order&quot; (&quot;attach_info&quot;);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX &quot;idx_37895_phone&quot; <span class="keyword">ON</span> &quot;t_hy_order&quot; (&quot;phone&quot;);</span><br></pre></td></tr></table></figure></li><li><p>重新在pg中创建分区表；</p></li><li><p>使用pgloader重新导入分区表的数据；</p><p><strong>pgloader.load修改如下</strong></p><blockquote><p>WITH后参数改变；</p><p>INCLUDING ONLY TABLE NAMES MATCHING后跟需要重新导数的表名；</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">LOAD DATABASE</span><br><span class="line">     FROM mysql://isms:POSTisms2019@172.19.4.37:3306/isms</span><br><span class="line">     INTO postgresql://isms:POSTisms2019@192.168.1.157:5432/postgres</span><br><span class="line"></span><br><span class="line">WITH include no drop, create no tables, create no indexes, no foreign keys,</span><br><span class="line">     downcase identifiers, workers = 8, concurrency = 1</span><br><span class="line">INCLUDING ONLY TABLE NAMES MATCHING &#x27;t_hy_order&#x27;, &#x27;t_hy_order_his&#x27;, &#x27;t_mo_log&#x27;, &#x27;t_mt_log&#x27;, &#x27;t_mt_log_detail&#x27;, &#x27;t_op_order&#x27;, &#x27;t_op_whitelist&#x27;, &#x27;t_report_log&#x27;, &#x27;t_tj_cpsend_minute&#x27;, &#x27;t_tj_opsend_minute&#x27;, &#x27;t_tj_report_minute&#x27; </span><br><span class="line">;</span><br></pre></td></tr></table></figure></li></ol></li></ol><h1 id="项目调整"><a href="#项目调整" class="headerlink" title="项目调整"></a>项目调整</h1><h2 id="替换maven坐标"><a href="#替换maven坐标" class="headerlink" title="替换maven坐标"></a>替换maven坐标</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.postgresql/postgresql --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.postgresql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>postgresql<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>42.3.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="调整数据源"><a href="#调整数据源" class="headerlink" title="调整数据源"></a>调整数据源</h2><ul><li>url</li></ul><p> <code>jdbc:postgresql://ip:port/dbname</code></p><ul><li>driver class</li></ul><p><code>org.postgresql.Driver</code></p><h2 id="Hibernate调整方言"><a href="#Hibernate调整方言" class="headerlink" title="Hibernate调整方言"></a>Hibernate调整方言</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;...&quot;</span>&gt;</span> </span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.dialect&quot;</span>&gt;</span></span><br><span class="line">        org.hibernate.dialect.PostgreSQL10Dialect<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">        </span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="sql改动"><a href="#sql改动" class="headerlink" title="sql改动"></a>sql改动</h1><blockquote><p>由于本次调整的代码是基于Hibernate框架的，没有涉及到太多直接写sql的地方，所以下面关于sql的改动点可能不全，后续发现后及时补充。</p></blockquote><h2 id="函数、关键字替换"><a href="#函数、关键字替换" class="headerlink" title="函数、关键字替换"></a>函数、关键字替换</h2><table><thead><tr><th align="center">mysql</th><th align="center">pg</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">&amp;&amp;</td><td align="center">and</td><td align="center">逻辑与</td></tr><tr><td align="center">||</td><td align="center">or</td><td align="center">逻辑或</td></tr><tr><td align="center">concat</td><td align="center">||</td><td align="center">字符串连接</td></tr><tr><td align="center">limit 5,0</td><td align="center">limit 5 offset 0</td><td align="center">分页</td></tr></tbody></table><h2 id="其他改动点"><a href="#其他改动点" class="headerlink" title="其他改动点"></a>其他改动点</h2><ol><li><p>mysql使用单引号<code>&#39;</code>或双引号<code>&quot;</code>来引用属性值（例如<code>where name = &quot;Tom&quot;</code>，或<code>where name = &#39;Tom&#39;</code>）；pg只能使用单引号<code>&#39;</code>来引用数值（即<code>where name = &#39;Tom&#39;</code>），pg中的双引号<code>&quot;</code>用于修饰表名、列名（如<code>where &quot;name&quot; = &#39;Tom&#39;</code>），来保留修饰字段的大小写，否则会统一转为小写；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- mysql</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> name <span class="operator">=</span> &quot;Tom&quot;; <span class="comment">-- success</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;Tom&#x27;</span>; <span class="comment">-- success</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- pg</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> name <span class="operator">=</span> &quot;Tom&quot;; <span class="comment">-- ERROR:  column &quot;Tom&quot; does not exist</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;Tom&#x27;</span>; <span class="comment">-- success</span></span><br></pre></td></tr></table></figure></li><li><p>mysql中使用反引号<code>`</code>来引用数据库名、表名、字段名，pg中则不允许；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- mysql</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `isms`.`isms_order` <span class="keyword">WHERE</span> `title` <span class="operator">=</span> &quot;神州行&quot;; <span class="comment">-- success</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- pg</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `t_province` <span class="keyword">where</span> province_name <span class="operator">=</span> <span class="string">&#x27;北京&#x27;</span>; <span class="comment">-- ERROR:  syntax error at or near &quot;`&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>mysql<code>lower_case_table_names</code>为<code>1</code>时，大小写不敏感（包括关键字、数据库名、表名、列名、列值等），pg除列值外大小写不敏感；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- insert into user (name, age) values (&#x27;Tom&#x27;, 22);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- mysql</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;Tom&#x27;</span>; <span class="comment">-- 成功查询到记录</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;tom&#x27;</span>; <span class="comment">-- 成功查询到记录</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- pg</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;Tom&#x27;</span>; <span class="comment">-- 成功查询到记录</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;tom&#x27;</span>; <span class="comment">-- 查不到记录</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 中间件 </category>
          
          <category> 数据迁移 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> PostgreSQL </tag>
            
            <tag> 数据迁移 </tag>
            
            <tag> pgloader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MinIO入门</title>
      <link href="/2022/08/16/middleware/MinIO%E5%85%A5%E9%97%A8/"/>
      <url>/2022/08/16/middleware/MinIO%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="1-单机环境"><a href="#1-单机环境" class="headerlink" title="1. 单机环境"></a>1. 单机环境</h1><h2 id="1-1-版本"><a href="#1-1-版本" class="headerlink" title="1.1. 版本"></a>1.1. 版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Linux:CentOS7</span><br></pre></td></tr></table></figure><h2 id="1-2-步骤"><a href="#1-2-步骤" class="headerlink" title="1.2. 步骤"></a>1.2. 步骤</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查是否有wget</span></span><br><span class="line">wget -V</span><br><span class="line"><span class="comment"># 没有的话安装一下</span></span><br><span class="line">yum -y install wget</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载资源（不同架构的系统有不同的url）</span></span><br><span class="line">wget https://dl.min.io/server/minio/release/linux-amd64/minio</span><br><span class="line"><span class="comment"># 添加执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x minio</span><br><span class="line"><span class="comment"># 启动minio server，/data为自定义存储minio数据的目录</span></span><br><span class="line">./minio server /data</span><br></pre></td></tr></table></figure><h2 id="1-3-验证"><a href="#1-3-验证" class="headerlink" title="1.3. 验证"></a>1.3. 验证</h2><p>浏览器访问<code>http://192.168.5.112:9000 </code>，使用root账号<code>minioadmin/minioadmin</code>登录成功即可。</p><p><strong>浏览器访问不到的话，检查服务器是否开放端口。</strong></p><h1 id="2-集群环境"><a href="#2-集群环境" class="headerlink" title="2. 集群环境"></a>2. 集群环境</h1><h2 id="2-1-参考资料"><a href="#2-1-参考资料" class="headerlink" title="2.1. 参考资料"></a>2.1. 参考资料</h2><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># MinIO纠删码入门</span><br><span class="line">https://docs.min.io/docs/minio-erasure-code-quickstart-guide.html</span><br><span class="line"># MinIO分布式入门</span><br><span class="line">https://docs.min.io/docs/distributed-minio-quickstart-guide.html</span><br></pre></td></tr></table></figure><h2 id="2-2-搭建要点"><a href="#2-2-搭建要点" class="headerlink" title="2.2. 搭建要点"></a>2.2. 搭建要点</h2><ul><li>分布式Minio采用 <a href="http://docs.minio.org.cn/docs/master/minio-erasure-code-quickstart-guide">纠删码</a>来防范多个节点宕机和<a href="https://github.com/minio/minio/blob/master/docs/zh_CN/erasure/README.md#what-is-bit-rot-protection">位衰减<code>bit rot</code></a>。</li><li>使用分布式Minio自动引入了纠删码功能。</li><li>MinIO 将提供的硬盘划分为<em>4 到 16 个</em>硬盘的纠删码集，因此，搭建集群提供的硬盘数量必须是这些数字之一的倍数，每个对象都被写入一个单独的纠删码集。</li><li>Minio 使用最大可能的 纠删码集大小，它分为给定的硬盘数量。例如，<em>18 个硬盘</em>配置为<em>2 组 9 个硬盘</em>，<em>24 个硬盘</em>配置为<em>2 组 12 个硬盘</em>。</li><li>建议运行分布式 MinIO 设置的所有节点是同质的，即相同的操作系统、相同数量的磁盘和相同的网络互连。</li><li>单机Minio服务存在单点故障，相反，如果是一个有N块硬盘的分布式Minio,只要有N&#x2F;2硬盘在线，你的数据就是安全的。不过你需要至少有N&#x2F;2+1个硬盘来创建新的对象。</li><li>Minio在分布式和单机模式下，所有读写操作都严格遵守<strong>read-after-write</strong>一致性模型。</li><li>分布式Minio里的节点时间差不能超过15分钟，你可以使用<a href="http://www.ntp.org/">NTP</a> 来保证时间一致。</li><li>分布式Minio使用的磁盘可以与其他程序共享，但是要新建一个目录用来存放MinIO的数据。</li><li>所有运行分布式 MinIO 的节点都应该共享一个共同的根凭证，以便节点相互连接和信任。为此，建议在执行 MinIO 服务器命令之前，在所有节点上将<code>MINIO_ROOT_USER</code>和 <code>MINIO_ROOT_PASSWORD</code>导出为环境变量，如果未导出，可使用默认用户<code>minioadmin/minioadmin</code>。</li></ul><h2 id="2-3-步骤"><a href="#2-3-步骤" class="headerlink" title="2.3. 步骤"></a>2.3. 步骤</h2><p>本次启动MinIO集群实例为四个节点，每个节点一块硬盘，在四个节点上分别执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /data/minio是自定义的存储路径</span></span><br><span class="line"><span class="built_in">export</span> MINIO_ROOT_USER=admin</span><br><span class="line"><span class="built_in">export</span> MINIO_ROOT_PASSWORD=12345678</span><br><span class="line">./minio server http://192.168.5.110/data/minio \</span><br><span class="line">   http://192.168.5.111/data/minio \</span><br><span class="line">   http://192.168.5.112/data/minio \</span><br><span class="line">   http://192.168.5.121/data/minio</span><br></pre></td></tr></table></figure><h2 id="2-4-验证"><a href="#2-4-验证" class="headerlink" title="2.4. 验证"></a>2.4. 验证</h2><p>浏览器访问任意服务器的<code>9000</code>端口，使用root账号<code>admin/12345678</code>登录，查看集群状态。</p><p><img src="/minio%E9%9B%86%E7%BE%A4.jpg" alt="minio集群"></p><h1 id="3-java客户端集成"><a href="#3-java客户端集成" class="headerlink" title="3. java客户端集成"></a>3. java客户端集成</h1><h2 id="3-1-引入依赖"><a href="#3-1-引入依赖" class="headerlink" title="3.1. 引入依赖"></a>3.1. 引入依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/io.minio/minio --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.minio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>minio<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.3.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-2-上传文件"><a href="#3-2-上传文件" class="headerlink" title="3.2. 上传文件"></a>3.2. 上传文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.minio.*;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileUploader</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">endPoint</span> <span class="operator">=</span> <span class="string">&quot;http://192.168.5.112:9000&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">rootUser</span> <span class="operator">=</span> <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">rootPassword</span> <span class="operator">=</span> <span class="string">&quot;12345678&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">bucketName</span> <span class="operator">=</span> <span class="string">&quot;first-bucket&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建客户端对象</span></span><br><span class="line">        <span class="type">MinioClient</span> <span class="variable">minioClient</span> <span class="operator">=</span> MinioClient</span><br><span class="line">                .builder()</span><br><span class="line">                .endpoint(endPoint)</span><br><span class="line">                .credentials(rootUser, rootPassword)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建bucket</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">found</span> <span class="operator">=</span> minioClient.bucketExists(BucketExistsArgs.builder().bucket(bucketName).build());</span><br><span class="line">        <span class="keyword">if</span> (found) &#123;</span><br><span class="line">            System.out.println(bucketName + <span class="string">&quot; exists&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            minioClient.makeBucket(MakeBucketArgs.builder().bucket(bucketName).build());</span><br><span class="line">            System.out.println(bucketName + <span class="string">&quot; created&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 上传文件</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过文件流上传</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\刘德华 - 暗里着迷 (Live).mp3&quot;</span>);</span><br><span class="line">        <span class="type">long</span> <span class="variable">fileSize</span> <span class="operator">=</span> file.length();</span><br><span class="line">        System.out.println(<span class="string">&quot;file size: &quot;</span> + fileSize);</span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">        <span class="type">ObjectWriteResponse</span> <span class="variable">objectWriteResponse</span> <span class="operator">=</span> minioClient.putObject(PutObjectArgs.builder()</span><br><span class="line">                .bucket(bucketName)</span><br><span class="line">                .object(<span class="string">&quot;/music/anlizhaomi.mp3&quot;</span>)</span><br><span class="line">                .stream(fileInputStream, fileSize, -<span class="number">1</span>)</span><br><span class="line">                .contentType(<span class="string">&quot;audio/mp3&quot;</span>)</span><br><span class="line">                .build());</span><br><span class="line">        fileInputStream.close();</span><br><span class="line">        System.out.println(<span class="string">&quot;上传结果：&quot;</span> + objectWriteResponse.etag() + <span class="string">&quot; &quot;</span> + objectWriteResponse.versionId());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过文件上传</span></span><br><span class="line">        objectWriteResponse = minioClient.uploadObject(UploadObjectArgs.builder()</span><br><span class="line">                .bucket(bucketName)</span><br><span class="line">                .object(<span class="string">&quot;/music/anlizhaomi_1.mp3&quot;</span>)</span><br><span class="line">                .filename(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\刘德华 - 暗里着迷 (Live).mp3&quot;</span>)</span><br><span class="line">                .contentType(<span class="string">&quot;audio/mp3&quot;</span>)</span><br><span class="line">                .build());</span><br><span class="line">        System.out.println(<span class="string">&quot;上传结果：&quot;</span> + objectWriteResponse.etag() + <span class="string">&quot; &quot;</span> + objectWriteResponse.versionId());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-下载文件"><a href="#3-3-下载文件" class="headerlink" title="3.3. 下载文件"></a>3.3. 下载文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.minio.DownloadObjectArgs;</span><br><span class="line"><span class="keyword">import</span> io.minio.GetObjectArgs;</span><br><span class="line"><span class="keyword">import</span> io.minio.GetObjectResponse;</span><br><span class="line"><span class="keyword">import</span> io.minio.MinioClient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileDownLoader</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">endPoint</span> <span class="operator">=</span> <span class="string">&quot;http://192.168.5.112:9000&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">rootUser</span> <span class="operator">=</span> <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">rootPassword</span> <span class="operator">=</span> <span class="string">&quot;12345678&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">bucketName</span> <span class="operator">=</span> <span class="string">&quot;first-bucket&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建客户端对象</span></span><br><span class="line">        <span class="type">MinioClient</span> <span class="variable">minioClient</span> <span class="operator">=</span> MinioClient</span><br><span class="line">                .builder()</span><br><span class="line">                .endpoint(endPoint)</span><br><span class="line">                .credentials(rootUser, rootPassword)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 下载文件</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过流下载</span></span><br><span class="line">        <span class="type">GetObjectResponse</span> <span class="variable">stream</span> <span class="operator">=</span> minioClient.getObject(GetObjectArgs</span><br><span class="line">                .builder()</span><br><span class="line">                .bucket(bucketName)</span><br><span class="line">                .object(<span class="string">&quot;/music/anlizhaomi.mp3&quot;</span>)</span><br><span class="line">                .build());</span><br><span class="line">        <span class="type">BufferedInputStream</span> <span class="variable">bufferedInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(stream);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\aa.mp3&quot;</span>);</span><br><span class="line">        <span class="type">BufferedOutputStream</span> <span class="variable">bufferedOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedOutputStream</span>(fileOutputStream);</span><br><span class="line">        <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> length;</span><br><span class="line">        <span class="keyword">while</span> ((length = bufferedInputStream.read(bytes)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            bufferedOutputStream.write(bytes, <span class="number">0</span>, length);</span><br><span class="line">        &#125;</span><br><span class="line">        bufferedInputStream.close();</span><br><span class="line">        stream.close();</span><br><span class="line">        bufferedOutputStream.close();</span><br><span class="line">        fileOutputStream.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过文件下载</span></span><br><span class="line">        minioClient.downloadObject(DownloadObjectArgs</span><br><span class="line">                .builder()</span><br><span class="line">                .bucket(bucketName)</span><br><span class="line">                .object(<span class="string">&quot;/music/anlizhaomi_1.mp3&quot;</span>)</span><br><span class="line">                .filename(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\bb.mp3&quot;</span>)</span><br><span class="line">                .build());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-删除文件"><a href="#3-3-删除文件" class="headerlink" title="3.3. 删除文件"></a>3.3. 删除文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.minio.MinioClient;</span><br><span class="line"><span class="keyword">import</span> io.minio.RemoveObjectArgs;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileDeleter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">endPoint</span> <span class="operator">=</span> <span class="string">&quot;http://192.168.5.112:9000&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">rootUser</span> <span class="operator">=</span> <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">rootPassword</span> <span class="operator">=</span> <span class="string">&quot;12345678&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">bucketName</span> <span class="operator">=</span> <span class="string">&quot;first-bucket&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建客户端对象</span></span><br><span class="line">        <span class="type">MinioClient</span> <span class="variable">minioClient</span> <span class="operator">=</span> MinioClient</span><br><span class="line">                .builder()</span><br><span class="line">                .endpoint(endPoint)</span><br><span class="line">                .credentials(rootUser, rootPassword)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 删除文件</span></span><br><span class="line">        minioClient.removeObject(RemoveObjectArgs</span><br><span class="line">                .builder()</span><br><span class="line">                .bucket(bucketName)</span><br><span class="line">                .object(<span class="string">&quot;/music/anlizhaomi.mp3&quot;</span>)</span><br><span class="line">                .build());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-4-浏览器预览文件"><a href="#3-4-浏览器预览文件" class="headerlink" title="3.4. 浏览器预览文件"></a>3.4. 浏览器预览文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.minio.GetPresignedObjectUrlArgs;</span><br><span class="line"><span class="keyword">import</span> io.minio.MinioClient;</span><br><span class="line"><span class="keyword">import</span> io.minio.http.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FilePreviewUrl</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">endPoint</span> <span class="operator">=</span> <span class="string">&quot;http://192.168.5.112:9000&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">rootUser</span> <span class="operator">=</span> <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">rootPassword</span> <span class="operator">=</span> <span class="string">&quot;12345678&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">bucketName</span> <span class="operator">=</span> <span class="string">&quot;first-bucket&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建客户端对象</span></span><br><span class="line">        <span class="type">MinioClient</span> <span class="variable">minioClient</span> <span class="operator">=</span> MinioClient</span><br><span class="line">                .builder()</span><br><span class="line">                .endpoint(endPoint)</span><br><span class="line">                .credentials(rootUser, rootPassword)</span><br><span class="line">                .build();</span><br><span class="line"><span class="comment">// 直接拿这个url到浏览器访问即可</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> minioClient.getPresignedObjectUrl(GetPresignedObjectUrlArgs</span><br><span class="line">                .builder()</span><br><span class="line">                .method(Method.GET)</span><br><span class="line">                .bucket(bucketName)</span><br><span class="line">                .object(<span class="string">&quot;/music/浏览器下载文件.jpg&quot;</span>)</span><br><span class="line">                .expiry(<span class="number">2</span>, TimeUnit.MINUTES)</span><br><span class="line">                .build());</span><br><span class="line">        System.out.println(<span class="string">&quot;url: &quot;</span> + url);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-与FastDFS比较"><a href="#4-与FastDFS比较" class="headerlink" title="4. 与FastDFS比较"></a>4. 与FastDFS比较</h1><ul><li>同为开源项目，MinIO社区较活跃。</li><li>MinIO有官网、详细的文档及主流开发语言的SDK。</li><li>MinIO读&#x2F;写速度上可达183 GB &#x2F; 秒 和 171 GB &#x2F; 秒。</li><li>MinIO有自带的web控制台界面。</li><li>MinIO安装部署比较简单。</li><li>MinIO可与云原生应用高度集成。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 中间件 </category>
          
          <category> 分布式文件存储 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MinIO </tag>
            
            <tag> 分布式文件存储 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux入门</title>
      <link href="/2022/08/16/system/Linux%E5%85%A5%E9%97%A8/"/>
      <url>/2022/08/16/system/Linux%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>linux即常用于服务端的一个类unix操作系统，国内常用发行版有centos、ubuntu、rocky（centos的替代品）等</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><blockquote><p>以安装centos为例</p></blockquote><h2 id="iso镜像安装"><a href="#iso镜像安装" class="headerlink" title="iso镜像安装"></a>iso镜像安装</h2><ol><li><p>下载centos镜像和vmware虚拟机</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 阿里云centos7.9镜像</span><br><span class="line">http://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/</span><br><span class="line"># vmware虚拟机免费版下载</span><br><span class="line">https://www.vmware.com/cn/products/workstation-player.html</span><br></pre></td></tr></table></figure></li><li><p>通过镜像创建虚拟机</p><p>百度搜索</p></li></ol><h2 id="docker镜像安装"><a href="#docker镜像安装" class="headerlink" title="docker镜像安装"></a>docker镜像安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull centos</span><br><span class="line">docker run centos</span><br></pre></td></tr></table></figure><h1 id="Linux文件及目录结构"><a href="#Linux文件及目录结构" class="headerlink" title="Linux文件及目录结构"></a>Linux文件及目录结构</h1><h2 id="Linux文件"><a href="#Linux文件" class="headerlink" title="Linux文件"></a>Linux文件</h2><p>Linux中一切皆文件</p><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><blockquote><p>树结构</p></blockquote><ul><li>&#x2F;：根目录</li><li>&#x2F;bin：binary，存放经常使用的命令，软链接到<code>/usr/bin</code></li><li>&#x2F;sbin：super user binary，存放系统管理员使用的系统管理程序，软链接到<code>/usr/sbin</code></li><li>&#x2F;lib：存放系统开机所需要的最基本的动态连接共享库，类似于windows的DLL文件，软链接到<code>/usr/lib</code></li><li>&#x2F;lib64：64位的库文件，软链接到<code>/usr/lib64</code></li><li>&#x2F;boot：存放linux启动时使用的一些核心文件</li><li>&#x2F;dev：device，设备文件保存目录</li><li>&#x2F;etc：配置文件保存目录</li><li>&#x2F;usr：Unix Software Resource，存放系统软件资源</li><li>&#x2F;home：普通用户的主目录</li><li>&#x2F;root：超级用户的主目录</li><li>&#x2F;opt：optional，可选目录，一般软件装到这里</li><li>&#x2F;media：挂载媒体设备，如u盘、光盘等</li><li>&#x2F;mnt：mount，挂载目录，如u盘，移动硬盘等</li><li>&#x2F;proc：process，虚拟目录，是系统内存的映射，通过访问该目录可获取系统信息</li><li>&#x2F;run：虚拟文件系统，记录系统运行信息</li><li>&#x2F;srv：service，存放系统服务启动后需要提取的数据</li><li>&#x2F;sys：system，存放系统硬件相关信息</li><li>&#x2F;tmp：临时目录</li><li>&#x2F;var：variable，保存动态数据，主要保存日志、缓存等</li></ul><h1 id="VI-x2F-VIM编辑器"><a href="#VI-x2F-VIM编辑器" class="headerlink" title="VI&#x2F;VIM编辑器"></a>VI&#x2F;VIM编辑器</h1><blockquote><p>vi是unix和类unix系统中的文本编辑器；</p><p>vim是从vi发展出来的一个更强大的文本编辑器，与vi完全兼容；</p><p>vi编辑器有三种模式：一般模式、编辑模式、指令模式</p></blockquote><h2 id="一般模式"><a href="#一般模式" class="headerlink" title="一般模式"></a>一般模式</h2><p>以vi打开一个文档就进入一般模式了，在该模式下可进行删除、复制、粘贴等动作，常用命令如下：</p><table><thead><tr><th align="center">命令</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">yy</td><td align="center">复制光标所在行</td></tr><tr><td align="center">y数字y（数字yy）</td><td align="center">复制光标（包含）后几行</td></tr><tr><td align="center">y$&#x2F;y^</td><td align="center">复制从光标开始后&#x2F;前的内容</td></tr><tr><td align="center">p</td><td align="center">在光标所在行粘贴</td></tr><tr><td align="center">数字p</td><td align="center">在光标所在行粘贴多少次</td></tr><tr><td align="center">u</td><td align="center">撤销上一步的操作</td></tr><tr><td align="center">dd</td><td align="center">删除光标所在行</td></tr><tr><td align="center">d数字d（数字dd）</td><td align="center">删除光标（包含）后多少行</td></tr><tr><td align="center">x</td><td align="center">剪切一个字母，相当于delete</td></tr><tr><td align="center">X</td><td align="center">剪切一个字母，相当于backspace</td></tr><tr><td align="center">yw</td><td align="center">从光标所在位置，向后复制一个词</td></tr><tr><td align="center">dw</td><td align="center">从光标所在位置，向后删除一个词</td></tr><tr><td align="center">shift+6（^)</td><td align="center">移动光标到行头</td></tr><tr><td align="center">shift+4（$）</td><td align="center">移动光标到行尾</td></tr><tr><td align="center">gg&#x2F;1+G</td><td align="center">移动光标到开头</td></tr><tr><td align="center">G</td><td align="center">移动光标到结尾</td></tr><tr><td align="center">H</td><td align="center">移动光标到当前页头</td></tr><tr><td align="center">L</td><td align="center">移动光标到当前页尾</td></tr><tr><td align="center">数字+G</td><td align="center">移动光标到目标行</td></tr><tr><td align="center">r&#x2F;R</td><td align="center">替换一个&#x2F;多个字符</td></tr><tr><td align="center">w</td><td align="center">移动光标到下一个单词的开头</td></tr><tr><td align="center">e</td><td align="center">移动光标到下一个单词的结尾</td></tr><tr><td align="center">b</td><td align="center">移动光标到上一个单词的开头</td></tr></tbody></table><h2 id="编辑模式"><a href="#编辑模式" class="headerlink" title="编辑模式"></a>编辑模式</h2><p>在一般模式下，按<code>i/I/o/O/a/A</code>中的任一字母后进入编辑模式，在编辑模式下按<code>ESC</code>重新进入一般模式。</p><h2 id="指令模式"><a href="#指令模式" class="headerlink" title="指令模式"></a>指令模式</h2><p>在一般模式中，输入<code>:</code>、<code>/</code>或<code>?</code>中的任一字符，即可将光标移动到最下方，进入指令模式，常用语法如下：</p><table><thead><tr><th align="center">命令</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">:w</td><td align="center">保存</td></tr><tr><td align="center">:q</td><td align="center">退出</td></tr><tr><td align="center">:!</td><td align="center">强制执行</td></tr><tr><td align="center">&#x2F;要查找的词</td><td align="center">n查找下一个，N查找上一个</td></tr><tr><td align="center">:noh</td><td align="center">取消高亮显示</td></tr><tr><td align="center">:set nu</td><td align="center">显示行号</td></tr><tr><td align="center">:set nonu</td><td align="center">不显示行号</td></tr><tr><td align="center">:%s&#x2F;old&#x2F;new&#x2F;g</td><td align="center">替换内容，%s表示所有行，s表示当前行，不加&#x2F;g表示只替换每一行的第一个</td></tr></tbody></table><h2 id="模式间互相转换"><a href="#模式间互相转换" class="headerlink" title="模式间互相转换"></a>模式间互相转换</h2><p><img src="/vi%E6%A8%A1%E5%BC%8F%E8%BD%AC%E6%8D%A2.png" alt="vi模式转换"></p><h1 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h1><h2 id="网络路由设置"><a href="#网络路由设置" class="headerlink" title="网络路由设置"></a>网络路由设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netstat -nr <span class="comment"># 查看网络路由器信息</span></span><br><span class="line">route add -net 172.17.3.0/24 gw 192.168.5.1 <span class="comment"># 添加路由</span></span><br></pre></td></tr></table></figure><h2 id="设置静态ip地址"><a href="#设置静态ip地址" class="headerlink" title="设置静态ip地址"></a>设置静态ip地址</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 下面的配置项，存在的修改，不存在的添加</span><br><span class="line"></span><br><span class="line">TYPE=&quot;Ethernet&quot; #网络类型（通常是 Ethemet）</span><br><span class="line">PROXY_METHOD=&quot;none&quot;</span><br><span class="line">BROWSER_ONLY=&quot;no&quot;</span><br><span class="line">BOOTPROTO=&quot;static&quot; #IP 的配置方法[none|static|bootp|dhcp]（不使用协议|静态分配 IP|BOOTP 协议|DHCP 协议）</span><br><span class="line">DEFROUTE=&quot;yes&quot;</span><br><span class="line">IPV4_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">IPV6INIT=&quot;yes&quot;</span><br><span class="line">IPV6_AUTOCONF=&quot;yes&quot;</span><br><span class="line">IPV6_DEFROUTE=&quot;yes&quot;</span><br><span class="line">IPV6_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">IPV6_ADDR_GEN_MODE=&quot;stable-privacy&quot;</span><br><span class="line">NAME=&quot;ens33&quot;</span><br><span class="line">UUID=&quot;e83804c1-3257-4584-81bb-660665ac22f6&quot; #随机id</span><br><span class="line">DEVICE=&quot;ens33&quot; #接口名（设备,网卡）</span><br><span class="line">ONBOOT=&quot;yes&quot; #系统启动的时候网络接口是否有效（yes/no）#IP 地址</span><br><span class="line">IPADDR=192.168.1.100 # 静态ip地址，bootproto需设置为static</span><br><span class="line">NETMASK=255.255.255.0 # 子网掩码</span><br><span class="line">GATEWAY=192.168.1.2 #网关</span><br><span class="line">DNS1=192.168.1.2 #域名解析器</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service network restart <span class="comment"># 重启网络</span></span><br></pre></td></tr></table></figure><h2 id="设置主机名"><a href="#设置主机名" class="headerlink" title="设置主机名"></a>设置主机名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看主机名</span></span><br><span class="line">hostname</span><br><span class="line">hostnamectl</span><br><span class="line"><span class="comment"># 修改主机名</span></span><br><span class="line"><span class="comment"># eg：node1</span></span><br><span class="line">vim /etc/hostname <span class="comment"># 修改完需要重启</span></span><br><span class="line">hostnamectl set-hostname node1 <span class="comment"># 修改完不需要重启</span></span><br><span class="line"><span class="comment"># ip和主机名映射，配置后可直接通过主机名访问其他主机</span></span><br><span class="line"><span class="comment"># eg：192.168.5.112 node2</span></span><br><span class="line"><span class="comment">#  192.168.5.113 node3</span></span><br><span class="line">vim /etc/hosts </span><br><span class="line"></span><br><span class="line">reboot <span class="comment"># 重启</span></span><br></pre></td></tr></table></figure><h2 id="远程登录"><a href="#远程登录" class="headerlink" title="远程登录"></a>远程登录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 22 root@192.168.5.110</span><br></pre></td></tr></table></figure><h2 id="查看网络配置"><a href="#查看网络配置" class="headerlink" title="查看网络配置"></a>查看网络配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><h2 id="检查网络连接"><a href="#检查网络连接" class="headerlink" title="检查网络连接"></a>检查网络连接</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping</span><br></pre></td></tr></table></figure><h1 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h1><h2 id="修改系统编码"><a href="#修改系统编码" class="headerlink" title="修改系统编码"></a>修改系统编码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看环境</span></span><br><span class="line"><span class="built_in">env</span></span><br><span class="line"><span class="comment">## 修改编码 LANG=&quot;zh_CN.UTF-8&quot;</span></span><br><span class="line">vi /etc/locale.conf</span><br><span class="line"><span class="built_in">source</span> /etc/locale.conf</span><br></pre></td></tr></table></figure><h2 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h2><p><strong>语法</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start | stop | status | restart 服务名</span><br></pre></td></tr></table></figure><p><strong>查看系统服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /usr/lib/systemd/system</span><br></pre></td></tr></table></figure><p><strong>示例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看防火墙服务状态</span></span><br><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure><hr><p><strong>设置开机自启</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看服务开机自启状态</span></span><br><span class="line">systemctl list-unit-files</span><br><span class="line"><span class="comment"># 开启/关闭服务自启</span></span><br><span class="line">systemctl <span class="built_in">disable</span> | <span class="built_in">enable</span> serviceName</span><br></pre></td></tr></table></figure><p><strong>示例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启防火墙开启自启</span></span><br><span class="line">systemctl <span class="built_in">enable</span> firewalld.service</span><br></pre></td></tr></table></figure><h2 id="系统运行级别"><a href="#系统运行级别" class="headerlink" title="系统运行级别"></a>系统运行级别</h2><p>centos7以后2两种运行级别：</p><ul><li><strong>multi-user.target</strong>:等价于原运行级别3（多用户有网，无图形界面）；</li><li><strong>graphical.target</strong>:等价于原运行级别5（多用户有网，有图形界面）；</li></ul><hr><p><strong>获取当前运行级别</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl get-default</span><br></pre></td></tr></table></figure><p><strong>修改当前运行级别</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># TARGET.targe可为multi-user.target或graphical.target</span></span><br><span class="line">systemctl set-default TARGET.targe</span><br></pre></td></tr></table></figure><h2 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h2><p><strong>查看防火墙状态</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure><p><strong>临时关闭防火墙</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><p><strong>永久关闭防火墙（开机不自启）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br></pre></td></tr></table></figure><h2 id="关机重启"><a href="#关机重启" class="headerlink" title="关机重启"></a>关机重启</h2><p><strong>命令</strong></p><ul><li><strong>sync</strong>:将缓存同步到磁盘；</li><li><strong>halt</strong>:停机不断电；</li><li><strong>poweroff</strong>:关机并断电；</li><li><strong>reboot</strong>：重启，相当于<code>shutdown -r now</code>；</li><li>**shutdown [OPTIONS…] [TIME] [WALL…]**：关机；<ul><li>参数：H、h、P、r、k、c；</li><li>时间：单位是分，还可以用<strong>now</strong>、<strong>mm:ss</strong>表示；</li></ul></li></ul><p><strong>示例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 立即重启，同reboot</span></span><br><span class="line">shutdown -r now;</span><br><span class="line"><span class="comment"># 两分钟后关机，并打印提示信息；</span></span><br><span class="line">shutdown -h 2 <span class="string">&#x27;the server will shutdown after two minutes&#x27;</span>;</span><br><span class="line"><span class="comment"># 定时18:05关机</span></span><br><span class="line">shutdown -h 18:05;</span><br><span class="line"><span class="comment"># 只打印警告信息，不关机</span></span><br><span class="line">shutdown -k <span class="string">&#x27;the server will shutdown after two minutes&#x27;</span>;</span><br><span class="line"><span class="comment"># 取消关机操作</span></span><br><span class="line">shutdown -c</span><br></pre></td></tr></table></figure><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="文件目录相关"><a href="#文件目录相关" class="headerlink" title="文件目录相关"></a>文件目录相关</h2><h3 id="显示当前目录"><a href="#显示当前目录" class="headerlink" title="显示当前目录"></a>显示当前目录</h3><p><strong>命令：</strong><code>pwd</code></p><h3 id="列出目录下的内容"><a href="#列出目录下的内容" class="headerlink" title="列出目录下的内容"></a>列出目录下的内容</h3><p><strong>命令：</strong><code>ls</code></p><p><strong>参数：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-a</td><td align="center">列出全部文件，包括以点开头的隐藏文件。</td></tr><tr><td align="center">-l</td><td align="center">每行列出一个文件信息。同ll。<br />列出的信息分别为：文件类型与权限、链接数、文件属主、文件<br />属组、文件大小（byte）、最近修改的日期、文件名</td></tr></tbody></table><h3 id="切换目录"><a href="#切换目录" class="headerlink" title="切换目录"></a>切换目录</h3><p><strong>命令：</strong><code>cd</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">cd ~或者 cd</td><td align="center">切换到用户家目录</td></tr><tr><td align="center">cd -</td><td align="center">切换到上次所在目录</td></tr><tr><td align="center">cd ..</td><td align="center">切换到当前目录的上一级目录</td></tr></tbody></table><h3 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h3><p><strong>命令：</strong><code>mkdir dirName</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-p</td><td align="center">创建多级目录</td></tr></tbody></table><h3 id="删除目录"><a href="#删除目录" class="headerlink" title="删除目录"></a>删除目录</h3><p><strong>命令：</strong><code>rmdir dirName</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-p</td><td align="center">删除多级目录</td></tr></tbody></table><h3 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h3><p><strong>命令：</strong><code>touch fileName</code></p><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> 1.txt</span><br></pre></td></tr></table></figure><h3 id="复制文件或目录"><a href="#复制文件或目录" class="headerlink" title="复制文件或目录"></a>复制文件或目录</h3><p><strong>命令：</strong><code>cp  [option] source dest</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-r</td><td align="center">递归复制整个文件夹</td></tr></tbody></table><h3 id="删除文件或目录"><a href="#删除文件或目录" class="headerlink" title="删除文件或目录"></a>删除文件或目录</h3><p><strong>命令：</strong><code>rm  [option] file</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-r</td><td align="center">递归删除整个文件夹</td></tr><tr><td align="center">-f</td><td align="center">强制执行删除操作，不提示确认</td></tr></tbody></table><h3 id="移动文件或重命名"><a href="#移动文件或重命名" class="headerlink" title="移动文件或重命名"></a>移动文件或重命名</h3><p><strong>命令：</strong><code>mv oldFile newFile</code></p><h3 id="查看文件全部内容"><a href="#查看文件全部内容" class="headerlink" title="查看文件全部内容"></a>查看文件全部内容</h3><p><strong>命令：</strong><code>cat  [option] file</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-n</td><td align="center">显示行号</td></tr></tbody></table><h3 id="more分屏查看文件内容"><a href="#more分屏查看文件内容" class="headerlink" title="more分屏查看文件内容"></a>more分屏查看文件内容</h3><p><strong>命令：</strong><code>more file</code></p><p><strong>说明：</strong>more指令是一个基于VI编辑器的文本过滤器，它以全屏的方式按页显示文件内容。more中内置了若干快捷键。</p><p><strong>操作：</strong></p><table><thead><tr><th align="center">操作</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">Space（空格）</td><td align="center">向下翻一页</td></tr><tr><td align="center">Enter（回车）</td><td align="center">向下翻一行</td></tr><tr><td align="center">q</td><td align="center">退出more</td></tr><tr><td align="center">Ctrl + F</td><td align="center">向下滚动一屏</td></tr><tr><td align="center">Ctrl + B</td><td align="center">返回上一屏</td></tr><tr><td align="center">&#x3D;</td><td align="center">输出当前行号</td></tr><tr><td align="center">:f</td><td align="center">输出文件名和当前行号</td></tr></tbody></table><h3 id="less分屏查看文件内容"><a href="#less分屏查看文件内容" class="headerlink" title="less分屏查看文件内容"></a>less分屏查看文件内容</h3><p><strong>命令：</strong><code>less file</code></p><p><strong>说明：</strong>less比more更加强大，支持各种终端，less在显示文件内容时，并不是一次将整个文件加载后才显示，而是根据显示需要加载内容，对于显示大文件具有较高的效率。</p><p><strong>操作：</strong></p><table><thead><tr><th align="center">操作</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">Space（空格）</td><td align="center">向下翻一页</td></tr><tr><td align="center">Enter（回车）</td><td align="center">向下翻一行</td></tr><tr><td align="center">q</td><td align="center">退出less</td></tr><tr><td align="center">&#x2F;字串</td><td align="center">向下搜寻『字串』的功能；n：向下查找；N：向上查找；</td></tr><tr><td align="center">?字串</td><td align="center">向上搜寻『字串』的功能；n：向上查找；N：向下查找；</td></tr></tbody></table><h3 id="输出内容到控制台"><a href="#输出内容到控制台" class="headerlink" title="输出内容到控制台"></a>输出内容到控制台</h3><p><strong>命令：</strong><code>echo [option] content</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-e</td><td align="center">支持转义字符</td></tr></tbody></table><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;hello\tworld&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;hello\tworld&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;hello\nworld&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="显示文件头部内容"><a href="#显示文件头部内容" class="headerlink" title="显示文件头部内容"></a>显示文件头部内容</h3><p><strong>命令：</strong><code>head [option] file</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-n</td><td align="center">指定显示的行数</td></tr></tbody></table><h3 id="显示文件尾部内容"><a href="#显示文件尾部内容" class="headerlink" title="显示文件尾部内容"></a>显示文件尾部内容</h3><p><strong>命令：</strong><code>tail [option] file</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-n</td><td align="center">指定显示的行数</td></tr><tr><td align="center">-f</td><td align="center">显示文件最新追加的内容，监视文件变化</td></tr></tbody></table><h3 id="gt-输出重定向和-gt-gt-追加"><a href="#gt-输出重定向和-gt-gt-追加" class="headerlink" title="&gt;输出重定向和&gt;&gt;追加"></a>&gt;输出重定向和&gt;&gt;追加</h3><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将当前目录下的文件列表覆盖到1.txt</span></span><br><span class="line"><span class="built_in">ls</span> -al &gt; 1.txt</span><br><span class="line"><span class="comment"># 将hehe追加到1.txt末尾</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;hehe&#x27;</span> &gt;&gt; 1.txt</span><br></pre></td></tr></table></figure><h3 id="软链接"><a href="#软链接" class="headerlink" title="软链接"></a>软链接</h3><p><strong>命令：</strong><code>ln -s file linkName</code></p><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建名为test的软链接，指向./test/1.txt</span></span><br><span class="line"><span class="built_in">ln</span> -s ./test/1.txt <span class="built_in">test</span></span><br><span class="line"><span class="comment"># 删除test软链接</span></span><br><span class="line"><span class="built_in">rm</span> -rf <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="查看历史命令"><a href="#查看历史命令" class="headerlink" title="查看历史命令"></a>查看历史命令</h3><p><strong>命令：</strong><code>history</code></p><h2 id="文件权限相关"><a href="#文件权限相关" class="headerlink" title="文件权限相关"></a>文件权限相关</h2><h3 id="文件属性"><a href="#文件属性" class="headerlink" title="文件属性"></a>文件属性</h3><p><strong>说明：</strong><code>ll</code>命令查看文件列表后，每一列的含义为文件类型与权限、链接数、文件属主、文件属组、文件大小（byte）、最近修改的时间、文件名。</p><hr><p><strong>文件类型：</strong></p><ul><li>d：目录</li><li>-：文件</li><li>l：链接文档</li></ul><hr><p><strong>权限：</strong></p><ul><li>r：可读</li><li>w：可写</li><li>x：可执行</li><li>-：无权限</li></ul><hr><p><strong>rwx作用到文件上的权限：</strong></p><ul><li>r：可以读取，查看</li><li>w：可以修改，但是不代表可以删除该文件，删除一个文件的前提条件是对该文件所在的目录有写权限，才能删除该文件</li><li>x：可以被系统执行</li></ul><p><strong>rwx作用到目录上的权限：</strong></p><ul><li>r：可以读取，ls查看目录内容</li><li>w：可以修改，目录内创建+删除+重命名目录</li><li>x：可以进入该目录</li></ul><hr><p>如<code>drwxr-x---</code>分表表示文件类型为<strong>目录</strong>、属主权限为<strong>rwx</strong>、属组权限为<strong>r-x</strong>、其他用户权限为**—**。</p><hr><p><code>ll</code>查看的文件列表中的链接数，文件代表硬链接的个数，目录代表子文件的个数。</p><h3 id="修改文件权限"><a href="#修改文件权限" class="headerlink" title="修改文件权限"></a>修改文件权限</h3><p><strong>命令：</strong></p><ul><li><code>chmod [&#123;ugoa&#125;&#123;+-=&#125;&#123;rwx&#125;] fileName</code></li><li><code>chmod [777] fileName</code></li></ul><p><strong>说明：</strong></p><ul><li>u：user，表示用户权限</li><li>g：group，表示用户组权限</li><li>o：other，表示其他用户权限</li><li>a：all，表示所有用户权限</li><li>+：添加权限</li><li>-：减小权限</li><li>&#x3D;：设置权限</li><li>777：即rwxrwxrwx&#x3D;(4 + 2 + 1)(4 + 2 + 1)(4 + 2 + 1)&#x3D;777</li></ul><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置1.txt的权限为用户可读、可写、可执行，所在组的用户可读、可执行，其他用户只读</span></span><br><span class="line"><span class="built_in">chmod</span> 754 1.txt</span><br><span class="line"><span class="comment"># 给其他用户添加1.txt的执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> o+x 1.txt</span><br></pre></td></tr></table></figure><h3 id="修改文件所有者"><a href="#修改文件所有者" class="headerlink" title="修改文件所有者"></a>修改文件所有者</h3><p><strong>命令：</strong><code>chown [options] [owner][:[group]] fileName</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-r</td><td align="center">递归修改子目录</td></tr></tbody></table><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改hehe目录及其所有子目录的所属用户为test，所属组为test</span></span><br><span class="line"><span class="built_in">chown</span> -r <span class="built_in">test</span>:<span class="built_in">test</span> hehe</span><br></pre></td></tr></table></figure><h3 id="修改文件所属组"><a href="#修改文件所属组" class="headerlink" title="修改文件所属组"></a>修改文件所属组</h3><p><strong>命令：</strong><code>chogrp [options] groupName fileName</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-r</td><td align="center">递归修改子目录</td></tr></tbody></table><h2 id="文件查找相关"><a href="#文件查找相关" class="headerlink" title="文件查找相关"></a>文件查找相关</h2><h3 id="find查找文件或目录"><a href="#find查找文件或目录" class="headerlink" title="find查找文件或目录"></a>find查找文件或目录</h3><p><strong>命令：</strong><code>find [path] [options]</code></p><p><strong>说明：</strong>参数中的+n表示大于n，-n表示小于n，n表示精确为n。</p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-name</td><td align="center">按照文件名查找</td></tr><tr><td align="center">-user</td><td align="center">按照文件所属用户查找</td></tr><tr><td align="center">-size</td><td align="center">按照文件大小查找，单位：<br />b-块（512字节）<br />c-字节<br />w-字（2字节）<br />k-千字节<br />M-兆字节<br />G-吉字节</td></tr><tr><td align="center">-type</td><td align="center">按文件类型查找<br />f-文件 d-目录 l-软链接</td></tr><tr><td align="center">-perm</td><td align="center">按照文件权限查找</td></tr><tr><td align="center">-mmin</td><td align="center">查找在n分钟前修改过的文件</td></tr><tr><td align="center">-mtime</td><td align="center">查找在n天前修改过的文件</td></tr></tbody></table><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按照名称在当前目录下查找txt文件</span></span><br><span class="line">find -name *.txt</span><br><span class="line"><span class="comment"># 按照所属用户在/usr目录下查找</span></span><br><span class="line">find /usr -user pxz</span><br><span class="line"><span class="comment"># 按照文件大小，在/home目录下查找大于200M的文件</span></span><br><span class="line">find /home -size +200M</span><br><span class="line"><span class="comment"># 查找当前目录下的目录</span></span><br><span class="line">find -<span class="built_in">type</span> d</span><br><span class="line"><span class="comment"># 查找当前目录下权限为777的文件</span></span><br><span class="line">find -perm 777</span><br><span class="line"><span class="comment"># 假设今天是2023-04-24，查找在2023-04-22这一天修改过的文件</span></span><br><span class="line">find -mtime 2</span><br><span class="line"><span class="comment"># 假设今天是2023-04-24，查找在2023-04-22这一天前修改过的文件</span></span><br><span class="line">find -mtime +2</span><br><span class="line"><span class="comment"># 假设今天是2023-04-24，查找在2023-04-22这一天至今天修改过的文件</span></span><br><span class="line">find -mtime -2</span><br></pre></td></tr></table></figure><h3 id="locate定位文件"><a href="#locate定位文件" class="headerlink" title="locate定位文件"></a>locate定位文件</h3><blockquote><p>locate指令利用事先建立的系统中所有文件名称及路径的locate数据库，来快速定位给定的文件。为保证查询结果的正确定，管理员需要定期更新locate数据库。</p></blockquote><p><strong>命令：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装locate</span></span><br><span class="line">yum -y install mlocate</span><br><span class="line"><span class="comment"># 更新locate</span></span><br><span class="line">updatedb</span><br><span class="line"><span class="comment"># 查找文件</span></span><br><span class="line">locate aa.txt</span><br></pre></td></tr></table></figure><h3 id="grep过滤查找及“-”管道符"><a href="#grep过滤查找及“-”管道符" class="headerlink" title="grep过滤查找及“|”管道符"></a>grep过滤查找及“|”管道符</h3><blockquote><p>管道符号<code>|</code>，表示将前一个命令的处理结果输出给后面的命令处理。</p></blockquote><p><strong>命令：</strong><code>grep [options] PARTTERN [FILE]</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th>说明</th></tr></thead><tbody><tr><td align="center">-B</td><td>显示匹配行的前n行</td></tr><tr><td align="center">-A</td><td>显示匹配行的后n行</td></tr><tr><td align="center">-n</td><td>显示行号</td></tr><tr><td align="center">-m</td><td>匹配到n行后停止搜索</td></tr></tbody></table><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示v0.log文件中包含‘sub&#x27;行的前后10行，10次匹配后停止搜索</span></span><br><span class="line">grep -A 10 -B 10 -m 10 -n <span class="string">&#x27;sub&#x27;</span> v0.log </span><br><span class="line"><span class="comment"># 查找a.log中包含&#x27;test&#x27;的行</span></span><br><span class="line"><span class="built_in">cat</span> a.log | grep <span class="string">&#x27;test&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="打包压缩相关"><a href="#打包压缩相关" class="headerlink" title="打包压缩相关"></a>打包压缩相关</h2><h3 id="gzip-x2F-gunzip"><a href="#gzip-x2F-gunzip" class="headerlink" title="gzip&#x2F;gunzip"></a>gzip&#x2F;gunzip</h3><blockquote><p>压缩、解压.gz文件</p></blockquote><p><strong>命令：</strong><code>gzip file</code></p><p>​<code>gunzip file.gz</code></p><p><strong>说明：</strong></p><ul><li>执行压缩文件，不能压缩目录。</li><li>压缩后不会保留源文件。</li><li>gzip -r directory时会在目录下产生多个压缩文件。</li></ul><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 压缩1.txt</span></span><br><span class="line">gzip 1.txt</span><br><span class="line"><span class="comment"># 解压1.txt.gz</span></span><br><span class="line">gunzip 1.txt.gz</span><br></pre></td></tr></table></figure><h3 id="zip-x2F-unzip"><a href="#zip-x2F-unzip" class="headerlink" title="zip&#x2F;unzip"></a>zip&#x2F;unzip</h3><p><strong>命令：</strong><code>zip [options] xxx.zip file</code></p><p>​<code>unzip [options] file.zip</code></p><p><strong>选项：</strong></p><ul><li>-r:递归操作</li><li>zip -d:相当于unzip</li><li>unzip -d:指定解压目录</li></ul><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将test目录下的文件压缩为1.zip</span></span><br><span class="line">zip -r 1.zip ./test</span><br><span class="line"><span class="comment"># 解压1.zip到aa目录</span></span><br><span class="line">unzip 1.zip -d ./aa</span><br></pre></td></tr></table></figure><h3 id="tar打包"><a href="#tar打包" class="headerlink" title="tar打包"></a>tar打包</h3><p><strong>命令：</strong><code>tar [options]</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th>说明</th></tr></thead><tbody><tr><td align="center">-z</td><td>打包或取消打包的同时使用gzip压缩，或使用gunzip解压</td></tr><tr><td align="center">-c</td><td>创建.tar归档文件</td></tr><tr><td align="center">-x</td><td>从.tar归档文件中提取文件</td></tr><tr><td align="center">-v</td><td>显示详细信息</td></tr><tr><td align="center">-f</td><td>指定打包压缩后的文件名</td></tr><tr><td align="center">-C</td><td>切换（解压）到指定目录</td></tr></tbody></table><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将1.txt 2.txt打包压缩至1.tar.gz文件</span></span><br><span class="line">tar -zcvf 1.tar.gz 1.txt 2.txt</span><br><span class="line"><span class="comment"># 将1.tar.gz文件解压到当前目录</span></span><br><span class="line">tar -zxvf 1.tar.gz</span><br><span class="line"><span class="comment"># 将1.tar.gz文件解压到/tmp目录</span></span><br><span class="line">tar -zxvf 1.tar.gz -C /tmp</span><br></pre></td></tr></table></figure><h2 id="时间日期相关"><a href="#时间日期相关" class="headerlink" title="时间日期相关"></a>时间日期相关</h2><h3 id="显示当前时间"><a href="#显示当前时间" class="headerlink" title="显示当前时间"></a>显示当前时间</h3><p><strong>命令：</strong><code>date [+format]</code></p><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">date</span></span><br><span class="line"><span class="built_in">date</span> +%Y-%m-%d %H:%M:%S</span><br></pre></td></tr></table></figure><h3 id="显示非当前时间"><a href="#显示非当前时间" class="headerlink" title="显示非当前时间"></a>显示非当前时间</h3><p><strong>命令：</strong><code>date -d dateStr</code></p><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示昨天的时间</span></span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&#x27;1 days ago&#x27;</span></span><br><span class="line"><span class="comment"># 显示明天的时间</span></span><br><span class="line">dae -d <span class="string">&#x27;-1 days ago&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="设置系统时间"><a href="#设置系统时间" class="headerlink" title="设置系统时间"></a>设置系统时间</h3><p><strong>命令：</strong><code>date -s dateStr</code></p><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">date</span> -s <span class="string">&#x27;2023-06-19 20:52:18&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="显示日历"><a href="#显示日历" class="headerlink" title="显示日历"></a>显示日历</h3><p><strong>命令：</strong><code>cal [options] [[[day] month] year]</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-1</td><td align="center">只显示当月日历</td></tr><tr><td align="center">-3</td><td align="center">显示上月、当月和下月日历</td></tr><tr><td align="center">-y</td><td align="center">显示当年日历</td></tr></tbody></table><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示当月日历</span></span><br><span class="line">cal</span><br><span class="line"><span class="comment"># 显示当年日历</span></span><br><span class="line">cal -y</span><br><span class="line"><span class="comment"># 显示2023-05日历</span></span><br><span class="line">cal 05 2023</span><br><span class="line"><span class="comment"># 显示2023-05-03日历</span></span><br><span class="line">cal 03 05 2023</span><br></pre></td></tr></table></figure><h2 id="用户管理相关"><a href="#用户管理相关" class="headerlink" title="用户管理相关"></a>用户管理相关</h2><h3 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h3><p><strong>命令：</strong><code>useradd [options] userName</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-d</td><td align="center">指定用户家目录</td></tr><tr><td align="center">-g</td><td align="center">将用户添加到某个组</td></tr></tbody></table><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建test用户，并指定家目录为/app/test</span></span><br><span class="line">useradd -d /app/test <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h3><p><strong>命令：</strong><code>passwd userName</code></p><h3 id="查看用户是否存在"><a href="#查看用户是否存在" class="headerlink" title="查看用户是否存在"></a>查看用户是否存在</h3><p><strong>命令：</strong><code>id userName</code></p><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前用户信息</span></span><br><span class="line"><span class="built_in">id</span></span><br><span class="line"><span class="comment"># 查看test用户信息</span></span><br><span class="line"><span class="built_in">id</span> <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="查看用户列表"><a href="#查看用户列表" class="headerlink" title="查看用户列表"></a>查看用户列表</h3><p><strong>命令：</strong><code>cat /etc/passwd</code></p><p><strong>说明：</strong>每一列分表表示用户名、密码、UID、GID、注释、家目录、命令解释器</p><h3 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h3><p><strong>命令：</strong><code>su [-] userName</code></p><p><strong>说明：</strong>不指定userName则默认为切换为root用户，不加<code>-</code>不能获取切换用户的环境变量。</p><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><p><strong>命令：</strong><code>userdel [options] userName</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-r</td><td align="center">删除用户主目录和邮件目录</td></tr></tbody></table><h3 id="查看当前登录用户"><a href="#查看当前登录用户" class="headerlink" title="查看当前登录用户"></a>查看当前登录用户</h3><p><strong>命令：</strong><code>whoami</code></p><h3 id="修改用户"><a href="#修改用户" class="headerlink" title="修改用户"></a>修改用户</h3><p><strong>命令：</strong><code>usermod [options] userName</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-g</td><td align="center">修改用户所在组</td></tr><tr><td align="center">-d</td><td align="center">修改用户家目录</td></tr></tbody></table><h2 id="用户组管理相关"><a href="#用户组管理相关" class="headerlink" title="用户组管理相关"></a>用户组管理相关</h2><h3 id="添加组"><a href="#添加组" class="headerlink" title="添加组"></a>添加组</h3><p><strong>命令：</strong><code>groupadd groupName</code></p><h3 id="删除组"><a href="#删除组" class="headerlink" title="删除组"></a>删除组</h3><p><strong>命令：</strong><code>groupdel groupName</code></p><h3 id="设置组密码-x2F-管理组"><a href="#设置组密码-x2F-管理组" class="headerlink" title="设置组密码&#x2F;管理组"></a>设置组密码&#x2F;管理组</h3><p><strong>命令：</strong><code>gpasswd [options] groupName</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-a</td><td align="center">向组中添加用户</td></tr><tr><td align="center">-d</td><td align="center">删除组中的用户</td></tr></tbody></table><h3 id="修改组"><a href="#修改组" class="headerlink" title="修改组"></a>修改组</h3><p><strong>命令：</strong><code>groupmod [options] groupName</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-n</td><td align="center">修改组名</td></tr></tbody></table><h3 id="查看组列表"><a href="#查看组列表" class="headerlink" title="查看组列表"></a>查看组列表</h3><p><strong>命令：</strong><code>cat /etc/group</code></p><p><strong>说明：</strong>每一列分别表示组名、组密码、GID、组中的用户（不包含初始用户）</p><h2 id="磁盘和分区相关"><a href="#磁盘和分区相关" class="headerlink" title="磁盘和分区相关"></a>磁盘和分区相关</h2><h3 id="du"><a href="#du" class="headerlink" title="du"></a>du</h3><blockquote><p>disk usage，磁盘占用情况</p></blockquote><p><strong>命令：</strong><code>du [options] path</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-h</td><td align="center">以人方便阅读的格式展示大小，如K、M、G等</td></tr><tr><td align="center">-a</td><td align="center">显示所有文件（文件+目录），默认只显示目录</td></tr><tr><td align="center">-c</td><td align="center">显示完所有文件后，限制总和</td></tr><tr><td align="center">-s</td><td align="center">只显示总和</td></tr></tbody></table><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示/tmp目录磁盘占用情况</span></span><br><span class="line"><span class="built_in">du</span> -sh /tmp</span><br></pre></td></tr></table></figure><h3 id="df"><a href="#df" class="headerlink" title="df"></a>df</h3><blockquote><p>disk free，磁盘空余情况</p></blockquote><p><strong>命令：</strong><code>df [options]</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-h</td><td align="center">以人方便阅读的格式展示大小，如K、M、G等</td></tr></tbody></table><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看磁盘空闲情况</span></span><br><span class="line"><span class="built_in">df</span> -h</span><br></pre></td></tr></table></figure><h3 id="lsblk"><a href="#lsblk" class="headerlink" title="lsblk"></a>lsblk</h3><blockquote><p>查看设备挂载情况</p></blockquote><p><strong>命令：</strong><code>lsblk [options]</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-f</td><td align="center">显示文件系统信息</td></tr></tbody></table><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看设备挂载信息</span></span><br><span class="line">lsblk -f</span><br></pre></td></tr></table></figure><h3 id="mount-x2F-umount"><a href="#mount-x2F-umount" class="headerlink" title="mount&#x2F;umount"></a>mount&#x2F;umount</h3><p><strong>命令：</strong></p><ul><li><code>mount [-t vfstype] [-o options] device dir</code></li><li><code>unmount</code></li></ul><p><strong>参数：</strong></p><table><thead><tr><th align="center">参数</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">-t vfstype</td><td align="center">指定文件系统的类型，通常不必指定。mount 会自动选择正确的类型。常用类型有：<br />光盘或光盘镜像：iso9660<br />DOS fat16 文件系统：msdos<br />Windows 9x fat32 文件系统：vfat<br />Windows NT ntfs 文件系统：ntfs<br />Mount Windows 文件网络共享：smbfs<br />UNIX(LINUX) 文件网络共享：nfs</td></tr><tr><td align="center">-o options</td><td align="center">主要用来描述设备或档案的挂接方式。常用的参数有：<br />loop：用来把一个文件当成硬盘分区挂接上系统<br />ro：采用只读方式挂接设备<br />rw：采用读写方式挂接设备<br />iocharset：指定访问文件系统所用字符集</td></tr><tr><td align="center">device</td><td align="center">要挂接(mount)的设备</td></tr><tr><td align="center">dir</td><td align="center">设备在系统上的挂接点(mount point)</td></tr></tbody></table><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 建立挂载点</span></span><br><span class="line"><span class="built_in">mkdir</span> /mnt/cdrom/</span><br><span class="line"><span class="comment"># 设备/dev/cdrom挂载到挂载点中</span></span><br><span class="line">mount -t iso9660 /dev/cdrom /mnt/cdrom/</span><br><span class="line">ll /mnt/cdrom</span><br><span class="line"><span class="comment"># 卸载设备</span></span><br><span class="line">umount /mnt/cdrom</span><br></pre></td></tr></table></figure><p><strong>设置开机自动挂载：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/fstab</span><br></pre></td></tr></table></figure><h3 id="fdisk"><a href="#fdisk" class="headerlink" title="fdisk"></a>fdisk</h3><blockquote><p>磁盘分区</p></blockquote><p><strong>命令：</strong><code>fdisk [options]</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-l</td><td align="center">显示所有硬盘的分区列表</td></tr></tbody></table><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看磁盘分区</span></span><br><span class="line">fdisk -l</span><br></pre></td></tr></table></figure><h2 id="进程管理相关"><a href="#进程管理相关" class="headerlink" title="进程管理相关"></a>进程管理相关</h2><h3 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h3><blockquote><p>process status，进程状态</p></blockquote><p><strong>命令：</strong><code>ps [options]</code></p><p><strong>选项：</strong></p><table><thead><tr><th align="center">选项</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">a</td><td align="center">列出所有用户带终端的进程</td></tr><tr><td align="center">x</td><td align="center">列出不带终端的进程</td></tr><tr><td align="center">u</td><td align="center">以面向用户的风格展示</td></tr><tr><td align="center">-e</td><td align="center">列出所有进程</td></tr><tr><td align="center">-f</td><td align="center">以完成格式显示，包括命令行</td></tr><tr><td align="center">-u</td><td align="center">列出某个用户关联的所有进程</td></tr></tbody></table><p><strong>说明：</strong></p><ul><li><p>ps axu显示信息项</p><ul><li><p>USER：创建该进程的用户；</p></li><li><p>PID：进程id；</p></li><li><p>%CPU：进程占CPU资源的百分比；</p></li><li><p>%MEM：进程占物理内存的百分比；</p></li><li><p>VSZ：该进程占用虚拟内存的大小，单位 KB；</p></li><li><p>RSS：该进程占用实际物理内存的大小，单位 KB；</p></li><li><p>TTY：该进程是在哪个终端中运行的。对于 CentOS 来说，tty1 是图形化终端，</p><p>tty2-tty6 是本地的字符界面终端。pts&#x2F;0-255 代表虚拟终端；</p></li><li><p>STAT：进程状态。常见的状态有：R：运行状态、S：睡眠状态、T：暂停状态、Z：僵尸状态、s：包含子进程、l：多线程、+：前台显示；</p></li><li><p>START：该进程的启动时间；</p></li><li><p>TIME：该进程占用 CPU 的运算时间，注意不是系统时间；</p></li><li><p>COMMAND：产生此进程的命令名；</p></li></ul></li><li><p>ps -ef显示信息项</p><ul><li>UID：用户 ID；</li><li>PID：进程 ID；</li><li>PPID：父进程 ID；</li><li>C：CPU 用于计算执行优先级的因子。数值越大，表明进程是 CPU 密集型运算，执行优先级会降低；数值越小，表明进程是 I&#x2F;O 密集型运算，执行优先级会提高；</li><li>STIME：进程启动的时间；</li><li>TTY：完整的终端名称；</li><li>TIME：CPU 时间；</li><li>CMD：启动进程所用的命令和参数；</li></ul></li></ul><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps aux</span><br><span class="line">ps -ef</span><br></pre></td></tr></table></figure><h3 id="kill"><a href="#kill" class="headerlink" title="kill"></a>kill</h3><blockquote><p>终止进程</p></blockquote><p><strong>命令：</strong></p><ul><li><code>kill [options] pid</code>，通过进程号杀死进程；</li><li><code>killall pname</code>，通过进程名杀死进程，在系统负载过大时很有效；</li></ul><p><strong>选项：</strong></p><ul><li>-9：表示立即停止进程</li></ul><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 强制杀死进程id为5101的进程</span></span><br><span class="line"><span class="built_in">kill</span> -9 5101</span><br><span class="line"><span class="comment"># 强制杀死名为aaa的进程</span></span><br><span class="line">killall -9 aaa</span><br></pre></td></tr></table></figure><h3 id="pstree"><a href="#pstree" class="headerlink" title="pstree"></a>pstree</h3><blockquote><p>显示进程树</p></blockquote><p><strong>命令：</strong><code>pstree [options]</code></p><p><strong>选项：</strong></p><ul><li>-p：显示进程id；</li><li>-u：显示进程所属用户；</li></ul><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pstree -pu</span><br></pre></td></tr></table></figure><h3 id="top"><a href="#top" class="headerlink" title="top"></a>top</h3><blockquote><p>实时监控进程状态</p></blockquote><p><strong>命令：</strong><code>top [options]</code></p><p><strong>选项：</strong></p><ul><li>-d：指定每隔多少秒刷新，默认3秒；</li><li>-i：不显示闲置或僵尸进程；</li><li>-p：监控指定的进程id</li></ul><p><strong>操作：</strong></p><ul><li>P：按CPU使用率排序，默认就是此项；</li><li>M：按内存的使用率排序；</li><li>N：按PID排序；</li><li>q：退出top；</li></ul><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 监控pid为11232的进程</span></span><br><span class="line">top -p 11232</span><br></pre></td></tr></table></figure><h3 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h3><blockquote><p>显示网络状态和端口占用信息</p></blockquote><p><strong>命令：</strong><code>netstat [options]</code></p><p><strong>选项：</strong></p><ul><li>-a：显示所有socket；</li><li>-n：不显示别名，能显示数字的全部显示数字；</li><li>-p：显示进程信息；</li><li>-t：显示使用TCP协议的socket；</li><li>-u：显示使用UDP协议的socket；</li><li>-l：仅显示正在监听的socket；</li></ul><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看sshd进程的网络信息</span></span><br><span class="line">netstat -anp | grep sshd</span><br><span class="line"><span class="comment"># 查看22端口的占用情况</span></span><br><span class="line">netstat -nlp | grep 22</span><br></pre></td></tr></table></figure><h3 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h3><blockquote><p>cron定时任务</p></blockquote><p><strong>命令：</strong><code>crontab [options]</code></p><p><strong>选项：</strong></p><ul><li>-u：指定操作crontab的用户；</li><li>-e：编辑crontab任务；</li><li>-l：显示用户的crontab任务；</li><li>-r：删除用户的crontab任务；</li></ul><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑pxz用户的crontab任务</span></span><br><span class="line"><span class="comment"># */1 * * * * /bin/echo &#x27;11&#x27; &gt;&gt; /tmp/test.txt</span></span><br><span class="line">crontab -e -u pxz</span><br><span class="line"><span class="comment"># 显示当前用户的crontab任务</span></span><br><span class="line">crontab -l</span><br></pre></td></tr></table></figure><p><strong>crontab命令解释：</strong></p><p><em>注意：周和日期、月份不要同时指定！</em></p><p>每行任务都有6列，分别表示：</p><ul><li>分钟：取值为0-59；</li><li>小时：取值为0-23；</li><li>日期：取值为1-31；</li><li>月份：取值为1-12；</li><li>周：取值为0-7,0和7都表示周日；</li><li>命令</li></ul><p>每列取值中可包含的特殊符号：</p><ul><li>*（星号）：表示无限制，任何时间都符合要求；</li><li>,（逗号）：表示只限制固定的几个时间，如<code>1,11 * * * *</code>，表示每小时的第1、第11分钟执行任务；</li><li>-（减号）：表示时间范围，如<code>0 8-12 * * *</code>，表示8点至12点间的每小时0分都执行任务；</li><li>&#x2F;n（斜线）：n为一个数字，表示每次任务间隔n，如<code>*/5 * * * *</code>表示每5分钟执行一次；</li></ul><h1 id="软件包管理"><a href="#软件包管理" class="headerlink" title="软件包管理"></a>软件包管理</h1><h2 id="rpm"><a href="#rpm" class="headerlink" title="rpm"></a>rpm</h2><blockquote><p>rpm（英文全拼：redhat package manager） 原本是 Red Hat Linux 发行版专门用来管理 Linux 各项套件的程序，由于它遵循 GPL 规则且功能强大方便，因而广受欢迎。逐渐受到其他发行版的采用。</p></blockquote><p><strong>命令：</strong><code>rpm [options]</code></p><p><strong>选项：</strong></p><ul><li>-q：查询模式；</li><li>-a：显示所有包；</li><li>-f：查询包含指定文件的包；</li><li>-l：查询包中的文件列表；</li><li>-e：卸载选件包；</li><li>-i：安装包；</li><li>-U：更新包，存在更新，不存在则安装；</li><li>-F：更新包，存在时才更新；</li><li>-v：显示详细信息；</li><li>-h：显示进度条；</li></ul><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询软件包</span></span><br><span class="line">rpm -qa packageName</span><br><span class="line"><span class="comment"># 安装软件包</span></span><br><span class="line">rpm -ivh packageName</span><br><span class="line"><span class="comment"># 更新软件包</span></span><br><span class="line">rpm -Uvh packageName</span><br><span class="line"><span class="comment"># 卸载软件包</span></span><br><span class="line">rpm -e packageName</span><br><span class="line"><span class="comment"># 查看/sbin/ifconfig是哪个包安装的</span></span><br><span class="line">rpm -qf /sbin/ifconfig</span><br><span class="line"><span class="comment"># 查看net-tools包的文件</span></span><br><span class="line">rpm -ql net-tools</span><br></pre></td></tr></table></figure><h2 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h2><blockquote><p>yum（ Yellow dog Updater, Modified）是一个在 Fedora 和 RedHat 以及 SUSE 中的 Shell 前端软件包管理器。</p><p>基于 RPM 包管理，能够从指定的服务器自动下载 RPM 包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。</p><p>yum 提供了查找、安装、删除某一个、一组甚至全部软件包的命令，而且命令简洁而又好记</p></blockquote><p><strong>命令：</strong><code>yum [options] command package</code></p><p><strong>选项：</strong></p><ul><li>-y：对所有提问都回答yes；</li></ul><p><strong>命令：</strong></p><ul><li>install：安装；</li><li>update：更新；</li><li>check-update：检查是否有可用的更新；</li><li>remove：删除；</li><li>list：显示软件包列表；</li><li>clean：清除缓存；</li></ul><p><strong>案例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装net-tools</span></span><br><span class="line">yum -y install net-tools</span><br></pre></td></tr></table></figure><h1 id="命令字典"><a href="#命令字典" class="headerlink" title="命令字典"></a>命令字典</h1><h2 id="查询软件安装目录"><a href="#查询软件安装目录" class="headerlink" title="查询软件安装目录"></a>查询软件安装目录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 以查询redis为例</span><br><span class="line">ps -ef | grep redis # 获取redis的进程id</span><br><span class="line">ll /proc/processId/cwd</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> system </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ入门</title>
      <link href="/2022/08/16/middleware/RabbitMQ%E5%85%A5%E9%97%A8/"/>
      <url>/2022/08/16/middleware/RabbitMQ%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="1-搭建RabbitMQ单机环境"><a href="#1-搭建RabbitMQ单机环境" class="headerlink" title="1. 搭建RabbitMQ单机环境"></a>1. 搭建RabbitMQ单机环境</h1><h2 id="1-1-版本"><a href="#1-1-版本" class="headerlink" title="1.1. 版本"></a>1.1. 版本</h2><pre><code>   Linux：CentOS7   Erlang：23.3.4   RabbitMQ：3.9.13</code></pre><h2 id="1-2-资源下载"><a href="#1-2-资源下载" class="headerlink" title="1.2. 资源下载"></a>1.2. 资源下载</h2><pre><code>Erlang rpm包下载地址：https://github.com/rabbitmq/erlang-rpm/releasesRabbitMQ rpm包下载地址：https://github.com/rabbitmq/rabbitmq-server/releases</code></pre><h2 id="1-3-搭建步骤"><a href="#1-3-搭建步骤" class="headerlink" title="1.3. 搭建步骤"></a>1.3. 搭建步骤</h2><h3 id="1-3-1-安装Erlang"><a href="#1-3-1-安装Erlang" class="headerlink" title="1.3.1. 安装Erlang"></a>1.3.1. 安装Erlang</h3><p><strong><em>RabbitMQ依赖Erlang环境，安装RabbitMQ之前，先要安装Erlang环境。</em></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 将下载好的Erlang rpm包放到/usr/local/erlang目录下，执行</span><br><span class="line">rpm -ivh erlang-23.3.4.4-1.el7.x86_64.rpm</span><br><span class="line"># 查看Erlang版本</span><br><span class="line">erl -version</span><br></pre></td></tr></table></figure><p><img src="/%E5%AE%89%E8%A3%85Erlang.png" alt="安装Erlang"></p><h3 id="1-3-2-安装socat"><a href="#1-3-2-安装socat" class="headerlink" title="1.3.2. 安装socat"></a>1.3.2. 安装socat</h3><p><strong><em>安装RabbitMQ之前还需要安装一下socat。</em></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 安装socat</span><br><span class="line">yum install socat -y</span><br></pre></td></tr></table></figure><p><img src="/%E5%AE%89%E8%A3%85socat.png" alt="安装socat"><br><em>执行<code>yum install socat -y</code>时，若出现<code>Cannot find a valid baseurl for repo: base/7/x86_64</code>错误，可尝试通过配置DNS来解决，具体如下：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 编辑ifcfg-ens33文件（不同系统该文件名称可能不同）</span><br><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line"># 在ifcfg-ens33中追加配置</span><br><span class="line">DNS1=8.8.8.8 </span><br><span class="line">DNS2=4.2.2.2</span><br><span class="line"># 重启网络</span><br><span class="line">systemctl restart network.service</span><br></pre></td></tr></table></figure><p><img src="/%E9%85%8D%E7%BD%AEDNS.png" alt="配置DNS"></p><h3 id="1-3-3-安装RabbitMQ"><a href="#1-3-3-安装RabbitMQ" class="headerlink" title="1.3.3. 安装RabbitMQ"></a>1.3.3. 安装RabbitMQ</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 将下载好的RabbitMQ rpm包放到/usr/local/rabbitmq目录下，执行</span><br><span class="line">rpm -ivh rabbitmq-server-3.9.13-1.el7.noarch.rpm</span><br><span class="line"># 添加开机启动</span><br><span class="line">chkconfig rabbitmq-server on</span><br></pre></td></tr></table></figure><p><img src="/%E5%AE%89%E8%A3%85RabbitMQ.png" alt="安装RabbitMQ"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 添加web管理页面插件</span><br><span class="line">rabbitmq-plugins enable rabbitmq_management</span><br></pre></td></tr></table></figure><p><img src="/%E6%B7%BB%E5%8A%A0web%E7%AE%A1%E7%90%86%E9%A1%B5%E9%9D%A2%E6%8F%92%E4%BB%B6.png" alt="添加web管理页面插件"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 启动RabbitMQ服务，虽然已经设置了开机启动，但本次还得手动起一下</span><br><span class="line"># 查看服务状态</span><br><span class="line">/sbin/service rabbitmq-server status</span><br><span class="line"># 启动服务</span><br><span class="line">/sbin/service rabbitmq-server start</span><br><span class="line"># 停止服务</span><br><span class="line">/sbin/service rabbitmq-server stop</span><br></pre></td></tr></table></figure><p><img src="/%E5%90%AF%E5%81%9C%E6%9C%8D%E5%8A%A1.png" alt="启停服务"></p><p><strong><em>添加登录用户，内置的用户guest&#x2F;guest只能在本机登录，要访问Linux下的服务，需要额外添加用户。</em></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 用户名密码分别为admin/admin，拥有所有权限</span><br><span class="line">rabbitmqctl add_user admin admin</span><br><span class="line">rabbitmqctl set_user_tags admin administrator</span><br><span class="line">rabbitmqctl set_permissions -p &quot;/&quot; admin &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;</span><br><span class="line"># 查看用户列表</span><br><span class="line">rabbitmqctl list_users</span><br></pre></td></tr></table></figure><p><img src="/%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7.png" alt="添加用户"></p><h3 id="1-3-4-关闭防火墙"><a href="#1-3-4-关闭防火墙" class="headerlink" title="1.3.4. 关闭防火墙"></a>1.3.4. 关闭防火墙</h3><p><strong><em>在windows下访问Linux上的服务，需要先关闭Linux上的防火墙。</em></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 查看防火墙状态</span><br><span class="line">systemctl status firewalld</span><br><span class="line"># 临时关闭防火墙（系统重启后仍会开启防火墙）</span><br><span class="line">systemctl stop firewalld</span><br><span class="line"># 永久关闭防火墙</span><br><span class="line">systemctl disable firewalld</span><br></pre></td></tr></table></figure><p><img src="/%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99.png" alt="关闭防火墙"></p><h3 id="1-3-5-测试安装结果"><a href="#1-3-5-测试安装结果" class="headerlink" title="1.3.5. 测试安装结果"></a>1.3.5. 测试安装结果</h3><p><strong><em>浏览器访问<code>http://ip地址:15672/</code>，输入用户名密码<code>admin/admin</code>,能访问到RabbitMQ主页即为安装成功。</em></strong><br><img src="/%E7%99%BB%E5%BD%95RabbitMQ.png" alt="登录RabbitMQ"><br><img src="/RabbitMQ%E4%B8%BB%E9%A1%B5.png" alt="RabbitMQ主页"></p><h1 id="2-搭建RabbitMQ集群环境"><a href="#2-搭建RabbitMQ集群环境" class="headerlink" title="2. 搭建RabbitMQ集群环境"></a>2. 搭建RabbitMQ集群环境</h1><h2 id="2-1-搭建环境"><a href="#2-1-搭建环境" class="headerlink" title="2.1. 搭建环境"></a>2.1. 搭建环境</h2><pre><code>   三台搭建好RabbitMQ单机环境的服务器，单机环境搭建步骤见上文。</code></pre><h2 id="2-2-搭建步骤"><a href="#2-2-搭建步骤" class="headerlink" title="2.2. 搭建步骤"></a>2.2. 搭建步骤</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 修改三台服务器的主机名，分别为node1、node2、node3</span><br><span class="line">vi /etc/hostname</span><br><span class="line"># 修改完主机名后重启三台服务器使之生效</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p><img src="/%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%90%8D.png" alt="修改主机名"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 修改各节点的hosts文件，使各节点能互相访问</span><br><span class="line">vi /etc/hosts</span><br><span class="line"># 添加配置</span><br><span class="line">ip地址1 node1</span><br><span class="line">IP地址2 node2</span><br><span class="line">ip地址3 node3</span><br></pre></td></tr></table></figure><p><img src="/%E4%BF%AE%E6%94%B9hosts%E6%96%87%E4%BB%B6.png" alt="修改hosts文件"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 三个节点使用相同的cookie，在node1上分别执行（该命令要输入node2、node3的用户密码）：</span><br><span class="line">scp /var/lib/rabbitmq/.erlang.cookie root@node2:/var/lib/rabbitmq/.erlang.cookie</span><br><span class="line">scp /var/lib/rabbitmq/.erlang.cookie root@node3:/var/lib/rabbitmq/.erlang.cookie</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/%E7%BB%9F%E4%B8%80%E5%90%84%E8%8A%82%E7%82%B9%E7%9A%84cookie.png" alt="统一各节点的cookie"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 将node2加入到node1，node3加入到node2，以构成三个节点的集群，操作如下：</span><br><span class="line"></span><br><span class="line"># 在node2上执行(stop会关闭erlang虚拟机，stop_app只关闭rabbitmq服务)</span><br><span class="line">rabbitmqctl stop_app</span><br><span class="line">rabbitmqctl reset</span><br><span class="line">rabbitmqctl join_cluster rabbit@node1</span><br><span class="line">rabbitmqctl start_app</span><br><span class="line"># 在node3上执行</span><br><span class="line">rabbitmqctl stop_app</span><br><span class="line">rabbitmqctl reset</span><br><span class="line">rabbitmqctl join_cluster rabbit@node2</span><br><span class="line">rabbitmqctl start_app</span><br><span class="line"></span><br><span class="line"># 至此，三个节点的集群环境已搭建完毕</span><br><span class="line"># 查看集群状态</span><br><span class="line">rabbitmqctl cluster_status</span><br></pre></td></tr></table></figure><p><img src="/%E6%9F%A5%E7%9C%8B%E9%9B%86%E7%BE%A4%E7%8A%B6%E6%80%81.png" alt="查看集群状态"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 剔除集群节点（下线的节点可以剔除掉）</span><br><span class="line">rabbitmqctl stop_app</span><br><span class="line">rabbitmqctl reset</span><br><span class="line">rabbitmqctl forget_cluster_node rabbit@node1</span><br><span class="line">rabbitmqctl start_app</span><br></pre></td></tr></table></figure><p><strong><em>单机环境和集群环境下用户不通用，所以要添加集群用户，方式同“添加单机用户”</em></strong></p><h2 id="2-3-验证集群效果"><a href="#2-3-验证集群效果" class="headerlink" title="2.3. 验证集群效果"></a>2.3. 验证集群效果</h2><p><strong><em>随便访问一台单机的RabbitMQ页面，输入集群用户名<code>admin/admin</code>后，看到三个健康的节点即为成功。</em></strong><br><img src="/RabbitMQ%E9%9B%86%E7%BE%A4%E9%AA%8C%E8%AF%81.png" alt="RabbitMQ集群验证"></p><h2 id="2-4-添加镜像队列策略"><a href="#2-4-添加镜像队列策略" class="headerlink" title="2.4. 添加镜像队列策略"></a>2.4. 添加镜像队列策略</h2><p><strong>各参数说明</strong></p><ul><li><em>Name：策略名称，可随意指定，不重复即可。</em></li><li>Pattern：匹配策略，为正则表达式，如<code>^mirror</code>表示所有名称以<code>mirror</code>开头的队列均为镜像队列。</li><li>Apply to：应用于何处。</li><li>Definition:<ul><li>ha-mode：exactly，表示模式为指定模式。</li><li>ha-params：2，表示备份数量为2。</li><li>ha-sync-mode：automatic，表示同步策略为自动同步。<br><img src="/%E6%B7%BB%E5%8A%A0%E9%95%9C%E5%83%8F%E9%98%9F%E5%88%97.png" alt="添加镜像队列"></li></ul></li></ul><h1 id="3-卸载RabbitMQ和Erlang"><a href="#3-卸载RabbitMQ和Erlang" class="headerlink" title="3. 卸载RabbitMQ和Erlang"></a>3. 卸载RabbitMQ和Erlang</h1><h2 id="3-1-卸载RabbitMQ"><a href="#3-1-卸载RabbitMQ" class="headerlink" title="3.1. 卸载RabbitMQ"></a>3.1. 卸载RabbitMQ</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 停止RabbitMQ服务</span><br><span class="line">/sbin/service rabbitmq-server stop</span><br><span class="line"># 查看rabbitmq安装的相关列表</span><br><span class="line">yum list | grep rabbitmq</span><br><span class="line"># 卸载rabbitmq已安装的相关内容</span><br><span class="line">yum -y remove rabbitmq-server.noarch</span><br><span class="line"># 删除相关文件</span><br><span class="line">rm -rf /var/lib/rabbitmq</span><br></pre></td></tr></table></figure><h2 id="3-2-卸载Erlang"><a href="#3-2-卸载Erlang" class="headerlink" title="3.2. 卸载Erlang"></a>3.2. 卸载Erlang</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 查看erlang安装的相关列表</span><br><span class="line">yum list | grep erlang</span><br><span class="line"># 卸载erlang已安装的相关内容</span><br><span class="line">yum -y remove erlang-*</span><br><span class="line">yum remove erlang.x86_64</span><br><span class="line"># 删除相关文件</span><br><span class="line">rm -rf /usr/lib64/erlang</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 中间件 </category>
          
          <category> 消息队列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MQ </tag>
            
            <tag> RabbitMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kafka入门</title>
      <link href="/2022/08/16/middleware/kafka%E5%85%A5%E9%97%A8/"/>
      <url>/2022/08/16/middleware/kafka%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="1-搭建kafka单机环境"><a href="#1-搭建kafka单机环境" class="headerlink" title="1. 搭建kafka单机环境"></a>1. 搭建kafka单机环境</h1><h2 id="1-1-版本"><a href="#1-1-版本" class="headerlink" title="1.1. 版本"></a>1.1. 版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Linux:CentOS7</span><br><span class="line">JDK:1.8</span><br><span class="line">zookeeper:3.7.0</span><br><span class="line">kafka:3.0.0</span><br></pre></td></tr></table></figure><h2 id="1-2-安装环境"><a href="#1-2-安装环境" class="headerlink" title="1.2. 安装环境"></a>1.2. 安装环境</h2><p><em>Linux服务器上已有JDK环境和Zookeeper环境。</em></p><h2 id="1-3-资源下载"><a href="#1-3-资源下载" class="headerlink" title="1.3. 资源下载"></a>1.3. 资源下载</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># kafka官方下载</span><br><span class="line">https://kafka.apache.org/downloads</span><br></pre></td></tr></table></figure><h2 id="1-4-搭建步骤"><a href="#1-4-搭建步骤" class="headerlink" title="1.4. 搭建步骤"></a>1.4. 搭建步骤</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 将下载好的安装包放到/usr/local/kafka目录下，并解压</span><br><span class="line">tar -zxvf kafka_2.12-3.0.0.tgz</span><br><span class="line"># 编辑config/server.propoties文件</span><br><span class="line">vi config/server.propoties</span><br><span class="line"># 配置日志目录和zookeeper地址</span><br><span class="line">log.dirs=/usr/local/kafka/datas</span><br><span class="line">zookeeper.connect=node1:2181,node2:2181,node3:2181/kafka</span><br><span class="line"># 添加环境变量</span><br><span class="line">vi /etc/profile</span><br><span class="line"># 追加kafka的配置</span><br><span class="line">export KAFKA_HOME=/usr/local/kafka</span><br><span class="line">export PATH=$PATH:$KAFKA_HOME/bin</span><br><span class="line"># 设置新增的环境变量生效</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h2 id="1-5-测试搭建结果"><a href="#1-5-测试搭建结果" class="headerlink" title="1.5. 测试搭建结果"></a>1.5. 测试搭建结果</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 启动kafka</span><br><span class="line">kafka-server-start.sh -daemon config/server.properties</span><br><span class="line"># 创建主题（名称为kafkaTestTopic，1个分区，1个副本，这个node1为hostname）</span><br><span class="line">kafka-topics.sh --bootstrap-server node1:9092 --create --topic kafkaTestTopic --partitions 1 --replication-factor 1</span><br></pre></td></tr></table></figure><p><img src="/%E5%88%9B%E5%BB%BAkafka%E4%B8%BB%E9%A2%98.png" alt="创建kafka主题"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 开启生产者服务，向kafkaTestTopic发送数据</span><br><span class="line">kafka-console-producer.sh --bootstrap-server node1:9092 --topic kafkaTestTopic</span><br><span class="line"># 重新打开一个终端，开启一个消费者服务</span><br><span class="line">kafka-console-consumer.sh --bootstrap-server node1:9092 --topic kafkaTestTopic --from-beginning</span><br><span class="line"># 在生产者控制台输入消息，观测到消费者控制台可接收到数据</span><br></pre></td></tr></table></figure><p><img src="/%E7%94%9F%E4%BA%A7%E8%80%85%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF.png" alt="生产者发送消息"><br><img src="/%E6%B6%88%E8%B4%B9%E8%80%85%E6%94%B6%E5%88%B0%E6%B6%88%E6%81%AF.png" alt="消费者收到消息"></p><h1 id="2-搭建kafka集群环境"><a href="#2-搭建kafka集群环境" class="headerlink" title="2. 搭建kafka集群环境"></a>2. 搭建kafka集群环境</h1><h2 id="2-1-环境"><a href="#2-1-环境" class="headerlink" title="2.1. 环境"></a>2.1. 环境</h2><p><em>三台搭建好kafka单机环境的服务器，kafka单机环境搭建见上文。</em></p><h2 id="2-2-搭建步骤"><a href="#2-2-搭建步骤" class="headerlink" title="2.2. 搭建步骤"></a>2.2. 搭建步骤</h2><p><em>与单机环境搭建最大的不同，就是三个节点要分别指定自己的<code>broker.id</code>。</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 修改三个节点的broker.id分别为0、1、2</span><br><span class="line">vi config/server.propoties</span><br></pre></td></tr></table></figure><h2 id="2-3-测试搭建效果"><a href="#2-3-测试搭建效果" class="headerlink" title="2.3. 测试搭建效果"></a>2.3. 测试搭建效果</h2><p><em>测试过程与单机环境测试步骤大致相同，稍有不同的地方为集群测试的<code>--bootstrap-server</code>可指定多个节点，中间用<code>,</code>隔开，且创建主题时<code>--partitions</code>参数和<code>--replication-factor</code>参数可根据集群数量灵活指定。</em></p>]]></content>
      
      
      <categories>
          
          <category> 中间件 </category>
          
          <category> 消息队列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kafka </tag>
            
            <tag> MQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hibernate入门</title>
      <link href="/2022/08/16/db/Hibernate%E5%85%A5%E9%97%A8/"/>
      <url>/2022/08/16/db/Hibernate%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><h2 id="不使用maven"><a href="#不使用maven" class="headerlink" title="不使用maven"></a>不使用maven</h2><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 官网5.4版本zip下载地址</span><br><span class="line">https://hibernate.org/orm/releases/5.4/</span><br></pre></td></tr></table></figure><p><img src="/%E8%B5%84%E6%BA%90%E5%8C%85%E4%B8%8B%E8%BD%BD.jpg" alt="资源包下载"></p><p>下载完成后引入<code>lib/required</code>目录下的jar包即可。</p><h2 id="使用maven"><a href="#使用maven" class="headerlink" title="使用maven"></a>使用maven</h2><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># mvn仓库搜索hibernate</span><br><span class="line">https://mvnrepository.com/</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.4.18.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h2><p><code>resources</code>目录下新建<code>hibernate.cfg.xml</code>文件，配置文件示例在<code>$&#123;hibernate包根目录&#125;/project/etc</code>下的<code>hibernate.cfg.xml</code>和<code>hibernate.properties</code>中查看。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  ~ Hibernate, Relational Persistence for Idiomatic Java</span></span><br><span class="line"><span class="comment">  ~</span></span><br><span class="line"><span class="comment">  ~ License: GNU Lesser General Public License (LGPL), version 2.1 or later.</span></span><br><span class="line"><span class="comment">  ~ See the lgpl.txt file in the root directory or &lt;http://www.gnu.org/licenses/lgpl-2.1.html&gt;.</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">hibernate-configuration</span> <span class="keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"><span class="string">&quot;-//Hibernate/Hibernate Configuration DTD 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="string">&quot;http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">session-factory</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据库驱动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hibernate.connection.driver_class&quot;</span>&gt;</span>org.postgresql.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据库url --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hibernate.connection.url&quot;</span>&gt;</span>jdbc:postgresql://192.168.5.112:5432/genericdb<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据库连接用户名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hibernate.connection.username&quot;</span>&gt;</span>postgres<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据库连接密码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hibernate.connection.password&quot;</span>&gt;</span>postgres<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据库方言</span></span><br><span class="line"><span class="comment">不同的数据库中,sql语法略有区别. 指定方言可以让hibernate框架在生成sql语句时.针对数据库的方言生成.</span></span><br><span class="line"><span class="comment">sql99标准: DDL 定义语言  库表的增删改查</span></span><br><span class="line"><span class="comment">  DCL 控制语言  事务 权限</span></span><br><span class="line"><span class="comment">  DML 操纵语言  增删改查</span></span><br><span class="line"><span class="comment">注意: MYSQL在选择方言时,请选择最短的方言.</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hibernate.dialect&quot;</span>&gt;</span>org.hibernate.dialect.PostgreSQL82Dialect<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- #hibernate.show_sql true</span></span><br><span class="line"><span class="comment"> #hibernate.format_sql true</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 将hibernate生成的sql语句打印到控制台 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hibernate.show_sql&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 将hibernate生成的sql语句格式化(语法缩进) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hibernate.format_sql&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">## auto schema export  自动导出表结构. 自动建表</span></span><br><span class="line"><span class="comment">#hibernate.hbm2ddl.auto create自动建表.每次框架运行都会创建新的表.以前表将会被覆盖,表数据会丢失.(开发环境中测试使用)</span></span><br><span class="line"><span class="comment">#hibernate.hbm2ddl.auto create-drop 自动建表.每次框架运行结束都会将所有表删除.(开发环境中测试使用)</span></span><br><span class="line"><span class="comment">#hibernate.hbm2ddl.auto update(推荐使用) 自动生成表.如果已经存在不会再生成.如果表有变动.自动更新表(不会删除任何数据).</span></span><br><span class="line"><span class="comment">#hibernate.hbm2ddl.auto validate校验.不自动生成表.每次启动会校验数据库中表是否正确.校验失败.</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hibernate.hbm2ddl.auto&quot;</span>&gt;</span>update<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!-- 配置线程上下文 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">&quot;hibernate.current_session_context_class&quot;</span>&gt;</span>thread<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!-- 加载映射文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapping</span> <span class="attr">resource</span>=<span class="string">&quot;mapper/Department.hbm.xml&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">session-factory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="创建实体类"><a href="#创建实体类" class="headerlink" title="创建实体类"></a>创建实体类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lhx.orm.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Department</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer deptNo;</span><br><span class="line">    <span class="keyword">private</span> String deptName;</span><br><span class="line">    <span class="keyword">private</span> String location;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加映射文件"><a href="#添加映射文件" class="headerlink" title="添加映射文件"></a>添加映射文件</h2><p>在<code>resources</code>目录下创建<code>mapper</code>目录，存放实体类和数据库表的映射文件，格式为<code>entityName.hbm.xml</code>，如创建<code>Department</code>实体的映射文件<code>Department.hbm.xml</code>。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">hibernate-mapping</span> <span class="keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置表与实体对象的关系 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- package属性：填写一个包名，在元素内部凡是需要书写完整类名的属性，可以直接写类名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">&quot;com.lhx.orm.entity&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        class元素：配置实体与表的对应关系的</span></span><br><span class="line"><span class="comment">        name:完整类名</span></span><br><span class="line"><span class="comment">        table：数据库表名</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">&quot;Department&quot;</span> <span class="attr">table</span>=<span class="string">&quot;t_department&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- id元素：配置主键映射的属性</span></span><br><span class="line"><span class="comment">            name：填写主键对应属性名</span></span><br><span class="line"><span class="comment">            colunm（可选）：填写表中的主键的列名，默认值：列名会默认使用属性名</span></span><br><span class="line"><span class="comment">            type(可选)：填写列（属性）的类型。如果不写hibernate会自动检测属性类型，</span></span><br><span class="line"><span class="comment">                    但是如果手写可以有三种语法java类型|hibernate类型|数据库类型</span></span><br><span class="line"><span class="comment">            not-null(可选)：配置该属性（列）是否不能为空，默认值为：false</span></span><br><span class="line"><span class="comment">            length（可选）:：配置数据库中列的长度，默认值：使用数据库类型的最大长度。如：varchar（255位），int（9位）</span></span><br><span class="line"><span class="comment">         --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">&quot;deptNo&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.Integer&quot;</span> <span class="attr">column</span>=<span class="string">&quot;deptNo&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                主键生成策略</span></span><br><span class="line"><span class="comment">                assigned:程序生成主键，默认策略</span></span><br><span class="line"><span class="comment">                increment：主键按数值顺序递增。此方式的实现机制为在当前应用实例中维持一个变量，以保存着当前的最大值，之后每次需要生成主键的时候将此值加1作为主键</span></span><br><span class="line"><span class="comment">                sequence：采用数据库提供的sequence 机制生成主键。如Oralce 中的Sequence</span></span><br><span class="line"><span class="comment">                native：由Hibernate根据底层数据库自行判断采用identity、hilo、sequence其中一种作为主键生成方式</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">&quot;native&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- property除di之外的普通属性映射</span></span><br><span class="line"><span class="comment">            name：填写主键对应属性名</span></span><br><span class="line"><span class="comment">            colunm：填写表中的列名</span></span><br><span class="line"><span class="comment">            type(可选)：填写列（属性）的类型。如果不写hibernate会自动检测属性类型，</span></span><br><span class="line"><span class="comment">                    但是如果手写可以有三种语法java类型|hibernate类型|数据库类型</span></span><br><span class="line"><span class="comment">            not-null(可选)：配置该属性（列）是否不能为空，默认值为：false</span></span><br><span class="line"><span class="comment">            length（可选）:：配置数据库中列的长度，默认值：使用数据库类型的最大长度。如：varchar（255位），int（9位）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;deptName&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">column</span>=<span class="string">&quot;deptName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;location&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">column</span>=<span class="string">&quot;location&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="加载映射文件"><a href="#加载映射文件" class="headerlink" title="加载映射文件"></a>加载映射文件</h2><p>将映射文件<code>Department.hbm.xml</code>配置到<code>hibernate.cfg.xml</code>里。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">hibernate-configuration</span> <span class="keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"><span class="string">&quot;-//Hibernate/Hibernate Configuration DTD 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="string">&quot;http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">session-factory</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 其他配置 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 加载映射文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapping</span> <span class="attr">resource</span>=<span class="string">&quot;mapper/Department.hbm.xml&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">session-factory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="新增部门"><a href="#新增部门" class="headerlink" title="新增部门"></a>新增部门</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lhx.orm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lhx.orm.entity.Department;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Transaction;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DepartmentTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAddDep</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 读取hibernate配置文件</span></span><br><span class="line">        <span class="type">Configuration</span> <span class="variable">configure</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>().configure();</span><br><span class="line">        <span class="comment">// 创建SessionFactory对象</span></span><br><span class="line">        <span class="type">SessionFactory</span> <span class="variable">sessionFactory</span> <span class="operator">=</span> configure.buildSessionFactory();</span><br><span class="line">        <span class="comment">// 创建Session对象</span></span><br><span class="line">        <span class="type">Session</span> <span class="variable">session</span> <span class="operator">=</span> sessionFactory.openSession();</span><br><span class="line">        <span class="comment">// 开启事务</span></span><br><span class="line">        <span class="type">Transaction</span> <span class="variable">transaction</span> <span class="operator">=</span> session.beginTransaction();</span><br><span class="line">        <span class="comment">// 进行持久化操作</span></span><br><span class="line">        <span class="type">Department</span> <span class="variable">department</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Department</span>();</span><br><span class="line">        department.setDeptName(<span class="string">&quot;技术部&quot;</span>);</span><br><span class="line">        department.setLocation(<span class="string">&quot;北京&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            session.save(department);</span><br><span class="line">            <span class="comment">// 提交事务</span></span><br><span class="line">            transaction.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="comment">// 回滚事务</span></span><br><span class="line">            transaction.rollback();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 释放资源</span></span><br><span class="line">        session.close();</span><br><span class="line">        sessionFactory.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建工具类"><a href="#创建工具类" class="headerlink" title="创建工具类"></a>创建工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lhx.orm.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HibernateUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SessionFactory sessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">// 读取hibernate配置文件</span></span><br><span class="line">        <span class="type">Configuration</span> <span class="variable">configure</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>().configure();</span><br><span class="line">        <span class="comment">// 创建SessionFactory对象</span></span><br><span class="line">        sessionFactory = configure.buildSessionFactory();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Session <span class="title function_">getSession</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 此方式需要在hibernate.cfg.xml中配置</span></span><br><span class="line">        <span class="comment">// &lt;property name = &quot;hibernate.current_session_context_class&quot;&gt;thread&lt;/property&gt;</span></span><br><span class="line">        <span class="comment">// return sessionFactory.getCurrentSession();</span></span><br><span class="line">        <span class="keyword">return</span> sessionFactory.openSession(); <span class="comment">// 此方式需要在最后手动关闭session</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">closeSession</span><span class="params">(Session session)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (session != <span class="literal">null</span> &amp;&amp; session.isOpen()) &#123;</span><br><span class="line">            session.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="session其他api"><a href="#session其他api" class="headerlink" title="session其他api"></a>session其他api</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据主键查询</span></span><br><span class="line"><span class="comment">// 不管后续有没有用到，都会查库，主键不存在返回null</span></span><br><span class="line"><span class="type">Department</span> <span class="variable">department</span> <span class="operator">=</span> session.get(Department.class, <span class="number">2</span>);</span><br><span class="line"><span class="comment">// 后续用到了才去查库，主键不存在报错</span></span><br><span class="line"><span class="type">Department</span> <span class="variable">department</span> <span class="operator">=</span> session.load(Department.class, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除</span></span><br><span class="line"><span class="type">Department</span> <span class="variable">department</span> <span class="operator">=</span> session.get(Department.class, <span class="number">2</span>);</span><br><span class="line">session.delete(department);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新</span></span><br><span class="line"><span class="type">Department</span> <span class="variable">department</span> <span class="operator">=</span> session.get(Department.class, <span class="number">2</span>);</span><br><span class="line">department.setLocation(<span class="string">&quot;武汉&quot;</span>);</span><br><span class="line">session.update(department);</span><br></pre></td></tr></table></figure><h2 id="HQL"><a href="#HQL" class="headerlink" title="HQL"></a>HQL</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询列表</span></span><br><span class="line"><span class="type">String</span> <span class="variable">hql</span> <span class="operator">=</span> <span class="string">&quot;from Department where deptName like :name and location = :location&quot;</span>; <span class="comment">// Deparment是实体名，deptName和location是属性名</span></span><br><span class="line"><span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> session.createQuery(hql);</span><br><span class="line">query.setParameter(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;%技%&quot;</span>);</span><br><span class="line">query.setParameter(<span class="string">&quot;location&quot;</span>, <span class="string">&quot;上海&quot;</span>);</span><br><span class="line">List&lt;Department&gt; list = query.list();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回唯一记录</span></span><br><span class="line"><span class="type">String</span> <span class="variable">hql</span> <span class="operator">=</span> <span class="string">&quot;select count(1) from Department&quot;</span>;</span><br><span class="line"><span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> session.createQuery(hql);</span><br><span class="line"><span class="type">Long</span> <span class="variable">count</span> <span class="operator">=</span> (Long)query.uniqueResult();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 分页查询</span></span><br><span class="line"><span class="type">String</span> <span class="variable">hql</span> <span class="operator">=</span> <span class="string">&quot;from Department order by deptNo desc&quot;</span>;</span><br><span class="line"><span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> session.createQuery(hql);</span><br><span class="line">List&lt;Department&gt; list = query.setFirstResult(<span class="number">0</span>).setMaxResults(<span class="number">2</span>).list();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 投影查询</span></span><br><span class="line"><span class="type">String</span> <span class="variable">hql</span> <span class="operator">=</span> <span class="string">&quot;select deptName from Department&quot;</span>;</span><br><span class="line"><span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> session.createQuery(hql);</span><br><span class="line">List&lt;Object&gt; list = query.list();</span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">hql</span> <span class="operator">=</span> <span class="string">&quot;select deptName, location from Department&quot;</span>;</span><br><span class="line"><span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> session.createQuery(hql);</span><br><span class="line">List&lt;Object[]&gt; list = query.list();</span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">hql</span> <span class="operator">=</span> <span class="string">&quot;select new Department(deptName, location) from Department&quot;</span>; <span class="comment">// 需要有对应的构造方法</span></span><br><span class="line"><span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> session.createQuery(hql);</span><br><span class="line">List&lt;Department&gt; list = query.list();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 原生sql查询</span></span><br><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from t_department where deptno &gt; :deptno&quot;</span>;</span><br><span class="line"><span class="type">NativeQuery</span> <span class="variable">nativeQuery</span> <span class="operator">=</span> session.createSQLQuery(sql).addEntity(Department.class);</span><br><span class="line">nativeQuery.setParameter(<span class="string">&quot;deptno&quot;</span>, <span class="number">2</span>);</span><br><span class="line">List&lt;Department&gt; list = nativeQuery.list();</span><br></pre></td></tr></table></figure><h2 id="一对多关系映射"><a href="#一对多关系映射" class="headerlink" title="一对多关系映射"></a>一对多关系映射</h2><p>假设存在<strong>一个部门对应多个员工</strong>的映射关系，则实体类和映射文件如下：</p><p><strong>部门实体类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lhx.orm.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Department</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer deptNo;</span><br><span class="line">    <span class="keyword">private</span> String deptName;</span><br><span class="line">    <span class="keyword">private</span> String location;</span><br><span class="line">    <span class="comment">// 属于该部门的员工信息</span></span><br><span class="line">    <span class="keyword">private</span> Set&lt;Employee&gt; employees = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>员工实体类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lhx.orm.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Employee</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer empNo;</span><br><span class="line">    <span class="keyword">private</span> String empName;</span><br><span class="line">    <span class="comment">// 保存员工对应的部门</span></span><br><span class="line">    <span class="keyword">private</span> Department department;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>部门映射文件</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">hibernate-mapping</span> <span class="keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置表与实体对象的关系 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- package属性：填写一个包名，在元素内部凡是需要书写完整类名的属性，可以直接写类名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">&quot;com.lhx.orm.entity&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        class元素：配置实体与表的对应关系的</span></span><br><span class="line"><span class="comment">        name:完整类名</span></span><br><span class="line"><span class="comment">        table：数据库表名</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">&quot;Department&quot;</span> <span class="attr">table</span>=<span class="string">&quot;t_department&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- id元素：配置主键映射的属性</span></span><br><span class="line"><span class="comment">            name：填写主键对应属性名</span></span><br><span class="line"><span class="comment">            colunm（可选）：填写表中的主键的列名，默认值：列名会默认使用属性名</span></span><br><span class="line"><span class="comment">            type(可选)：填写列（属性）的类型。如果不写hibernate会自动检测属性类型，</span></span><br><span class="line"><span class="comment">                    但是如果手写可以有三种语法java类型|hibernate类型|数据库类型</span></span><br><span class="line"><span class="comment">            not-null(可选)：配置该属性（列）是否不能为空，默认值为：false</span></span><br><span class="line"><span class="comment">            length（可选）:：配置数据库中列的长度，默认值：使用数据库类型的最大长度。如：varchar（255位），int（9位）</span></span><br><span class="line"><span class="comment">         --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">&quot;deptNo&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.Integer&quot;</span> <span class="attr">column</span>=<span class="string">&quot;deptNo&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                主键生成策略</span></span><br><span class="line"><span class="comment">                assigned:程序生成主键，默认策略</span></span><br><span class="line"><span class="comment">                increment：主键按数值顺序递增。此方式的实现机制为在当前应用实例中维持一个变量，以保存着当前的最大值，之后每次需要生成主键的时候将此值加1作为主键</span></span><br><span class="line"><span class="comment">                sequence：采用数据库提供的sequence 机制生成主键。如Oralce 中的Sequence</span></span><br><span class="line"><span class="comment">                native：由Hibernate根据底层数据库自行判断采用identity、hilo、sequence其中一种作为主键生成方式</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">&quot;native&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;deptName&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">column</span>=<span class="string">&quot;deptName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;location&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">column</span>=<span class="string">&quot;location&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            配置一对多</span></span><br><span class="line"><span class="comment">            name:实体类的属性名</span></span><br><span class="line"><span class="comment">            cascade:级联操作</span></span><br><span class="line"><span class="comment">            inverse:维护关联关系的方向，默认为false，true表示不主动维护关系</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">&quot;employees&quot;</span> <span class="attr">cascade</span>=<span class="string">&quot;all&quot;</span> <span class="attr">inverse</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 外键字段 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">&quot;deptNo&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 属性的类型 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">one-to-many</span> <span class="attr">class</span>=<span class="string">&quot;Employee&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>员工映射文件</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">hibernate-mapping</span> <span class="keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">&quot;com.lhx.orm.entity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">&quot;Employee&quot;</span> <span class="attr">table</span>=<span class="string">&quot;t_employee&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">&quot;empNo&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.Integer&quot;</span> <span class="attr">column</span>=<span class="string">&quot;empNo&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">&quot;native&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;empName&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">column</span>=<span class="string">&quot;empName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            多对一关系映射</span></span><br><span class="line"><span class="comment">            name：属性名</span></span><br><span class="line"><span class="comment">            column：表列名</span></span><br><span class="line"><span class="comment">            class：属性类型</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">many-to-one</span> <span class="attr">name</span>=<span class="string">&quot;department&quot;</span> <span class="attr">column</span>=<span class="string">&quot;deptNo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;Department&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// 测试保存一个员工</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSaveEmp</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Session</span> <span class="variable">session</span> <span class="operator">=</span> HibernateUtil.getSession();</span><br><span class="line">    <span class="type">Transaction</span> <span class="variable">transaction</span> <span class="operator">=</span> session.beginTransaction();</span><br><span class="line">    <span class="type">Department</span> <span class="variable">department</span> <span class="operator">=</span> session.get(Department.class, <span class="number">1</span>);</span><br><span class="line">    <span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Employee</span>();</span><br><span class="line">    employee.setEmpName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    employee.setDepartment(department);</span><br><span class="line">    session.save(employee);</span><br><span class="line">    transaction.commit();</span><br><span class="line">    HibernateUtil.closeSession(session);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Test</span></span><br><span class="line"><span class="comment">// 添加部门的同时添加员工</span></span><br><span class="line"><span class="comment">// 这里遇到一个坑：注意使用lombok时，hashcode和tostring方法的递归调用，导致内存溢出</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSaveDeptAndEmp</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Session</span> <span class="variable">session</span> <span class="operator">=</span> HibernateUtil.getSession();</span><br><span class="line">    <span class="type">Transaction</span> <span class="variable">transaction</span> <span class="operator">=</span> session.beginTransaction();</span><br><span class="line">    <span class="type">Department</span> <span class="variable">department</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Department</span>();</span><br><span class="line">    department.setDeptName(<span class="string">&quot;设计部&quot;</span>);</span><br><span class="line">    department.setLocation(<span class="string">&quot;杭州&quot;</span>);</span><br><span class="line">    <span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Employee</span>();</span><br><span class="line">    employee.setEmpName(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">    employee.setDepartment(department);</span><br><span class="line">    <span class="type">Employee</span> <span class="variable">employee1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Employee</span>();</span><br><span class="line">    employee1.setEmpName(<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">    employee1.setDepartment(department);</span><br><span class="line">    department.getEmployees().add(employee);</span><br><span class="line">    department.getEmployees().add(employee1);</span><br><span class="line">    session.save(department);</span><br><span class="line">    transaction.commit();</span><br><span class="line">    HibernateUtil.closeSession(session);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多对多关系映射"><a href="#多对多关系映射" class="headerlink" title="多对多关系映射"></a>多对多关系映射</h2><p><strong>存在用户和角色的多对多关系，实体类和映射文件如下</strong></p><p><strong>用户实体</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lhx.orm.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.Setter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;Role&gt; roles = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>角色实体</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lhx.orm.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.Setter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Role</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;User&gt; users = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>用户映射文件</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">hibernate-mapping</span> <span class="keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">&quot;com.lhx.orm.entity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">&quot;User&quot;</span> <span class="attr">table</span>=<span class="string">&quot;t_user&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.Integer&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">&quot;native&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            配置多对多映射</span></span><br><span class="line"><span class="comment">            name：属性名</span></span><br><span class="line"><span class="comment">            table：存放外键字段的表名</span></span><br><span class="line"><span class="comment">            cascade：级联关系</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">&quot;roles&quot;</span> <span class="attr">table</span>=<span class="string">&quot;user_role&quot;</span> <span class="attr">cascade</span>=<span class="string">&quot;all&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- user_role表中与当前类相关的外键字段 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">&quot;user_id&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                class:name属性的数据类型</span></span><br><span class="line"><span class="comment">                column:name属性相关的外键字段</span></span><br><span class="line"><span class="comment">             --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">many-to-many</span> <span class="attr">class</span>=<span class="string">&quot;Role&quot;</span> <span class="attr">column</span>=<span class="string">&quot;role_id&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>角色映射文件</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">hibernate-mapping</span> <span class="keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">&quot;com.lhx.orm.entity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">&quot;Role&quot;</span> <span class="attr">table</span>=<span class="string">&quot;t_role&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.Integer&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">&quot;native&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            配置多对多映射</span></span><br><span class="line"><span class="comment">            name：属性名</span></span><br><span class="line"><span class="comment">            table：存放外键字段的表名</span></span><br><span class="line"><span class="comment">            cascade：级联关系</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">&quot;users&quot;</span> <span class="attr">table</span>=<span class="string">&quot;user_role&quot;</span> <span class="attr">cascade</span>=<span class="string">&quot;all&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- user_role表中与当前类相关的外键字段 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">&quot;role_id&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                class:name属性的数据类型</span></span><br><span class="line"><span class="comment">                column:name属性相关的外键字段</span></span><br><span class="line"><span class="comment">             --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">many-to-many</span> <span class="attr">class</span>=<span class="string">&quot;User&quot;</span> <span class="attr">column</span>=<span class="string">&quot;user_id&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// 添加角色和属性</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveUserAndRole</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">Session</span> <span class="variable">session</span> <span class="operator">=</span> HibernateUtil.getSession();</span><br><span class="line">    <span class="type">Transaction</span> <span class="variable">transaction</span> <span class="operator">=</span> session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="type">User</span> <span class="variable">user1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user1.setName(<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user2.setName(<span class="string">&quot;lisi&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">Role</span> <span class="variable">role1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Role</span>();</span><br><span class="line">    role1.setName(<span class="string">&quot;chaxun&quot;</span>);</span><br><span class="line">    <span class="type">Role</span> <span class="variable">role2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Role</span>();</span><br><span class="line">    role2.setName(<span class="string">&quot;shanchu&quot;</span>);</span><br><span class="line"></span><br><span class="line">    user1.getRoles().add(role1);</span><br><span class="line">    user1.getRoles().add(role2);</span><br><span class="line">    user2.getRoles().add(role1);</span><br><span class="line">    user2.getRoles().add(role2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        session.save(user1);</span><br><span class="line">        session.save(user2);</span><br><span class="line">        transaction.commit();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        transaction.rollback();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        HibernateUtil.closeSession(session);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用注解"><a href="#使用注解" class="headerlink" title="使用注解"></a>使用注解</h2><p>使用注解可代理实体类的Entity.hbm.xml映射文件，常用注解如下：</p><ul><li>@Entity 声明类为持久化类</li><li>@Table 为持久化类指定映射的表名</li><li>@Id 声明属性为表的主键</li><li>@GenerateValue 声明主键的生成策略</li><li>@SequenceGenerator 定义序列产生器</li><li>@Column 声明属性为表中的一列</li><li>@Transient 忽略属性</li><li>@OneToMany 一对多关系映射</li><li>@ManyToOne 多对一关系映射</li><li>@JoinColumn 映射列</li><li>@ManyToMany 多对多关系映射</li><li>@JoinTable 映射表</li><li>@OneToOne 一对一关系映射</li></ul><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lhx.orm.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.Setter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;t_user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue(strategy = GenerationType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="meta">@Column(name = &quot;name&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@ManyToMany(cascade = CascadeType.ALL)</span></span><br><span class="line">    <span class="meta">@JoinTable(name = &quot;user_role&quot;,</span></span><br><span class="line"><span class="meta">            joinColumns = @JoinColumn(name = &quot;user_id&quot;),</span></span><br><span class="line"><span class="meta">            inverseJoinColumns = @JoinColumn(name = &quot;role_id&quot;)</span></span><br><span class="line"><span class="meta">    )</span></span><br><span class="line">    <span class="keyword">private</span> Set&lt;Role&gt; roles = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>hibernate.cfg.xml</code>中引入该实体类</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapping</span> <span class="attr">class</span>=<span class="string">&quot;com.lhx.orm.entity.User&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ORM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hibernate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git入门</title>
      <link href="/2022/08/16/system/git%E5%85%A5%E9%97%A8/"/>
      <url>/2022/08/16/system/git%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 克隆 -b指定分支克隆</span></span><br><span class="line">git <span class="built_in">clone</span> -b branch projectUrl</span><br><span class="line"><span class="comment"># 查看分支</span></span><br><span class="line"><span class="comment"># 不加参数表示查看本地分支，-r查看远程分支 -a查看所有分支</span></span><br><span class="line">git branch</span><br><span class="line"><span class="comment"># 切换分支,-b创建并切换到该分支</span></span><br><span class="line">git checkout branchName</span><br></pre></td></tr></table></figure><h2 id="查看分支来源"><a href="#查看分支来源" class="headerlink" title="查看分支来源"></a>查看分支来源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reflog show branchName</span><br><span class="line">git reflog --<span class="built_in">date</span>=<span class="built_in">local</span> | grep branchName</span><br></pre></td></tr></table></figure><h2 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看全局配置</span></span><br><span class="line">git config --global -l</span><br></pre></td></tr></table></figure><h3 id="配置账号"><a href="#配置账号" class="headerlink" title="配置账号"></a>配置账号</h3><blockquote><p>配置账号以后，每次pull、push或clone时就不用输入账号密码了。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 保存账号密码</span></span><br><span class="line">git config --global credential.helper store</span><br><span class="line"><span class="comment"># 重置账号密码</span></span><br><span class="line">git config --global credential.helper reset</span><br></pre></td></tr></table></figure><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看远程仓库</span></span><br><span class="line">git remote</span><br><span class="line"><span class="comment"># 获取远程仓库地址</span></span><br><span class="line">git remote get-url &lt;name&gt;</span><br><span class="line"><span class="comment"># 添加远程仓库</span></span><br><span class="line">git remote add &lt;name&gt; &lt;url&gt;</span><br><span class="line"><span class="comment"># 提交到远程仓库</span></span><br><span class="line">git push &lt;repository&gt; &lt;refspec&gt; <span class="comment"># git push origin hexo 将hexo分支提交到origin仓库</span></span><br><span class="line"><span class="comment"># 更新远程仓库分支列表</span></span><br><span class="line">git remote update origin -p</span><br></pre></td></tr></table></figure><h2 id="回退版本"><a href="#回退版本" class="headerlink" title="回退版本"></a>回退版本</h2><h3 id="revert"><a href="#revert" class="headerlink" title="revert"></a>revert</h3><p>语法：<code>git revert -n commitId/HEAD~1</code>;</p><p><code>-n</code>表示<code>revert</code>后不提交commit信息，不使用<code>-n</code>的话会弹出编辑器用户编辑提交信息。</p><h3 id="reset"><a href="#reset" class="headerlink" title="reset"></a>reset</h3><p>语法：<code>git reset [--soft | --mixed | --hard] [HEAD]</code></p><p><code>--mixed</code>表示回退<code>commit</code>和<code>index</code>，即执行后源代码保留，但修改的代码没有添加到暂存区，需要执行<code>git add</code>命令将其添加到暂存区；该类型为默认类型，可不显示指定；</p><p><code>--soft</code>表示回退<code>commit</code>，即执行后源代码保留，且修改的代码仍在暂存区；</p><p><code>--hard</code>表示彻底回退，源代码不再保留；</p><p><code>HEAD</code>或<code>HEAD~0</code>表示当前版本；</p><p><code>HEAD^</code>表示回退到上个版本，<code>HEAD^^</code>表示回退到上上个版本，依次类推；</p><p><code>HEAD~1</code>表示回退到上个版本，<code>HEAD~2</code>表示回退到上上个版本，依次类推；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 回退到上个版本</span></span><br><span class="line">git reset --hard HEAD^</span><br><span class="line"><span class="comment"># 回退到上上个版本</span></span><br><span class="line">git reset --hard HEAD~2</span><br><span class="line"><span class="comment"># 回退到指定版本,commitId为commit的版本号，可通过git log查看</span></span><br><span class="line">git reset --hard [commitID]</span><br></pre></td></tr></table></figure><h3 id="revert和reset的区别"><a href="#revert和reset的区别" class="headerlink" title="revert和reset的区别"></a>revert和reset的区别</h3><ul><li>git reset 是回滚到对应的commit-id，相当于是删除了commit-id以后的所有的提交，并且不会产生新的commit-id记录，如果要推送到远程服务器的话，需要强制推送-f</li><li>git revert 是反做撤销其中的commit-id，然后重新生成一个commit-id。本身不会对其他的提交commit-id产生影响，如果要推送到远程服务器的话，就是普通的操作git push就好了</li></ul><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><h2 id="切换分支时当前分支更新的代码会同步到切换的分支"><a href="#切换分支时当前分支更新的代码会同步到切换的分支" class="headerlink" title="切换分支时当前分支更新的代码会同步到切换的分支"></a>切换分支时当前分支更新的代码会同步到切换的分支</h2><p><strong>原因：</strong>当前分支更新的代码没有加入到版本管理中。</p><p><strong>解决方法：</strong>切换分支前先<code>commit</code>一下更新的代码。</p>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastDFS入门</title>
      <link href="/2022/08/10/middleware/FastDFS%E5%85%A5%E9%97%A8/"/>
      <url>/2022/08/10/middleware/FastDFS%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="1-fastdfs简介"><a href="#1-fastdfs简介" class="headerlink" title="1. fastdfs简介"></a>1. fastdfs简介</h1><blockquote><p>​FastDFS是一款开源的分布式文件系统，功能主要包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了文件大容量存储和高性能访问的问题。FastDFS特别适合以文件为载体的在线服务，如图片、视频、文档等等。</p><p>​FastDFS作为一款轻量级分布式文件系统，版本V6.01代码量6.3万行。FastDFS用C语言实现，支持Linux、FreeBSD、MacOS等类UNIX系统。FastDFS类似google FS，属于应用级文件系统，不是通用的文件系统，只能通过专有API访问，目前提供了C和Java SDK，以及PHP扩展SDK。</p><p>​FastDFS为互联网应用量身定做，解决大容量文件存储问题，追求高性能和高扩展性。FastDFS可以看做是基于文件的key value存储系统，key为文件ID，value为文件内容，因此称作分布式文件存储服务更为合适。</p></blockquote><h2 id="1-1-特点"><a href="#1-1-特点" class="headerlink" title="1.1. 特点"></a>1.1. 特点</h2><ul><li>分组存储，简单灵活；</li><li>对等结构，不存在单点；</li><li>文件ID由FastDFS生成，作为文件访问凭证。FastDFS不需要传统的name server或meta server；</li><li>大、中、小文件均可以很好支持，可以存储海量小文件；</li><li>一台storage支持多块磁盘，支持单盘数据恢复；</li><li>提供了nginx扩展模块，可以和nginx无缝衔接；</li><li>支持多线程方式上传和下载文件，支持断点续传；</li><li>存储服务器上可以保存文件附加属性;</li></ul><h2 id="1-2-设计理念"><a href="#1-2-设计理念" class="headerlink" title="1.2. 设计理念"></a>1.2. 设计理念</h2><p>​FastDFS 系统有三个角色：跟踪服务器(Tracker Server)、存储服务器(Storage Server)和客户端(Client)。</p><p>　　<strong>Tracker Server</strong>：跟踪服务器，主要做调度工作，起到均衡的作用；负责管理所有的 storage server和 group，每个 storage 在启动后会连接 Tracker，告知自己所属 group 等信息，并保持周期性心跳。通过Tracker server在文件上传时可以根据一些策略找到Storage server提供文件访问服务。</p><p>　　<strong>Storage Server</strong>：存储服务器，主要提供容量和备份服务；以 group 为单位，每个 group 内可以有多台 storage server，数据互为备份。Storage server没有实现自己的文件系统而是利用操作系统 的文件系统来管理文件。</p><p>　　<strong>Client</strong>：客户端，上传下载数据的服务器，也就是我们自己的项目所部署在的服务器。</p><h2 id="1-3-文件交互过程"><a href="#1-3-文件交互过程" class="headerlink" title="1.3. 文件交互过程"></a>1.3. 文件交互过程</h2><h3 id="1-3-1-上传文件"><a href="#1-3-1-上传文件" class="headerlink" title="1.3.1 上传文件"></a>1.3.1 上传文件</h3><ol><li><p>tracker server收到上传请求后，查询可用的storage server，并返回给client；</p></li><li><p>client直接跟storage server建立连接，进行文件上传；</p></li><li><p>storage server生成文件id返回给client；</p></li></ol><p><img src="/fastdfs%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E8%BF%87%E7%A8%8B.png" alt="fastdfs上传文件过程"></p><h3 id="1-3-2-下载文件"><a href="#1-3-2-下载文件" class="headerlink" title="1.3.2 下载文件"></a>1.3.2 下载文件</h3><ol><li>tracker server收到下载请求后，查询可用的storage server，并返回给client；</li><li>client与storage server建立连接，并附带文件id；</li><li>storage server根据文件id查找文件，并将文件返回给client；</li></ol><p><img src="/fastdfs%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%E8%BF%87%E7%A8%8B.jpg" alt="fastdfs下载文件过程"></p><h2 id="1-4-架构图"><a href="#1-4-架构图" class="headerlink" title="1.4. 架构图"></a>1.4. 架构图</h2><p><img src="/fastdfs%E6%9E%B6%E6%9E%84%E5%9B%BE.png" alt="fastdfs架构图"></p><h2 id="1-5-名词解释"><a href="#1-5-名词解释" class="headerlink" title="1.5. 名词解释"></a>1.5. 名词解释</h2><p><strong>tracker server</strong>：中心服务器，FastDFS server端两大主角之一。tracker server作为FastDFS集群管理中心，管理集群拓扑结构，对storage server文件上传和文件下载起到负载均衡调度作用。使用命令fdfs_monitor可以查看集群状态。</p><p><strong>storage server</strong>：存储服务器，FastDFS server端两大主角之一。文件相关功能都通过storage server来完成，包括文件上传、下载、文件同步等等。</p><p><strong>文件ID</strong>：上传文件时由storage server生成访问该文件的凭证，包括group名称、存储路径顺序号以及包含两级目录的文件名，应用程序（调用方）需要将文件ID保存到数据库等存储介质中。</p><p>​<img src="/fastdfs%E6%96%87%E4%BB%B6id%E8%AF%A6%E8%A7%A3.png" alt="fastdfs文件id详解"></p><p><strong>group</strong>：FastDFS采用了分组存储方式，storage集群由一个或多个组构成，storage集群存储总容量为storage集群中所有组的存储容量之和；一个组由一台或多台storage存储服务器组成，同组内的多台Storage server之间是类似RAID1的互备关系，同组存储服务器上的文件是完全一致的。文件上传、下载、删除等操作可以在组内任意一台Storage server上进行。类似木桶短板效应，一个组的存储容量为该组内存储服务器容量最小的那个。</p><p>​</p><h1 id="2-fastdfs单机环境搭建"><a href="#2-fastdfs单机环境搭建" class="headerlink" title="2. fastdfs单机环境搭建"></a>2. fastdfs单机环境搭建</h1><h2 id="2-1-说明"><a href="#2-1-说明" class="headerlink" title="2.1. 说明"></a>2.1. 说明</h2><p>若安装过程中提示没有权限，可切换到root用户进行安装。</p><p>单机环境下，服务器同时担任tracker角色和storage角色，需要安装的应用及其对应的说明如下：</p><ul><li><p><strong>libfastcommon</strong>：fastdfs依赖的函数库；</p><blockquote><p>c common functions library extracted from my open source project FastDFS. this library is very simple and stable. functions including: string, logger, chain, hash, socket, ini file reader, base64 encode &#x2F; decode, url encode &#x2F; decode, fast timer, skiplist, object pool etc. detail info please see the c header files.</p></blockquote></li><li><p><strong>libserverframe</strong>：从FastDFS继承过来的网络服务框架库，FastDFS6.0.9版本及后续版本后需要安装这个。</p></li><li><p><strong>fastdfs</strong>：分布式文件系统；</p></li><li><p><strong>fastdfs-nginx-module</strong>：nginx的一个扩展模块，用来解决<strong>storage cluster同组内文件异步复制带来延迟导致文件访问不到</strong>问题，该模块需要与nginx配合使用；</p></li><li><p><strong>nginx</strong>：负载均衡服务器，在storage server上与fastdfs-nginx-module配合使用；在tracker server上只是将请求转发到storage server；</p></li></ul><p><strong><font color="red">注意：fastdfs-nginx-module主要是解决storage cluster集群的问题，若集群环境下，tracker cluster中的服务器无需安装。</font></strong></p><h2 id="2-2-版本"><a href="#2-2-版本" class="headerlink" title="2.2. 版本"></a>2.2. 版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">linux:centos7</span><br><span class="line">libfastcommon:1.0.62</span><br><span class="line">libserverframe：1.1.21</span><br><span class="line">fastdfs:6.09</span><br><span class="line">fastdfs-nginx-module:1.23</span><br><span class="line">nginx:1.22.0</span><br></pre></td></tr></table></figure><h2 id="2-3-资源下载"><a href="#2-3-资源下载" class="headerlink" title="2.3. 资源下载"></a>2.3. 资源下载</h2><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># libfastcommon下载地址</span><br><span class="line">https://github.com/happyfish100/libfastcommon/tags</span><br><span class="line"># libserverframe下载地址</span><br><span class="line">https://github.com/happyfish100/libserverframe/tags</span><br><span class="line"># fastdfs下载地址</span><br><span class="line">https://github.com/happyfish100/fastdfs/tags</span><br><span class="line"># fastdfs-nginx-module下载地址</span><br><span class="line">https://github.com/happyfish100/fastdfs-nginx-module/tags</span><br><span class="line"># nginx下载地址</span><br><span class="line">http://nginx.org/</span><br></pre></td></tr></table></figure><h2 id="2-4-编译环境"><a href="#2-4-编译环境" class="headerlink" title="2.4. 编译环境"></a>2.4. 编译环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc gcc-c++ kernel-devel make automake autoconf libtool pcre pcre-devel zlib zlib-devel openssl-devel wget vim -y</span><br></pre></td></tr></table></figure><h2 id="2-5-安装"><a href="#2-5-安装" class="headerlink" title="2.5. 安装"></a>2.5. 安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装libfastcommon</span></span><br><span class="line">tar -zxvf libfastcommon-1.0.62.tar.gz</span><br><span class="line"><span class="built_in">cd</span> libfastcommon-1.0.62</span><br><span class="line">./make.sh &amp;&amp; ./make.sh install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装libserverframe</span></span><br><span class="line">tar -zxvf libserverframe-1.1.21.tar.gz</span><br><span class="line"><span class="built_in">cd</span> libserverframe-1.1.21</span><br><span class="line">./make.sh &amp;&amp; ./make.sh install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装fastdfs</span></span><br><span class="line">tar -zxvf fastdfs-6.09.tar.gz</span><br><span class="line"><span class="built_in">cd</span> fastdfs-6.09</span><br><span class="line">./make.sh &amp;&amp; ./make.sh install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装fastdfs-nginx-module（解压即可，后续安装nginx时会用到）</span></span><br><span class="line">tar -zxvf fastdfs-nginx-module-1.23.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装nginx</span></span><br><span class="line">tar -zxvf nginx-1.22.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> nginx-1.22.0</span><br><span class="line"><span class="comment"># 添加配置（集群环境下在tracker server上安装时无需加--add-module参数）</span></span><br><span class="line"><span class="comment"># --add-module后面的路径换成自己安装fastdfs-nginx-module下的src目录</span></span><br><span class="line"><span class="comment"># nginx会默认安装到/usr/local/nginx目录</span></span><br><span class="line">./configure --add-module=/usr/local/fastdfs/fastdfs-nginx-module-1.23/src/</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h2 id="2-6-编辑配置文件"><a href="#2-6-编辑配置文件" class="headerlink" title="2.6. 编辑配置文件"></a>2.6. 编辑配置文件</h2><h3 id="2-6-1-说明"><a href="#2-6-1-说明" class="headerlink" title="2.6.1. 说明"></a>2.6.1. 说明</h3><p>上述资源安装完毕后，会在<code>/etc/fdfs/</code>目录下生成相应的配置文件，各文件含义如下：</p><ul><li><p><strong>client.conf</strong>：客户端配置文件，在服务器上使用该文件可直接上传资源，无需借助客户端（java、C等）工具。</p></li><li><p><strong>tracker.conf</strong>：tracker server相关的配置文件；</p></li><li><p><strong>storage.conf</strong>：storage server相关的配置文件；</p></li><li><p><strong>storage_ids.conf</strong>：storage server的id配置文件，可将storage server的group name和ip映射为id；该文件默认不生效，需在tracker.conf中指定<code>use_storage_id</code>为<code>true</code>，且<code>storage_ids_filename</code>为该文件的name才可使用；</p></li></ul><p>除了上述配置文件外，<code>storage server</code>还需要在<code>/etc/fdfs/</code>目录下手动添加以下几个配置文件：</p><ul><li><p><strong>http.conf</strong>：http配置文件，从<code>fastdfs</code>安装目录下的<code>conf/</code>中复制过来即可，后续开启[防盗链](#6.2. 防盗链)时，需要配置；</p></li><li><p><strong>mime.types</strong>：http配置文件，从<code>fastdfs</code>安装目录下的<code>conf/</code>中复制过来即可，后续无需配置；</p></li><li><p><strong>mod_fastdfs.conf</strong>：<code>fastdfs-nginx-module</code>配置文件，从<code>fastdfs-nginx-module</code>安装目录下的<code>src/</code>中复制过来即可；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加storage server需要使用的配置文件</span></span><br><span class="line"><span class="comment"># 注意文件路径替换成自己的</span></span><br><span class="line"><span class="built_in">cp</span> /usr/local/fastdfs/fastdfs-6.09/conf/http.conf /etc/fdfs/</span><br><span class="line"><span class="built_in">cp</span> /usr/local/fastdfs/fastdfs-6.09/conf/mime.types /etc/fdfs/</span><br><span class="line"><span class="built_in">cp</span> /usr/local/fastdfs/fastdfs-nginx-module-1.23/src/mod_fastdfs.conf /etc/fdfs/</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-6-2-配置client-conf"><a href="#2-6-2-配置client-conf" class="headerlink" title="2.6.2. 配置client.conf"></a>2.6.2. 配置client.conf</h3><p><strong><font color="red">非必须，直接在服务器上使用命令上传文件时再配置即可。</font></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主要配置以下几项</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 存储日志的目录，默认为/home/yuqing/fastdfs,该目录需要手动创建</span></span><br><span class="line">base_path = /home/yuqing/fastdfs</span><br><span class="line"><span class="comment"># tracker server的地址，tracker cluster时可指定多个</span></span><br><span class="line">tracker_server = 192.168.5.112:22122</span><br></pre></td></tr></table></figure><h3 id="2-6-3-配置tracker-conf"><a href="#2-6-3-配置tracker-conf" class="headerlink" title="2.6.3. 配置tracker.conf"></a>2.6.3. 配置tracker.conf</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主要配置以下几项</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否禁用配置文件，默认为false</span></span><br><span class="line">disabled = <span class="literal">false</span></span><br><span class="line"><span class="comment"># tracker server端口号，默认为22122</span></span><br><span class="line">port = 22122</span><br><span class="line"><span class="comment"># 存储数据和日志的目录，默认为/home/yuqing/fastdfs,该目录需要手动创建</span></span><br><span class="line">base_path = /home/yuqing/fastdfs</span><br><span class="line"><span class="comment"># http服务端口号，默认为8080</span></span><br><span class="line">http.server_port = 8080</span><br></pre></td></tr></table></figure><h3 id="2-6-4-配置storage-conf"><a href="#2-6-4-配置storage-conf" class="headerlink" title="2.6.4. 配置storage.conf"></a>2.6.4. 配置storage.conf</h3><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># storage详细配置列表（配置文件中也有详细的注释）</span><br><span class="line">https://github.com/happyfish100/fastdfs/wiki/Configuration#storage</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主要配置以下几项</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否禁用配置文件，默认为false</span></span><br><span class="line">disabled = <span class="literal">false</span></span><br><span class="line"><span class="comment"># 本机storage server所在的组</span></span><br><span class="line">group_name = group1</span><br><span class="line"><span class="comment"># storage server端口号，默认为23000</span></span><br><span class="line">port = 23000</span><br><span class="line"><span class="comment"># 存储数据和日志的目录，默认为/home/yuqing/fastdfs,该目录需要手动创建</span></span><br><span class="line">base_path = /home/yuqing/fastdfs</span><br><span class="line"><span class="comment"># 存储路径个数，默认为1</span></span><br><span class="line">store_path_count = 1</span><br><span class="line"><span class="comment"># 存储路径，根据store_path_count的个数可指定多个，如store_path1、store_path2...</span></span><br><span class="line">store_path0 = /home/yuqing/fastdfs</span><br><span class="line"><span class="comment"># tracker server的地址，tracker cluster时可指定多个</span></span><br><span class="line">tracker_server = 192.168.5.112:22122</span><br><span class="line"><span class="comment"># http服务端口号，默认为8888</span></span><br><span class="line">http.server_port = 8888</span><br></pre></td></tr></table></figure><h3 id="2-6-5-配置mod-fastdfs-conf"><a href="#2-6-5-配置mod-fastdfs-conf" class="headerlink" title="2.6.5. 配置mod_fastdfs.conf"></a>2.6.5. 配置mod_fastdfs.conf</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主要配置以下几项</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 存储日志文件的目录，默认为/tmp</span></span><br><span class="line">base_path=/tmp</span><br><span class="line"><span class="comment"># tracker server的地址，tracker cluster时可指定多个</span></span><br><span class="line">tracker_server=192.168.5.112:22122</span><br><span class="line"><span class="comment"># storage server端口号，默认为23000</span></span><br><span class="line">storage_server_port=23000</span><br><span class="line"><span class="comment"># 本机storage server所在的组</span></span><br><span class="line">group_name=group1</span><br><span class="line"><span class="comment"># 返回的文件id中是否含有group name，默认为false，这里改成true</span></span><br><span class="line">url_have_group_name = <span class="literal">true</span></span><br><span class="line"><span class="comment"># 存储路径个数，默认为1，需要与本机storage.conf中的配置一致</span></span><br><span class="line">store_path_count=1</span><br><span class="line"><span class="comment"># 存储路径，根据store_path_count的个数可指定多个，如store_path1、store_path2...</span></span><br><span class="line"><span class="comment"># 需要与本机storage.conf中的配置一致</span></span><br><span class="line">store_path0=/home/yuqing/fastdfs</span><br></pre></td></tr></table></figure><h3 id="2-6-6-配置nginx-conf"><a href="#2-6-6-配置nginx-conf" class="headerlink" title="2.6.6. 配置nginx.conf"></a>2.6.6. 配置nginx.conf</h3><p><strong>注意：由于<code>storage server</code>上配置了<code>fastdfs-nginx-module</code>，所以需要将访问资源的请求<code>/group[0-9]</code>转发到<code>ngx_fastdfs_module</code>处理；而<code>tracker server</code>只需将访问资源的请求转发到<code>storage server</code>即可；</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑nginx.conf</span></span><br><span class="line">vi /usr/local/nginx/conf/nginx.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># storage server上的nginx配置</span></span><br><span class="line"><span class="comment"># 主要调整listen和location</span></span><br><span class="line"><span class="comment"># 注意，这里的8888端口号要与/etc/fdfs/storage.conf中http.server_port的配置保持一致</span></span><br><span class="line">http &#123;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       8888;    <span class="comment">## 该端口为storage.conf中的http.server_port相同</span></span><br><span class="line">        server_name  localhost;</span><br><span class="line">        location ~/group[0-9]/ &#123;</span><br><span class="line">            ngx_fastdfs_module;</span><br><span class="line">        &#125;</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">        root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># tracker server上的nginx配置</span></span><br><span class="line">http &#123;</span><br><span class="line"></span><br><span class="line">upstream fastdfs_group_server &#123;</span><br><span class="line">        server 192.168.5.110:8888;</span><br><span class="line">        server 192.168.5.111:8888;</span><br><span class="line">&#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;    </span><br><span class="line">        server_name  localhost;</span><br><span class="line">        location ~/group[0-9]/ &#123;</span><br><span class="line">            proxy_pass http://fastdfs_group_server;</span><br><span class="line">        &#125;</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">        root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-7-测试搭建结果"><a href="#2-7-测试搭建结果" class="headerlink" title="2.7. 测试搭建结果"></a>2.7. 测试搭建结果</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动tracker、storage和nginx</span></span><br><span class="line">fdfs_trackerd /etc/fdfs/tracker.conf start</span><br><span class="line">fdfs_storaged /etc/fdfs/storage.conf start</span><br><span class="line">/usr/local/nginx/sbin/nginx</span><br><span class="line"><span class="comment"># 查看fdfs集群状态</span></span><br><span class="line">fdfs_monitor /etc/fdfs/storage.conf</span><br><span class="line"><span class="comment"># 上传文件</span></span><br><span class="line">fdfs_upload_file /etc/fdfs/storage.conf /usr/local/1.jpg</span><br><span class="line"><span class="comment"># 返回如下文件id</span></span><br><span class="line">group1/M00/00/00/wKgFbmJeWImAVvMQAADX1NYCr6c251.jpg</span><br><span class="line"><span class="comment"># 关闭防火墙（或者开放端口tracker server和storage server占用的端口）</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line"><span class="comment"># 通过浏览器获取上传的资源</span></span><br><span class="line">http://192.168.5.112:8888/group1/M00/00/00/wKgFbmJeWImAVvMQAADX1NYCr6c251.jpg</span><br></pre></td></tr></table></figure><h1 id="3-fastdfs集群环境搭建"><a href="#3-fastdfs集群环境搭建" class="headerlink" title="3. fastdfs集群环境搭建"></a>3. fastdfs集群环境搭建</h1><h2 id="3-1-说明"><a href="#3-1-说明" class="headerlink" title="3.1. 说明"></a>3.1. 说明</h2><p>​使用6台机器搭建集群，6台机器分别为node1、node2、node3、node4、node5、node6，其中node1和node2为tracker server，其他4台机器都为storage server，node3和node4为group1，node5和node6为group2。</p><p>​6台机器分别安装好<strong>单机部署</strong>所述资源（<code>tracker server</code>不用安装<code>fastdfs-nginx-module</code>）；</p><p><img src="/fastdfs%E9%9B%86%E7%BE%A4%E6%9E%B6%E6%9E%84v2.png" alt="fastdfs搭建集群架构"></p><h2 id="3-2-tracker-conf配置"><a href="#3-2-tracker-conf配置" class="headerlink" title="3.2. tracker.conf配置"></a>3.2. tracker.conf配置</h2><p>两台<code>tracker server</code>上的<code>/etc/fdfs/tracker.conf</code>配置同<strong>单机部署</strong>，示例见下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">disabled = <span class="literal">false</span></span><br><span class="line">port = 22122</span><br><span class="line">base_path = /home/yuqing/fastdfs</span><br><span class="line">http.server_port = 8080</span><br></pre></td></tr></table></figure><h2 id="3-3-storage-conf配置"><a href="#3-3-storage-conf配置" class="headerlink" title="3.3. storage.conf配置"></a>3.3. storage.conf配置</h2><p>四台<code>storage server</code>上的<code>/etc/fdfs/storage.conf</code>与单机有两处不同：</p><ul><li><code>group_name</code>需要特殊指定，即两个节点指定为<code>group1</code>，另外两个节点指定为<code>grorup2</code>;</li><li><code>tracker_server</code>需要指定多个（如果存在多个的话）；</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">disabled = <span class="literal">false</span></span><br><span class="line"><span class="comment"># node3和node4指定为group1，node5和node6指定为group2</span></span><br><span class="line">group_name = group1</span><br><span class="line">port = 23000</span><br><span class="line">base_path = /home/yuqing/fastdfs</span><br><span class="line">store_path_count = 1</span><br><span class="line">store_path0 = /home/yuqing/fastdfs</span><br><span class="line"><span class="comment"># 存在多个tracker server时需全部配置</span></span><br><span class="line">tracker_server = node1:22122</span><br><span class="line">tracker_server = node2:22122</span><br><span class="line">http.server_port = 8888</span><br></pre></td></tr></table></figure><h2 id="3-4-mod-fastdfs-conf配置"><a href="#3-4-mod-fastdfs-conf配置" class="headerlink" title="3.4. mod_fastdfs.conf配置"></a>3.4. mod_fastdfs.conf配置</h2><p>四台<code>storage server</code>上的<code>/etc/fdfs/mod_fastdfs.conf</code>与<code>/etc/fdfs/storage.conf</code>类似，同样是<code>group_name</code>和<code>tracker_server</code>的配置与<strong>单机</strong>稍有不同：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">base_path=/tmp</span><br><span class="line"><span class="comment"># 存在多个tracker server时需全部配置</span></span><br><span class="line">tracker_server = node1:22122</span><br><span class="line">tracker_server = node2:22122</span><br><span class="line">storage_server_port=23000</span><br><span class="line"><span class="comment"># node3和node4指定为group1，node5和node6指定为group2</span></span><br><span class="line">group_name=group1</span><br><span class="line">url_have_group_name = <span class="literal">true</span></span><br><span class="line">store_path_count=1</span><br><span class="line">store_path0=/home/yuqing/fastdfs</span><br></pre></td></tr></table></figure><h2 id="3-5-测试搭建结果"><a href="#3-5-测试搭建结果" class="headerlink" title="3.5. 测试搭建结果"></a>3.5. 测试搭建结果</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动两台tracker server</span></span><br><span class="line">fdfs_trackerd /etc/fdfs/tracker.conf start</span><br><span class="line"><span class="comment"># 启动四台storage server</span></span><br><span class="line">fdfs_storaged /etc/fdfs/storage.conf start</span><br><span class="line"><span class="comment"># 启动nginx</span></span><br><span class="line">/usr/local/nginx/sbin/nginx -s reload</span><br><span class="line"><span class="comment"># 查看集群状态</span></span><br><span class="line">fdfs_monitor /etc/fdfs/storage.conf</span><br><span class="line"><span class="comment"># 在node1上上传11.jpg</span></span><br><span class="line">fdfs_upload_file /etc/fdfs/client.conf /usr/local/11.jpg</span><br><span class="line"><span class="comment"># 返回11.jpg文件id</span></span><br><span class="line">group2/M00/00/00/wKgFbmJfdTyAUnbkAAFLdk23Zbg817.jpg</span><br><span class="line"><span class="comment"># 在node2上上传22.jpg</span></span><br><span class="line">fdfs_upload_file /etc/fdfs/client.conf /usr/local/22.jpg</span><br><span class="line"><span class="comment"># 返回22.jpg文件id</span></span><br><span class="line">group1/M00/00/00/wKgFb2JfdVGASCFEAAAz0tyYoGo988.jpg</span><br><span class="line"><span class="comment"># 浏览器访问上传的资源</span></span><br><span class="line">http://192.168.5.11:8888/group1/M00/00/00/wKgFb2JfdVGASCFEAAAz0tyYoGo988.jpg</span><br><span class="line">http://192.168.5.11:8888/group2/M00/00/00/wKgFbmJfdTyAUnbkAAFLdk23Zbg817.jpg</span><br></pre></td></tr></table></figure><p><img src="/fdfs%E9%9B%86%E7%BE%A4%E6%B5%8B%E8%AF%95%E5%9B%BE%E7%89%871.jpg" alt="fdfs集群测试图片1"></p><p><img src="/fdfs%E9%9B%86%E7%BE%A4%E6%B5%8B%E8%AF%95%E5%9B%BE%E7%89%87%E4%BA%8C.jpg" alt="fdfs集群测试图片2"></p><h1 id="4-fastdfs服务端常用命令"><a href="#4-fastdfs服务端常用命令" class="headerlink" title="4. fastdfs服务端常用命令"></a>4. fastdfs服务端常用命令</h1><p>fastdfs安装完成后，所有的命令都放在<code>/usr/bin/</code>目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /usr/bin/ -name fdfs*</span><br></pre></td></tr></table></figure><p>常用命令有：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tracker server相关</span></span><br><span class="line">fdfs_trackerd /etc/fdfs/tracker.conf start|stop|restart|status</span><br><span class="line"><span class="comment"># storage server相关</span></span><br><span class="line">fdfs_storaged /etc/fdfs/storage.conf start|stop|restart|status</span><br><span class="line"><span class="comment"># 在服务器上上传文件</span></span><br><span class="line">fdfs_upload_file /etc/fdfs/client.conf filepath</span><br><span class="line"><span class="comment"># 在服务器上查看文件信息</span></span><br><span class="line">fdfs_file_info  /etc/fdfs/client.conf file_id</span><br><span class="line"><span class="comment"># 在服务器上下载文件</span></span><br><span class="line">fdfs_download_file /etc/fdfs/client.conf file_id local_filename</span><br><span class="line"><span class="comment"># 在服务器上删除文件</span></span><br><span class="line">fdfs_delete_file /etc/fdfs/client.conf file_id</span><br><span class="line"><span class="comment"># 查看集群状态</span></span><br><span class="line">fdfs_monitor /etc/fdfs/storage.conf</span><br><span class="line"><span class="comment"># 删除group中的节点（被删除的节点需要先停机，删除后重启tracker server即可看到最新的集群状态）</span></span><br><span class="line">fdfs_monitor /etc/fdfs/storage.conf delete group3 192.168.5.121</span><br></pre></td></tr></table></figure><h1 id="5-java客户端集成fastdfs"><a href="#5-java客户端集成fastdfs" class="headerlink" title="5. java客户端集成fastdfs"></a>5. java客户端集成fastdfs</h1><h2 id="5-1-构建jar包"><a href="#5-1-构建jar包" class="headerlink" title="5.1. 构建jar包"></a>5.1. 构建jar包</h2><p>​由于maven中央仓库找不到官方提供的maven坐标，所以需要根据源码打包并放到本地maven仓库。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 源码下载地址</span><br><span class="line">https://github.com/happyfish100/fastdfs-client-java</span><br></pre></td></tr></table></figure><p>​将源码解压到本地后，在代码根目录下打开<code>cmd</code>命令窗口，执行<code>mvn clean install</code>后，jar包即导入本地仓库，之后将该jar包引入到项目中。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.csource<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastdfs-client-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.29-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-2-添加配置文件"><a href="#5-2-添加配置文件" class="headerlink" title="5.2. 添加配置文件"></a>5.2. 添加配置文件</h2><p>​复制源代码中<code>fastdfs-client-java-master/src/main/resources/fdfs_client.conf.sample</code>文件为<code>fdfs_client.conf</code>，放在项目的<code>resource</code>目录下，并修改<code>tracker_server</code>配置。</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">connect_timeout</span> = <span class="string">5</span></span><br><span class="line"><span class="attr">network_timeout</span> = <span class="string">30</span></span><br><span class="line"><span class="attr">charset</span> = <span class="string">UTF-8</span></span><br><span class="line"><span class="attr">http.tracker_http_port</span> = <span class="string">8080</span></span><br><span class="line"><span class="attr">http.anti_steal_token</span> = <span class="string">true</span></span><br><span class="line"><span class="attr">http.secret_key</span> = <span class="string">1234567</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tracker_server</span> = <span class="string">xxx:22122</span></span><br><span class="line"><span class="attr">tracker_server</span> = <span class="string">xxx:22122</span></span><br><span class="line"></span><br><span class="line"><span class="attr">connection_pool.enabled</span> = <span class="string">true</span></span><br><span class="line"><span class="attr">connection_pool.max_count_per_entry</span> = <span class="string">500</span></span><br><span class="line"><span class="attr">connection_pool.max_idle_time</span> = <span class="string">3600</span></span><br><span class="line"><span class="attr">connection_pool.max_wait_time_in_ms</span> = <span class="string">1000</span></span><br></pre></td></tr></table></figure><h2 id="5-3-添加工具类"><a href="#5-3-添加工具类" class="headerlink" title="5.3. 添加工具类"></a>5.3. 添加工具类</h2><p>fastdfs客户端主要通过<code>StorageClient</code>来操作文件，所以添加一个工具类，用来获取该对象。</p><p><code>StorageClient</code>和<code>StorageClient1</code>逻辑一致，区别为<code>StorageClient</code>将<code>group name</code>和<code>file path</code>分开处理，而<code>StorageClient1</code>将这两个参数统一处理；</p><p><strong>注意：fastdfs java client 的几个主要类都不是线程安全的，每次使用前需要新建一个client。</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.csource.fastdfs.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FastDFSUtil</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        ClientGlobal.init(<span class="string">&quot;fdfs_client.conf&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> StorageClient <span class="title function_">getStorageClient</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// return new StorageClient1();</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">StorageClient</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-4-上传文件"><a href="#5-4-上传文件" class="headerlink" title="5.4. 上传文件"></a>5.4. 上传文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.lhx.fastdfs.util.FastDFSUtil;</span><br><span class="line"><span class="keyword">import</span> org.csource.fastdfs.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UploadFile</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">StorageClient</span> <span class="variable">storageClient</span> <span class="operator">=</span> FastDFSUtil.getStorageClient();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 返回group name和新创建的file name</span></span><br><span class="line">        String[] fileInfos = storageClient.upload_file(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\1.jpg&quot;</span>,</span><br><span class="line">                <span class="string">&quot;jpg&quot;</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String fileInfo : fileInfos) &#123;</span><br><span class="line">            System.out.println(fileInfo);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fileInfos = storageClient.upload_file(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\2.jpg&quot;</span>,</span><br><span class="line">                <span class="string">&quot;jpg&quot;</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String fileInfo : fileInfos) &#123;</span><br><span class="line">            System.out.println(fileInfo);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6.jpg" alt="上传文件"></p><h2 id="5-5-下载文件"><a href="#5-5-下载文件" class="headerlink" title="5.5. 下载文件"></a>5.5. 下载文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.lhx.fastdfs.util.FastDFSUtil;</span><br><span class="line"><span class="keyword">import</span> org.csource.fastdfs.StorageClient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DownLoadFile</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">StorageClient</span> <span class="variable">storageClient</span> <span class="operator">=</span> FastDFSUtil.getStorageClient();</span><br><span class="line">        <span class="comment">// 这里的group_name和remote_filename为上传文件时方法的返回值</span></span><br><span class="line">        storageClient.download_file(<span class="string">&quot;group1&quot;</span>,</span><br><span class="line">                <span class="string">&quot;M00/00/00/wKgFb2Jfs_qALeDaAABiS2pA_yI273.jpg&quot;</span>,</span><br><span class="line">                <span class="string">&quot;C:\\Users\\Administrator\\Desktop\\111.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">        storageClient.download_file(<span class="string">&quot;group1&quot;</span>,</span><br><span class="line">                <span class="string">&quot;M00/00/00/wKgFb2Jfs_qAK7XhAAAtcV-A8_g440.jpg&quot;</span>,</span><br><span class="line">                <span class="string">&quot;C:\\Users\\Administrator\\Desktop\\222.jpg&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-6-删除文件"><a href="#5-6-删除文件" class="headerlink" title="5.6. 删除文件"></a>5.6. 删除文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.lhx.fastdfs.util.FastDFSUtil;</span><br><span class="line"><span class="keyword">import</span> org.csource.fastdfs.StorageClient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeleteFile</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">StorageClient</span> <span class="variable">storageClient</span> <span class="operator">=</span> FastDFSUtil.getStorageClient();</span><br><span class="line">        <span class="comment">// 这里的group_name和remote_filename为上传文件时方法的返回值</span></span><br><span class="line">        storageClient.delete_file(<span class="string">&quot;group1&quot;</span>, </span><br><span class="line">                <span class="string">&quot;M00/00/00/wKgFb2Jfs_qALeDaAABiS2pA_yI273.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-http访问资源及防盗链"><a href="#6-http访问资源及防盗链" class="headerlink" title="6. http访问资源及防盗链"></a>6. http访问资源及防盗链</h1><h2 id="6-1-浏览器直接请求资源"><a href="#6-1-浏览器直接请求资源" class="headerlink" title="6.1 浏览器直接请求资源"></a>6.1 浏览器直接请求资源</h2><p>fastdfs推荐使用http请求的方式直接下载资源，方式为：<code>http://storageServerIp:httpServerPort</code>+<code>fileId</code>，请求路径中各字段的含义如下：</p><ul><li><strong>storageServerIP</strong>：storage server的ip地址；</li><li><strong>httpServerPort</strong>：storage server开放的http端口号，在<code>/etc/fdfs/storage.conf</code>中的<code>http.server_port</code>上配置；</li><li><strong>fileId</strong>：文件id，上传文件时由storage server生成；</li></ul><p>通过这种方式，在得知storage server ip和端口信息，以及文件id的时候，可随时获取该资源，显然这种方式不太安全，可使用防盗链的方式解决。</p><h2 id="6-2-防盗链"><a href="#6-2-防盗链" class="headerlink" title="6.2. 防盗链"></a>6.2. 防盗链</h2><p><code>fastdfs-nginx-module</code>提供了<code>token</code>方式的防盗链（默认是关闭的），在请求的url后跟上<code>token</code>和<code>ts</code>两个参数即可：</p><ul><li><strong>ts</strong>：生成token的时间，单位为秒（unix时间戳）；</li><li><strong>token</strong>：32位的token字符串（md5签名）；</li></ul><h3 id="6-2-1-服务端开启防盗链"><a href="#6-2-1-服务端开启防盗链" class="headerlink" title="6.2.1. 服务端开启防盗链"></a>6.2.1. 服务端开启防盗链</h3><p><strong><font color="red">注意：集群中各节点的时间一定要一致，否则使用防盗链时，可能会出现token失效时间不一致的情况！！！</font></strong></p><p>修改storage server上<code>/etc/fdfs/http.conf</code>配置，并重启<code>nginx</code>，示例配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># HTTP default content type</span></span><br><span class="line">http.default_content_type = application/octet-stream</span><br><span class="line"></span><br><span class="line"><span class="comment"># MIME types mapping filename</span></span><br><span class="line"><span class="comment"># MIME types file format: MIME_type  extensions</span></span><br><span class="line"><span class="comment"># such as:  image/jpegjpeg jpg jpe</span></span><br><span class="line"><span class="comment"># you can use apache&#x27;s MIME file: mime.types</span></span><br><span class="line">http.mime_types_filename = mime.types</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启token防盗链</span></span><br><span class="line">http.anti_steal.check_token = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># token失效时间，单位为秒</span></span><br><span class="line">http.anti_steal.token_ttl = 120</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成token的私有key，与客户端配置文件中保持一致</span></span><br><span class="line">http.anti_steal.secret_key = FastDFS1234567890</span><br><span class="line"></span><br><span class="line"><span class="comment"># token失效时展示的图片</span></span><br><span class="line">http.anti_steal.token_check_fail = /home/yuqing/fastdfs/conf/anti-steal.jpg</span><br><span class="line">http.multi_range.enabed = <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="6-2-2-客户端开启防盗链"><a href="#6-2-2-客户端开启防盗链" class="headerlink" title="6.2.2. 客户端开启防盗链"></a>6.2.2. 客户端开启防盗链</h3><p>java客户端中修改<code>fdfs_client.conf</code>配置，示例如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">connect_timeout = 5</span><br><span class="line">network_timeout = 30</span><br><span class="line">charset = UTF-8</span><br><span class="line">http.tracker_http_port = 8080</span><br><span class="line"><span class="comment"># 开启防盗链</span></span><br><span class="line">http.anti_steal_token = <span class="literal">true</span></span><br><span class="line"><span class="comment"># 生成token的私有key，与服务端保持一致</span></span><br><span class="line">http.secret_key = FastDFS1234567890</span><br><span class="line"></span><br><span class="line">tracker_server = 192.168.5.112:22122</span><br><span class="line"></span><br><span class="line">connection_pool.enabled = <span class="literal">true</span></span><br><span class="line">connection_pool.max_count_per_entry = 500</span><br><span class="line">connection_pool.max_idle_time = 3600</span><br><span class="line">connection_pool.max_wait_time_in_ms = 1000</span><br></pre></td></tr></table></figure><h3 id="6-2-3-生成token"><a href="#6-2-3-生成token" class="headerlink" title="6.2.3. 生成token"></a>6.2.3. 生成token</h3><p>使用客户端SDK自带的方法生成token</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lhx.fastdfs;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.csource.common.MyException;</span><br><span class="line"><span class="keyword">import</span> org.csource.fastdfs.ProtoCommon;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AntiSteal</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> UnsupportedEncodingException, NoSuchAlgorithmException, MyException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">remoteFileName</span> <span class="operator">=</span> <span class="string">&quot;M00/00/00/wKgFbmJlCe2AFIY2ABTNkfy_PF0798.mp4&quot;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">ts</span> <span class="operator">=</span> (<span class="type">int</span>)(System.currentTimeMillis() / <span class="number">1000</span>);</span><br><span class="line">        System.out.println(ts);</span><br><span class="line">        <span class="type">String</span> <span class="variable">secretKey</span> <span class="operator">=</span> <span class="string">&quot;FastDFS1234567890&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> ProtoCommon.getToken(remoteFileName, ts, secretKey);</span><br><span class="line">        System.out.println(token);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-2-4-测试防盗链效果"><a href="#6-2-4-测试防盗链效果" class="headerlink" title="6.2.4. 测试防盗链效果"></a>6.2.4. 测试防盗链效果</h3><p>上传一个测试文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先上传一个图片素材到storage server</span></span><br><span class="line">fdfs_upload_file /etc/fdfs/client.conf /usr/local/11.jpg</span><br><span class="line"><span class="comment"># 得到文件id</span></span><br><span class="line">group1/M00/00/00/wKgFb2JlB6OAQzViAAFLdk23Zbg767.jpg </span><br></pre></td></tr></table></figure><p>直接在浏览器访问上传的文件，提示没有权限：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.5.112/group1/M00/00/00/wKgFb2JlB6OAQzViAAFLdk23Zbg767.jpg</span><br></pre></td></tr></table></figure><p><img src="/%E6%89%BE%E4%B8%8D%E5%88%B0%E8%B5%84%E6%BA%90.jpg" alt="找不到资源"></p><p>生成token后再访问：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.5.112/group1/M00/00/00/wKgFb2JlB6OAQzViAAFLdk23Zbg767.jpg?token=d25ae21f9a18d8831b0639ea3a488ed8&amp;ts=1650791311</span><br></pre></td></tr></table></figure><p><img src="/%E4%BD%BF%E7%94%A8%E9%98%B2%E7%9B%97%E9%93%BE.jpg" alt="使用防盗链"></p><p>token过期后再访问：</p><p><img src="/token%E8%BF%87%E6%97%B6.jpg" alt="token过时"></p><h1 id="7-fastdfs集群扩容"><a href="#7-fastdfs集群扩容" class="headerlink" title="7. fastdfs集群扩容"></a>7. fastdfs集群扩容</h1><h2 id="7-1-横向扩容"><a href="#7-1-横向扩容" class="headerlink" title="7.1. 横向扩容"></a>7.1. 横向扩容</h2><p>​横向扩容指增加<code>storage cluster</code>中group的数量，例如现有集群架构为2台tracker server组成tracker cluster，4台storage server组成storage cluster，且两两分为group1和group2，现在要对集群进行横向扩容，即storage cluster新增加由两台storage server组成的group3，则需要以下几个步骤：</p><ul><li>配置好两台新增storage server的单机环境，启动storage server即可；</li><li>修改所有tracker server上nginx的负载配置，把新增的storage server地址加上去，并重启nginx；</li></ul><p>​<strong>综上，横向扩容的方法在只用重启tracker server上的nginx，鉴于生产环境架构为tracker cluster，所以该方式可逐台重启tracker server上的nginx，即可以在不停服务的情况下完成动态扩容。</strong></p><h2 id="7-2-纵向扩容"><a href="#7-2-纵向扩容" class="headerlink" title="7.2. 纵向扩容"></a>7.2. 纵向扩容</h2><p>​纵向扩容指对group的容量进行扩容，因为同一group内机器的数据是互相备份的，故同一个group的最大容量取决于group内最小strorage的存储容量，若要对一个group进行纵向扩容，则需要以下几个步骤：</p><ul><li>对group内所有机器挂载相同容量的磁盘；</li><li>修改group内所有机器<code>storage.conf</code>和<code>mod_fastdfs.conf</code>配置文件中的<code>store_path_count</code>属性，并添加相应的<code>store_path</code>，最后再重启storage server和nginx即可；</li></ul><p><strong><font color="red">注意：修改完单台storage server后，该节点会切换到OFFLINE状态（下线状态，不可上传，可通过浏览器访问），直到group内所有节点调整完毕后，才会切换到ACTIVE状态。</font></strong></p><p>​<strong>综上，纵向扩容的方式需要逐台重启group内的storage server和nginx，待group内所有节点重启完毕后，该group方可提供服务，即这种扩容方式需要暂停group的服务（其他group无影响，该group仅可通过浏览器访问已上传的文件），时间大概为秒级（最后一台storage server重启的时间 + fastdfs cluster调整group storage count的时间）。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 中间件 </category>
          
          <category> 分布式文件存储 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FastDFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker入门</title>
      <link href="/2022/08/10/system/Docker%E5%85%A5%E9%97%A8/"/>
      <url>/2022/08/10/system/Docker%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="什么是docker"><a href="#什么是docker" class="headerlink" title="什么是docker"></a>什么是docker</h1><p>虚拟容器技术，通过对应用组件的封装、分发、部署、运行等生命周期的管理，使用户APP及其运行环境能够做到<strong>一次镜像，处处运行</strong>。</p><p>三要素：镜像、容器、仓库</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>安装步骤参考官网<code>https://docs.docker.com/engine/install/centos/</code></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p><code>CentOS7</code></p><h2 id="安装gcc"><a href="#安装gcc" class="headerlink" title="安装gcc"></a>安装gcc</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc gcc-c++</span><br></pre></td></tr></table></figure><h2 id="设置存储库"><a href="#设置存储库" class="headerlink" title="设置存储库"></a>设置存储库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum-utils包提供yum-config-manager程序</span></span><br><span class="line">yum install -y yum-utils</span><br><span class="line"><span class="comment"># 设置稳定仓库，这里选择阿里云的仓库</span></span><br><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h2 id="安装docker引擎"><a href="#安装docker引擎" class="headerlink" title="安装docker引擎"></a>安装docker引擎</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker-ce docker-ce-cli containerd.io docker-compose-plugin</span><br></pre></td></tr></table></figure><h2 id="启动docker"><a href="#启动docker" class="headerlink" title="启动docker"></a>启动docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br><span class="line"><span class="comment"># 查看docker进程</span></span><br><span class="line">ps -ef | grep docker</span><br><span class="line"><span class="comment"># 查看docker版本</span></span><br><span class="line">docker version</span><br></pre></td></tr></table></figure><h2 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行docker自带的hello world</span></span><br><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><h2 id="配置阿里云镜像加速"><a href="#配置阿里云镜像加速" class="headerlink" title="配置阿里云镜像加速"></a>配置阿里云镜像加速</h2><p>参考阿里云官网<strong>容器镜像服务</strong><code>https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</code></p><h1 id="docker常用命令"><a href="#docker常用命令" class="headerlink" title="docker常用命令"></a>docker常用命令</h1><h2 id="帮助启动类命令"><a href="#帮助启动类命令" class="headerlink" title="帮助启动类命令"></a>帮助启动类命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动docker</span></span><br><span class="line">systemctl start docker</span><br><span class="line"><span class="comment"># 停止docker</span></span><br><span class="line">systemctl stop docker</span><br><span class="line"><span class="comment"># 重启docker</span></span><br><span class="line">systemctl restart docker</span><br><span class="line"><span class="comment"># 查看docker状态</span></span><br><span class="line">systemctl status docker</span><br><span class="line"><span class="comment"># 开机启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"><span class="comment"># 查看docker概要信息</span></span><br><span class="line">docker info</span><br><span class="line"><span class="comment"># 查看docker帮助文档</span></span><br><span class="line">docker --<span class="built_in">help</span></span><br><span class="line"><span class="comment"># 查看docker命令帮助文档</span></span><br><span class="line">docker 具体命令 --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><h2 id="镜像命令"><a href="#镜像命令" class="headerlink" title="镜像命令"></a>镜像命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出本地所有镜像</span></span><br><span class="line">docker images</span><br><span class="line"><span class="comment"># 从仓库查找镜像</span></span><br><span class="line">docker search --<span class="built_in">limit</span> 5 imageName <span class="comment"># --limit表示只取前5条数据</span></span><br><span class="line"><span class="comment"># 从仓库拉取镜像</span></span><br><span class="line">docker pull imageName:tag <span class="comment"># :tag表示版本，不指定默认为lasted版本</span></span><br><span class="line"><span class="comment"># 查看镜像/容器/数据卷所占的空间</span></span><br><span class="line">docker system <span class="built_in">df</span></span><br><span class="line"><span class="comment"># 删除镜像</span></span><br><span class="line">docker rmi -f imageName/imageId <span class="comment"># -f表示强制删除</span></span><br><span class="line">docker rmi -f imageName:tag imageName:tag <span class="comment"># 删除多个镜像</span></span><br><span class="line">docker rmi -f $(docker images -qa) <span class="comment"># 强制删除全部镜像</span></span><br></pre></td></tr></table></figure><h3 id="推送镜像到阿里云仓库"><a href="#推送镜像到阿里云仓库" class="headerlink" title="推送镜像到阿里云仓库"></a>推送镜像到阿里云仓库</h3><p>参考阿里云<strong>容器镜像服务</strong></p><h3 id="推送镜像到私有库"><a href="#推送镜像到私有库" class="headerlink" title="推送镜像到私有库"></a>推送镜像到私有库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取docker registry镜像</span></span><br><span class="line">docker pull registry</span><br><span class="line"><span class="comment"># 运行registry镜像</span></span><br><span class="line"><span class="comment"># -d表示后台运行 -p指定docker端口和容器端口 --name指定容器名称 -v指定数据卷 --privileged指定特权</span></span><br><span class="line">docker run -d -p 5000:5000 --name registry -v 宿主机绝对路径:容器内绝对路径 --privileged=<span class="literal">true</span> registry:latest</span><br><span class="line"><span class="comment"># 修改镜像名，使之符合registry规范</span></span><br><span class="line">docker image tag 镜像名:tag 192.168.5.110:5000/myfirstimage</span><br><span class="line"><span class="comment"># 修改配置文件，使docker支持http方式推送镜像</span></span><br><span class="line"><span class="comment"># 添加json串&quot;insecure-registries&quot;:[&quot;192.168.5.110:5000&quot;]</span></span><br><span class="line">vi /etc/docker/daemon.json</span><br><span class="line"><span class="comment"># 重启docker服务及regisry容器</span></span><br><span class="line">systemctl restart docker</span><br><span class="line">docker start registry</span><br><span class="line"><span class="comment"># 推送镜像到registry</span></span><br><span class="line">docker push 192.168.5.110:5000/myfirstimage</span><br><span class="line"><span class="comment"># 查看registry中的镜像</span></span><br><span class="line">crul -XGET http://192.168.5.110:5000/v2/_catalog</span><br><span class="line"><span class="comment"># 拉取registry中的镜像</span></span><br><span class="line">docker pull 192.168.5.110:5000/myfirstimage</span><br></pre></td></tr></table></figure><h2 id="容器命令"><a href="#容器命令" class="headerlink" title="容器命令"></a>容器命令</h2><h3 id="新建并启动容器"><a href="#新建并启动容器" class="headerlink" title="新建并启动容器"></a>新建并启动容器</h3><p><code>docker run [OPTIONS] IMAGE [COMMAND] [ARG...]</code></p><p>常用options：</p><ul><li>–name：指定容器名称</li><li>-d：后台运行容器并返回容器id，即启动<strong>守护式容器</strong></li><li>-i：以交互模式运行容器，通常与<code>-t</code>同时使用</li><li>-t：为容器重新分配一个伪输入终端，即启动<strong>交互式容器</strong>，通常与<code>-i</code>同时使用</li><li>-P：随机端口映射，大写P</li><li>-p：指定端口映射，小写p</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用镜像centos:latest以交互模式启动一个名为myCont的容器，在容器内执行/bin/bash命令，使用exit退出终端</span></span><br><span class="line">docker run -it --name=myCont centos /bin/bash</span><br><span class="line"><span class="comment"># 前台交互式启动redis，使用redis-cli -p 6379进入命令行</span></span><br><span class="line">docker run -it redis</span><br><span class="line"><span class="comment"># 后台守护式启动redis</span></span><br><span class="line"><span class="comment">## 注意，有一些镜像是不能后台启动的，因为docker规定必须有一个前台进程，否则会自动退出</span></span><br><span class="line">docker run -d redis</span><br></pre></td></tr></table></figure><h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看正在运行的容器</span></span><br><span class="line">docker ps</span><br><span class="line"><span class="comment"># 退出容器</span></span><br><span class="line"><span class="built_in">exit</span> <span class="comment"># run进去容器，exit退出，容器停止</span></span><br><span class="line">ctrl + p + q <span class="comment"># run进去容器，ctrl + p + q退出，容器不停止</span></span><br><span class="line"><span class="comment"># 启动已经停止的容器</span></span><br><span class="line">docker start 容器<span class="built_in">id</span>/容器名</span><br><span class="line"><span class="comment"># 重启容器</span></span><br><span class="line">docker restart 容器<span class="built_in">id</span>/容器名</span><br><span class="line"><span class="comment"># 停止容器</span></span><br><span class="line">docker stop 容器<span class="built_in">id</span>/容器名</span><br><span class="line">docker stop $(docker ps -aq) <span class="comment"># 停止所有容器</span></span><br><span class="line"><span class="comment"># 强制停止容器</span></span><br><span class="line">docker <span class="built_in">kill</span> 容器<span class="built_in">id</span>/容器名</span><br><span class="line"><span class="comment"># 删除已停止的容器</span></span><br><span class="line">docker <span class="built_in">rm</span> 容器<span class="built_in">id</span>/容器名</span><br><span class="line"><span class="comment"># 查看容器日志</span></span><br><span class="line">docker logs 容器<span class="built_in">id</span>/容器名</span><br><span class="line"><span class="comment"># 查看容器内运行的进程</span></span><br><span class="line">docker top 容器<span class="built_in">id</span>/容器名</span><br><span class="line"><span class="comment"># 查看容器内部细节</span></span><br><span class="line">docker inspect 容器<span class="built_in">id</span>/容器名</span><br><span class="line"><span class="comment"># 进入正在运行的容器并以命令行交互</span></span><br><span class="line">docker <span class="built_in">exec</span> -it 容器<span class="built_in">id</span>/容器名 /bin/bash <span class="comment"># 新建进程，exit退出时不会停止容器</span></span><br><span class="line">docker attach 容器<span class="built_in">id</span>/容器名 <span class="comment"># 不新建进程，exit退出时会停止容器</span></span><br><span class="line"><span class="comment"># 容器和主机上的文件互相拷贝</span></span><br><span class="line">docker <span class="built_in">cp</span> 容器<span class="built_in">id</span>/容器名:容器内路径 主机路径 <span class="comment"># 拷贝容器文件到主机</span></span><br><span class="line">docker <span class="built_in">cp</span> 主机路径 容器<span class="built_in">id</span>/容器名:容器内路径 <span class="comment"># 拷贝主机文件到容器</span></span><br><span class="line"><span class="comment"># 导入和导出容器</span></span><br><span class="line">docker <span class="built_in">export</span> 容器<span class="built_in">id</span>/容器名 -o 文件名.tar</span><br><span class="line">docker <span class="built_in">export</span> 容器<span class="built_in">id</span>/容器名 &gt; 文件名.tar</span><br><span class="line">docker import 文件名.tar 镜像用户/镜像名:镜像版本号</span><br><span class="line"><span class="built_in">cat</span> 文件名.tar | docker import  - 镜像用户/镜像名:镜像版本号</span><br><span class="line"><span class="comment"># 将容器提交为镜像</span></span><br><span class="line">docker commit -m=<span class="string">&quot;提交的描述信息&quot;</span> -a=<span class="string">&quot;作者&quot;</span> 容器<span class="built_in">id</span>/容器名 镜像用户/镜像名:镜像版本号</span><br></pre></td></tr></table></figure><h1 id="docker-volumes"><a href="#docker-volumes" class="headerlink" title="docker volumes"></a>docker volumes</h1><p>映射宿主机和docker容器，将docker容器内的数据保存到宿主机的磁盘中，达到重要数据备份的目的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动容器时指定数据卷，宿主机目录和容器目录会自动创建，--privileged给容器root权限</span></span><br><span class="line"><span class="comment"># :rw表示允许读写，默认为该方式，可省略:ro表示只读，即容器只可读取宿主机挂载目录下的文件</span></span><br><span class="line">docker run -it -v 宿主机绝对路径:容器内绝对路径:rw --privileged=<span class="literal">true</span> 镜像名:tag</span><br><span class="line"><span class="comment"># 查看挂载情况查看Mounts参数</span></span><br><span class="line">docker inspect 容器<span class="built_in">id</span></span><br><span class="line"><span class="comment"># 继承数据卷</span></span><br><span class="line">docker run -it --volumes-from 容器<span class="built_in">id</span>/容器名 镜像名:tag</span><br></pre></td></tr></table></figure><h1 id="docker安装单机软件"><a href="#docker安装单机软件" class="headerlink" title="docker安装单机软件"></a>docker安装单机软件</h1><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>搜索镜像(可在docker hub上搜索)、拉取镜像、查看镜像、启动镜像、停止容器、移除容器</p><h2 id="安装tomcat"><a href="#安装tomcat" class="headerlink" title="安装tomcat"></a>安装tomcat</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 搜索镜像</span></span><br><span class="line">docker search tomcat</span><br><span class="line"><span class="comment"># 拉取镜像</span></span><br><span class="line">docker pull tomcat</span><br><span class="line"><span class="comment"># 查看镜像</span></span><br><span class="line">docker images</span><br><span class="line"><span class="comment"># 启动镜像</span></span><br><span class="line">docker run -d -p 8080:8080 --name t1 tomcat</span><br><span class="line"><span class="comment"># 访问tomcat主页，404问题解决：</span></span><br><span class="line"><span class="comment"># 1、检查防火墙和端口</span></span><br><span class="line"><span class="comment"># 2、如果是新版本的tomcat，需要进入到tomcat容器中，删除webapps目录，并移动webapps.dist到webapps</span></span><br><span class="line"><span class="comment"># 3、下载旧版tomcat镜像，如billygoo/tomcat8-jdk8 </span></span><br><span class="line"><span class="comment"># 通过http://192.168.5.110:8080/访问tomcat主页</span></span><br></pre></td></tr></table></figure><h2 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 搜索镜像</span></span><br><span class="line">docker search mysql:5.7</span><br><span class="line"><span class="comment"># 拉取镜像</span></span><br><span class="line">docker pull mysql:5.7</span><br><span class="line"><span class="comment"># 查看镜像</span></span><br><span class="line">docker images</span><br><span class="line"><span class="comment"># 启动镜像</span></span><br><span class="line">docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=root -d -p 3306:3306 --privileged=<span class="literal">true</span> -v /tmp/mysql/log:/var/log/mysql -v /tmp/mysql/data:/var/lib/mysql -v /tmp/mysql/conf:/etc/mysql/conf.d mysql:5.7</span><br><span class="line"><span class="comment"># 新建my.cnf，通过数据卷同步给mysql容器</span></span><br><span class="line"><span class="comment"># 在my.cnf上输入</span></span><br><span class="line"><span class="comment"># [client] </span></span><br><span class="line"><span class="comment"># default_character_set=utf8 </span></span><br><span class="line"><span class="comment"># [mysqld] </span></span><br><span class="line"><span class="comment"># collation_server = utf8_general_ci </span></span><br><span class="line"><span class="comment"># character_set_server = utf8</span></span><br><span class="line"><span class="built_in">cd</span> /tmp/mysql/conf</span><br><span class="line">vi my.cnf</span><br><span class="line"><span class="comment"># 重启mysql容器，进入到mysql查看编码</span></span><br><span class="line">docker restart 容器<span class="built_in">id</span></span><br><span class="line">docker <span class="built_in">exec</span> -it 容器<span class="built_in">id</span> /bin/bash</span><br><span class="line">mysql -uroot -p</span><br><span class="line">show variables like <span class="string">&#x27;character%&#x27;</span>;</span><br><span class="line"><span class="comment"># 进入容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it 容器<span class="built_in">id</span> /bin/bash</span><br><span class="line"><span class="comment"># 进入mysql</span></span><br><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><h2 id="安装redis"><a href="#安装redis" class="headerlink" title="安装redis"></a>安装redis</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 搜索镜像</span></span><br><span class="line">docker search redis</span><br><span class="line"><span class="comment"># 拉取镜像</span></span><br><span class="line">docker pull redis</span><br><span class="line"><span class="comment"># 查看镜像</span></span><br><span class="line">docker images</span><br><span class="line"><span class="comment"># 新建redis.conf，从其他地方拷贝一份，放到/tmp/redis目录下，并修改如下配置</span></span><br><span class="line"><span class="comment"># 1.注释掉bind 127.0.0.1，允许redis外地连接</span></span><br><span class="line"><span class="comment"># 2.daemonize设置为no（默认），设置为yes会与docker run -d冲突</span></span><br><span class="line"><span class="comment"># 3.appendonly设置为yes，开启redis持久化</span></span><br><span class="line"><span class="built_in">cat</span> /tmp/redis/redis.conf</span><br><span class="line"><span class="comment"># 启动镜像,redis-server指定redis启动的配置文件</span></span><br><span class="line">docker run --name r1 -d -p 6379:6379 --privileged=<span class="literal">true</span> -v /tmp/redis/redis.conf:/etc/redis/redis.conf -v /tmp/redis/data:/data  redis:latest redis-server /etc/redis/redis.conf</span><br><span class="line"><span class="comment"># 进入容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it 容器<span class="built_in">id</span> /bin/bash</span><br><span class="line"><span class="comment"># 进入redis</span></span><br><span class="line">redis-cli -p 6379</span><br></pre></td></tr></table></figure><h1 id="docker安装集群软件"><a href="#docker安装集群软件" class="headerlink" title="docker安装集群软件"></a>docker安装集群软件</h1><h2 id="mysql主从复制"><a href="#mysql主从复制" class="headerlink" title="mysql主从复制"></a>mysql主从复制</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、新建主服务器容器实例3307</span></span><br><span class="line">docker run \</span><br><span class="line">--name mysql-master \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=root \</span><br><span class="line">-d -p 3307:3306 --privileged=<span class="literal">true</span> \</span><br><span class="line">-v /tmp/mydata/mysql-master/log:/var/log/mysql \</span><br><span class="line">-v /tmp/mydata/mysql-master/data:/var/lib/mysql \</span><br><span class="line">-v /tmp/mydata/mysql-master/conf:/etc/mysql/conf.d \</span><br><span class="line">mysql:5.7</span><br><span class="line"><span class="comment"># 2、在宿主机相应目录下配置mysql-master的my.cnf配置文件，文件内容见下文</span></span><br><span class="line"><span class="built_in">cd</span> /tmp/mydata/mysql-master/conf</span><br><span class="line">vi my.cnf</span><br><span class="line"><span class="comment"># 3、重启并进入mysql-master容器</span></span><br><span class="line">docker restart mysql-master</span><br><span class="line">docker <span class="built_in">exec</span> -it mysql-master /bin/bash</span><br><span class="line"><span class="comment"># 4、mysql-master内创建数据同步用户</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line">create user <span class="string">&#x27;slave&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">grant replication slave, replication client on *.* to <span class="string">&#x27;slave&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"><span class="comment"># 5、新建从服务器容器实力3308(这里重开一个终端来操作)</span></span><br><span class="line">docker run \</span><br><span class="line">--name mysql-slave \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=root \</span><br><span class="line">-d -p 3308:3306 --privileged=<span class="literal">true</span> \</span><br><span class="line">-v /tmp/mydata/mysql-slave/log:/var/log/mysql \</span><br><span class="line">-v /tmp/mydata/mysql-slave/data:/var/lib/mysql \</span><br><span class="line">-v /tmp/mydata/mysql-slave/conf:/etc/mysql/conf.d \</span><br><span class="line">mysql:5.7</span><br><span class="line"><span class="comment"># 6、在宿主机相应目录下配置mysql-slave的my.cnf配置文件，文件内容见下文</span></span><br><span class="line"><span class="built_in">cd</span> /tmp/mydata/mysql-slave/conf</span><br><span class="line">vi my.cnf</span><br><span class="line"><span class="comment"># 7、重启mysql-slave容器</span></span><br><span class="line">docker restart mysql-slave</span><br><span class="line"><span class="comment"># 8、在mysql-master数据库中查看主从同步状态</span></span><br><span class="line">show master status;</span><br><span class="line"><span class="comment"># 9、进入mysql-slave容器并连接mysql</span></span><br><span class="line">docker <span class="built_in">exec</span> -it mysql-slave /bin/bash</span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="comment"># 10、在mysql-slave数据库中配置主从复制</span></span><br><span class="line"><span class="comment"># master_host为宿主机ip，master_port为mysql-master的端口</span></span><br><span class="line"><span class="comment"># master_user和masterpassword为mysql-master上新建的同步用户</span></span><br><span class="line"><span class="comment"># master_log_file，指定mysql-slave要复制数据的日志文件，通过查看mysql-master的状态，获取file参数</span></span><br><span class="line"><span class="comment"># master_log_pos，指定mysql-slave从哪个位置开始复制数据，通过查看mysql-master的状态，获取position参# 数</span></span><br><span class="line"><span class="comment"># master_connect_retry为mysql-slave重试连接mysql-master的间隔时间，单位为秒</span></span><br><span class="line">change master to master_host=<span class="string">&#x27;192.168.5.110&#x27;</span>, master_user=<span class="string">&#x27;slave&#x27;</span>,master_password=<span class="string">&#x27;123456&#x27;</span>, </span><br><span class="line">master_port=3307, master_log_file=<span class="string">&#x27;mysql_bin.000001&#x27;</span>, </span><br><span class="line">master_log_pos=617, master_connect_retry=30;</span><br><span class="line"><span class="comment"># 11、在mysql-slave数据库中查看主从同步状态</span></span><br><span class="line"><span class="comment"># \G表示以k-v键值对的方式显示</span></span><br><span class="line"><span class="comment"># 主要查看Slave_IO_Running和Slave_SQL_Running的值，为no表示还未开始复制</span></span><br><span class="line">show slave status \G;</span><br><span class="line"><span class="comment"># 12、在mysql-slave数据库中开启主从复制</span></span><br><span class="line">start slave;</span><br><span class="line"><span class="comment"># 13、再次在mysql-slave数据库中查看主从同步状态</span></span><br><span class="line"><span class="comment"># Slave_IO_Running和Slave_SQL_Running的值为yes</span></span><br><span class="line">show slave status \G;</span><br><span class="line"><span class="comment"># 14、测试主从复制效果</span></span><br><span class="line"><span class="comment"># 在mysql-master数据库中新建库、新建表、插入数据</span></span><br><span class="line">create database db1;</span><br><span class="line">use db1;</span><br><span class="line">create table t1(<span class="built_in">id</span> int, name varchar(20));</span><br><span class="line">insert into t1 values(1, <span class="string">&#x27;zhangsan&#x27;</span>);</span><br><span class="line"><span class="comment"># 在mysql-slave数据库中查看记录</span></span><br><span class="line">show databases;</span><br><span class="line">use db1;</span><br><span class="line">show tables;</span><br><span class="line">select * from t1;</span><br></pre></td></tr></table></figure><p><strong>mysql-master my.cnf配置文件内容</strong></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">[mysqld]</span></span><br><span class="line"><span class="comment"># 设置server_id，同一局域网中需要唯一</span></span><br><span class="line"><span class="attr">server_id</span>=<span class="string">101</span></span><br><span class="line"><span class="comment"># 指定不需要同步的数据库名称</span></span><br><span class="line"><span class="attr">binlog_ignore_db</span>=<span class="string">mysql</span></span><br><span class="line"><span class="comment"># 启用二进制日志</span></span><br><span class="line"><span class="attr">log_bin</span>=<span class="string">mysql_bin</span></span><br><span class="line"><span class="comment"># 设置二进制日志使用内存大小（事务）</span></span><br><span class="line"><span class="attr">binlog_cache_size</span>=<span class="string">1M</span></span><br><span class="line"><span class="comment"># 设置使用的二进制日志格式（mixed,statement,row）</span></span><br><span class="line"><span class="attr">binlog_format</span>=<span class="string">mixed</span></span><br><span class="line"><span class="comment"># 二进制日志过期清理时间，单位为天，默认为0，表示不自动清理</span></span><br><span class="line"><span class="attr">expire_logs_days</span>=<span class="string">7</span></span><br><span class="line"><span class="comment"># 跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断</span></span><br><span class="line"><span class="comment"># 如：1062错误是指一些主键重复，1032错误是指主从数据库数据不一致</span></span><br><span class="line"><span class="attr">slave_skip_errors</span>=<span class="string">1062</span></span><br></pre></td></tr></table></figure><p><strong>mysql-slave my.cnf配置文件内容</strong></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">[mysqld]</span></span><br><span class="line"><span class="comment"># 设置server_id，同一局域网中需要唯一</span></span><br><span class="line"><span class="attr">server_id</span>=<span class="string">102</span></span><br><span class="line"><span class="comment"># 指定不需要同步的数据库名称</span></span><br><span class="line"><span class="attr">binlog_ignore_db</span>=<span class="string">mysql</span></span><br><span class="line"><span class="comment"># 启用二进制日志，以备slave作为其他数据库实例的master时使用</span></span><br><span class="line"><span class="attr">log_bin</span>=<span class="string">mysql_bin</span></span><br><span class="line"><span class="comment"># 设置二进制日志使用内存大小（事务）</span></span><br><span class="line"><span class="attr">binlog_cache_size</span>=<span class="string">1M</span></span><br><span class="line"><span class="comment"># 设置使用的二进制日志格式（mixed,statement,row）</span></span><br><span class="line"><span class="attr">binlog_format</span>=<span class="string">mixed</span></span><br><span class="line"><span class="comment"># 二进制日志过期清理时间，单位为天，默认为0，表示不自动清理</span></span><br><span class="line"><span class="attr">expire_logs_days</span>=<span class="string">7</span></span><br><span class="line"><span class="comment"># 跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断</span></span><br><span class="line"><span class="comment"># 如：1062错误是指一些主键重复，1032错误是指主从数据库数据不一致</span></span><br><span class="line"><span class="attr">slave_skip_errors</span>=<span class="string">1062</span></span><br><span class="line"><span class="comment"># relay_log配置中继日志</span></span><br><span class="line"><span class="attr">relay_log</span>=<span class="string">mysql_relay_bin</span></span><br><span class="line"><span class="comment"># log_slave_updates表示slave将复制事件写进自己的二进制日志</span></span><br><span class="line"><span class="attr">log_slave_updates</span>=<span class="string">1</span></span><br><span class="line"><span class="comment"># slave设置为只读（具有super权限的用户除外）</span></span><br><span class="line"><span class="attr">read_only</span>=<span class="string">1</span></span><br></pre></td></tr></table></figure><h2 id="redis集群"><a href="#redis集群" class="headerlink" title="redis集群"></a>redis集群</h2><blockquote><p>redis集群采用hash slot的方式来分区，共有16384个slot，平均分给master节点即可</p></blockquote><h3 id="搭建3主3从集群"><a href="#搭建3主3从集群" class="headerlink" title="搭建3主3从集群"></a>搭建3主3从集群</h3><blockquote><p>六个节点分别命名为redis-node1、redis-node2、redis-node3、redis-node4、redis-node5、redis-node6，端口为6381-6386</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、新建6个redis容器实例</span></span><br><span class="line"><span class="comment"># --net host表示使用宿主机的ip和端口（默认）</span></span><br><span class="line"><span class="comment"># --cluster-enabled表示开启redis集群</span></span><br><span class="line"><span class="comment"># --appendonly表示开启持久化</span></span><br><span class="line"><span class="comment"># --port指定redis端口号</span></span><br><span class="line"><span class="comment"># 启动node1</span></span><br><span class="line">docker run -d --name redis-node1 --net host --privileged=<span class="literal">true</span> \</span><br><span class="line">-v /tmp/redis-cluster/redis-node1:/data redis:latest \</span><br><span class="line">--cluster-enabled <span class="built_in">yes</span> --appendonly <span class="built_in">yes</span> --port 6381</span><br><span class="line"><span class="comment"># 启动node2</span></span><br><span class="line">docker run -d --name redis-node2 --net host --privileged=<span class="literal">true</span> \</span><br><span class="line">-v /tmp/redis-cluster/redis-node2:/data redis:latest \</span><br><span class="line">--cluster-enabled <span class="built_in">yes</span> --appendonly <span class="built_in">yes</span> --port 6382</span><br><span class="line"><span class="comment"># 启动node3</span></span><br><span class="line">docker run -d --name redis-node3 --net host --privileged=<span class="literal">true</span> \</span><br><span class="line">-v /tmp/redis-cluster/redis-node3:/data redis:latest \</span><br><span class="line">--cluster-enabled <span class="built_in">yes</span> --appendonly <span class="built_in">yes</span> --port 6383</span><br><span class="line"><span class="comment"># 启动node4</span></span><br><span class="line">docker run -d --name redis-node4 --net host --privileged=<span class="literal">true</span> \</span><br><span class="line">-v /tmp/redis-cluster/redis-node4:/data redis:latest \</span><br><span class="line">--cluster-enabled <span class="built_in">yes</span> --appendonly <span class="built_in">yes</span> --port 6384</span><br><span class="line"><span class="comment"># 启动node5</span></span><br><span class="line">docker run -d --name redis-node5 --net host --privileged=<span class="literal">true</span> \</span><br><span class="line">-v /tmp/redis-cluster/redis-node5:/data redis:latest \</span><br><span class="line">--cluster-enabled <span class="built_in">yes</span> --appendonly <span class="built_in">yes</span> --port 6385</span><br><span class="line"><span class="comment"># 启动node6</span></span><br><span class="line">docker run -d --name redis-node6 --net host --privileged=<span class="literal">true</span> \</span><br><span class="line">-v /tmp/redis-cluster/redis-node6:/data redis:latest \</span><br><span class="line">--cluster-enabled <span class="built_in">yes</span> --appendonly <span class="built_in">yes</span> --port 6386</span><br><span class="line"><span class="comment"># 2、进入redis-node1容器，为6个redis构建集群关系</span></span><br><span class="line">docker <span class="built_in">exec</span> -it redis-node1 /bin/bash</span><br><span class="line"><span class="comment"># 192.168.5.110为宿主机ip</span></span><br><span class="line"><span class="comment"># --cluster-replicas 1 表示为每个master节点创建一个slave节点</span></span><br><span class="line">redis-cli --cluster create 192.168.5.110:6381 192.168.5.110:6382 \</span><br><span class="line">192.168.5.110:6383 192.168.5.110:6384 192.168.5.110:6385 \</span><br><span class="line">192.168.5.110:6386 --cluster-replicas 1</span><br><span class="line"><span class="comment"># 3、连接redis-node1节点，查看集群状态</span></span><br><span class="line"><span class="comment"># redis-cli --cluster check 192.168.5.110:6381 # 这种方式也可以查看集群状态</span></span><br><span class="line"><span class="comment"># 这里要注意，集群环境下，连接redis时，要加-c参数使用集群模式</span></span><br><span class="line">redis-cli -p 6381</span><br><span class="line">cluster info <span class="comment"># 查看集群状态</span></span><br><span class="line">cluster nodes <span class="comment"># 查看集群节点</span></span><br></pre></td></tr></table></figure><h3 id="集群扩容"><a href="#集群扩容" class="headerlink" title="集群扩容"></a>集群扩容</h3><blockquote><p>添加名为redis-node7端口为6387的主节点和名为redis-node8端口为6388的从节点，使集群扩容为4主4从</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、增加两个节点，</span></span><br><span class="line"><span class="comment"># 启动node7</span></span><br><span class="line">docker run -d --name redis-node7 --net host --privileged=<span class="literal">true</span> \</span><br><span class="line">-v /tmp/redis-cluster/redis-node7:/data redis:latest \</span><br><span class="line">--cluster-enabled <span class="built_in">yes</span> --appendonly <span class="built_in">yes</span> --port 6387</span><br><span class="line"><span class="comment"># 启动node8</span></span><br><span class="line">docker run -d --name redis-node8 --net host --privileged=<span class="literal">true</span> \</span><br><span class="line">-v /tmp/redis-cluster/redis-node8:/data redis:latest \</span><br><span class="line">--cluster-enabled <span class="built_in">yes</span> --appendonly <span class="built_in">yes</span> --port 6388</span><br><span class="line"><span class="comment"># 2、进入redis-node7</span></span><br><span class="line">docker <span class="built_in">exec</span> -it redis-node7 /bin/bash</span><br><span class="line"><span class="comment"># 3、将新增的redis-node7（空槽号）作为master节点加入原集群，并检查集群状态</span></span><br><span class="line"><span class="comment"># 192.168.5.110:6381为原集群里的master节点，相当于redis-node7拜一拜redis-node1的码头</span></span><br><span class="line">redis-cli --cluster add-node 192.168.5.110:6387 192.168.5.110:6381</span><br><span class="line">redis-cli --cluster check 192.168.5.110:6381 <span class="comment"># 此时集群中已经有了redis-node7节点，slot为0</span></span><br><span class="line"><span class="comment"># 4、重新分配slot并检查集群状态</span></span><br><span class="line"><span class="comment"># How many slots do you want to move (from 1 to 16384)? 输入4096 16384/master个数</span></span><br><span class="line"><span class="comment"># What is the receiving node ID? 输入redis-node7的id，查看集群状态能看到各节点的id</span></span><br><span class="line"><span class="comment"># Source node #1: 输入all</span></span><br><span class="line"><span class="comment"># Do you want to proceed with the proposed reshard plan (yes/no)? 输入yes</span></span><br><span class="line">redis-cli --cluster reshard 192.168.5.110:6381</span><br><span class="line">redis-cli --cluster check 192.168.5.110:6381 <span class="comment"># 此时redis-node7节点已经有了4096个slot</span></span><br><span class="line"><span class="comment"># 5、给redis-node7添加从机redis-node8，并查看集群状态</span></span><br><span class="line"><span class="comment"># cluster-master-id指定redis-node7的id，通过集群状态获取</span></span><br><span class="line">redis-cli --cluster add-node 192.168.5.110:6388 192.168.5.110:6387 \</span><br><span class="line">--cluster-slave --cluster-master-id daa620710980195ec0279d65d10d87346ef94821</span><br><span class="line">redis-cli --cluster check 192.168.5.110:6381 <span class="comment"># 此时集群中已经有了redis-node8节点</span></span><br></pre></td></tr></table></figure><h3 id="集群缩容"><a href="#集群缩容" class="headerlink" title="集群缩容"></a>集群缩容</h3><blockquote><p>剔除redis-node7、redis-node8两个节点，使集群缩容为3主3从</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、从集群中删除从机redis-node8，并查看集群状态</span></span><br><span class="line"><span class="comment"># d8e8cf55e9dda78543f2d7935eee1e0ada2fdd95为redis-node8的id</span></span><br><span class="line">redis-cli --cluster del-node 192.168.5.110:6388 d8e8cf55e9dda78543f2d7935eee1e0ada2fdd95</span><br><span class="line">redis-cli --cluster check 192.168.5.110:6381 <span class="comment"># 此时集群中没有redis-node8节点了</span></span><br><span class="line"><span class="comment"># 2、清空redis-node7的slot，重新分配给其他master，之后查看集群状态</span></span><br><span class="line"><span class="comment"># How many slots do you want to move (from 1 to 16384)? 输入4096，即redis-node7的slot数</span></span><br><span class="line"><span class="comment"># What is the receiving node ID? 输入redis-node1的id，即将redis-node7的slot全部给redis-node1</span></span><br><span class="line"><span class="comment"># Source node #1: 输入redis-node7的id，即分配的是redis-node7的slot</span></span><br><span class="line"><span class="comment"># Source node #2: 输入done</span></span><br><span class="line"><span class="comment"># Do you want to proceed with the proposed reshard plan (yes/no)? 输入yes</span></span><br><span class="line">redis-cli --cluster reshard 192.168.5.110:6381</span><br><span class="line">redis-cli --cluster check 192.168.5.110:6381 <span class="comment"># 此时redis-node7已经没有slot了</span></span><br><span class="line"><span class="comment"># 3、从集群中删除主机redis-node7，并查看集群状态</span></span><br><span class="line"><span class="comment"># daa620710980195ec0279d65d10d87346ef94821为redis-node7的id</span></span><br><span class="line">redis-cli --cluster del-node 192.168.5.110:6387 daa620710980195ec0279d65d10d87346ef94821</span><br><span class="line">redis-cli --cluster check 192.168.5.110:6381 <span class="comment"># 此时集群中没有redis-node7节点了</span></span><br><span class="line"><span class="comment"># 4、redis-node7、redis-node8停机</span></span><br><span class="line">docker stop redis-node7 redis-node8</span><br></pre></td></tr></table></figure><h1 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h1><blockquote><p>Dockerfile是用来构建docker镜像的文本文件，是由一条条构建镜像所需的指令和参数构成的脚本。</p><p>构建三部曲：编写Dockerfile、docker build命令构建镜像、docker run运行容器</p><p>可参考tomcat的Dockerfile：<code>https://github.com/docker-library/tomcat/blob/master/10.0/jdk8/corretto/Dockerfile</code></p><p>官方文档：<code>https://docs.docker.com/engine/reference/builder/</code></p></blockquote><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><ul><li>每条<strong>保留字指令</strong>都必须为<strong>大写字母</strong>，且后面至少要<strong>跟随一个参数</strong></li><li>指定从上到下依次执行</li><li>#表示注释</li><li>每条指令都会创建一个新的镜像，并对镜像进行提交</li></ul><h2 id="构建过程"><a href="#构建过程" class="headerlink" title="构建过程"></a>构建过程</h2><ol><li>docker从基础镜像运行一个容器</li><li>执行一条指令并对容器做出修改</li><li>执行类似<code>docker commit</code>的操作提交一个新的镜像层</li><li>docker再基于上一步提交的镜像运行一个新容器</li><li>执行<code>Dockerfile</code>中的下一条指令，直到所有的指令都运行完成</li></ol><h2 id="常用保留字指令"><a href="#常用保留字指令" class="headerlink" title="常用保留字指令"></a>常用保留字指令</h2><h3 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a>FROM</h3><p>基础镜像，描述当前镜像是基于哪个镜像的，指定一个已存在的镜像作为模板，放在Dockerfile的第一行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FROM amazoncorretto:8</span><br></pre></td></tr></table></figure><h3 id="MAINTAINER"><a href="#MAINTAINER" class="headerlink" title="MAINTAINER"></a>MAINTAINER</h3><p>镜像维护者的姓名和邮箱</p><h3 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a>RUN</h3><p>容器构建时（即<code>docker build</code>）需要执行的命令，有<code>shell</code>和<code>exec</code>两种格式</p><ul><li><p>shell：RUN &lt;命令行命令&gt;</p><p>​例如<code>RUN ./test.sh</code>，相当于在终端执行shell命令</p></li><li><p>exec：RUN [“可执行文件”, “参数1”, “参数2”]</p><p>​例如<code>RUN [&quot;./test.sh&quot;, &quot;dev&quot;, &quot;offline&quot;]</code>，等价于<code>RUN ./test.sh dev offline</code></p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RUN mkdir /usr/local/tomcat</span><br></pre></td></tr></table></figure><h3 id="EXPOSE"><a href="#EXPOSE" class="headerlink" title="EXPOSE"></a>EXPOSE</h3><p>当前容器对外暴露的端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXPOSE 8080</span><br></pre></td></tr></table></figure><h3 id="WORKDIR"><a href="#WORKDIR" class="headerlink" title="WORKDIR"></a>WORKDIR</h3><p>容器创建后，终端登录成功后默认的工作目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WORKDIR /usr/local/tomcat</span><br></pre></td></tr></table></figure><h3 id="USER"><a href="#USER" class="headerlink" title="USER"></a>USER</h3><p>指定镜像以哪个用户去执行，默认是root</p><h3 id="ENV"><a href="#ENV" class="headerlink" title="ENV"></a>ENV</h3><p>构建镜像过程中设置环境变量，后续可以用<code>$</code>引用该变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ENV CATALINA_HOME /usr/local/tomcat</span><br><span class="line">WORKDIR $CATALINA_HOME</span><br></pre></td></tr></table></figure><h3 id="ADD"><a href="#ADD" class="headerlink" title="ADD"></a>ADD</h3><p>将宿主机目录下的文件拷贝到镜像，且会自动处理url和解压tar压缩包，相当于增强版的<code>ADD</code>指令</p><h3 id="COPY"><a href="#COPY" class="headerlink" title="COPY"></a>COPY</h3><p>类似<code>docker cp</code>，拷贝目录和文件到镜像中</p><h3 id="VOLUME"><a href="#VOLUME" class="headerlink" title="VOLUME"></a>VOLUME</h3><p>容器数据卷，用于持久化容器的数据，相当于<code>docker run -v</code></p><h3 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h3><p>指定容器<strong>启动后</strong>要干的事，与<code>RUN</code>指令相似，也有<code>shell</code>和<code>exec</code>两种格式；</p><p><code>CMD</code>指令可与<code>ENTRYPOINT</code>指令配合使用，在指定<code>ENTRYPOINT</code>指令后，用<code>CMD</code>指令指定具体参数；</p><p><code>Dockerfile</code>中可以有多个<code>CMD</code>指令，但只有最后一个生效，<code>CMD</code>会被<code>docker run</code>后面跟的参数替换掉；</p><p><code>RUN</code>指令是在<code>docker build</code>时执行，<code>CMD</code>是在<code>docker run</code>时执行；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CMD ./test.sh</span><br><span class="line">CMD [&quot;catalina.sh&quot;, &quot;run&quot;]</span><br><span class="line">CMD [&quot;run&quot;, &quot;offline&quot;] # 指定ENTRYPOINT的参数 </span><br><span class="line"># 用下面的命令启动tomcat容器后，/bin/bash会替代tomcat Dockerfile中的CMD [&quot;catalina.sh&quot;, &quot;run&quot;],</span><br><span class="line"># 导致容器虽然启动成功了，但tomcat并没有启动</span><br><span class="line">docker run -it -p 8080:8080 tomcat /bin/bash</span><br></pre></td></tr></table></figure><h3 id="ENTRYPOINT"><a href="#ENTRYPOINT" class="headerlink" title="ENTRYPOINT"></a>ENTRYPOINT</h3><p>指定容器启动时要运行的命令，类似于<code>CMD</code>，但<code>ENTRYPOINT</code>不会被<code>docker run</code>后面的命令覆盖，而且<code>docker run</code>后面跟的命令行参数会被当做参数送给<code>ENTRYPOINT</code>指令指定的程序；</p><p>可以和<code>CMD</code>一起使用，一般是<strong>变参</strong>的时候才会用<code>CMD</code>给<code>ENTRYPOINT</code>传参，即当指定了<code>ENTRYPOINT</code>时，<code>CMD</code>的含义就发生了变化，不再是运行命令，而是将<code>CMD</code>的内容作为参数传递给<code>ENTRYPOINT</code>；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 下面两个指令相当于执行命令nginx -c /etc/nginx/nginx.conf</span><br><span class="line">ENTRYPOINT [&quot;nginx&quot;, &quot;-c&quot;]</span><br><span class="line">CMD [&quot;/etc/nginx/nginx.conf&quot;]</span><br><span class="line"># 运行该命令时，CMD参数将被替换，实际执行的命令为 nginx -c /etc/nginx/new.conf</span><br><span class="line">docker run -d nginx -c /etc/nginx/new.conf</span><br></pre></td></tr></table></figure><h2 id="自定义镜像"><a href="#自定义镜像" class="headerlink" title="自定义镜像"></a>自定义镜像</h2><blockquote><p>这里基于从docker hub上pull的centos镜像，使用Dockerfile自定义mycentos镜像，使之拥有jdk8环境</p></blockquote><h3 id="前提准备"><a href="#前提准备" class="headerlink" title="前提准备"></a>前提准备</h3><p>拉好centos镜像，下载jdk8压缩包</p><h3 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤"></a>步骤</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、编写Dockerfile</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /tmp/myfile</span><br><span class="line"><span class="built_in">cd</span> /tmp/myfile</span><br><span class="line"><span class="built_in">touch</span> Dockerfile</span><br><span class="line">vi Dockerfile</span><br><span class="line"><span class="comment"># 2、构建Dockerfile</span></span><br><span class="line"><span class="comment"># 在Dockerfile同级目录下执行命令</span></span><br><span class="line"><span class="comment"># 注意命令后有个空格和点号，表示当前目录</span></span><br><span class="line">docker build -t mycentos:1.0 .</span><br><span class="line"><span class="comment"># 3、查看镜像并运行容器</span></span><br><span class="line">docker images</span><br><span class="line">docker run -it mycentos:1.0</span><br><span class="line"><span class="comment"># 4、测试jdk安装结果</span></span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><h3 id="Dockerfile内容"><a href="#Dockerfile内容" class="headerlink" title="Dockerfile内容"></a>Dockerfile内容</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># 基于centos镜像</span><br><span class="line">FROM centos</span><br><span class="line"># 作者和邮箱</span><br><span class="line">MAINTAINER pxz&lt;pxz@163.com&gt;</span><br><span class="line"></span><br><span class="line"># 设置MYPATH变量</span><br><span class="line">ENV MYPATH /usr/local</span><br><span class="line"># 设置默认工作目录</span><br><span class="line">WORKDIR $MYPATH</span><br><span class="line"></span><br><span class="line"># 创建java目录</span><br><span class="line">RUN mkdir /usr/local/java</span><br><span class="line"># 拷贝jdk压缩包到镜像，ADD命令会自动解压</span><br><span class="line"># jdk的安装包需要和Dockerfile在同一目录</span><br><span class="line">ADD OpenJDK8U-jdk_x64_linux_hotspot_8u322b06.tar.gz /usr/local/java</span><br><span class="line"># 配置java环境变量</span><br><span class="line"># jdk8u322-b06是jdk压缩包的解压目录</span><br><span class="line">ENV JAVA_HOME /usr/local/java/jdk8u322-b06</span><br><span class="line">ENV JRE_HOME $JAVA_HOME/jre</span><br><span class="line">ENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$CLASSPATH</span><br><span class="line">ENV PATH $JAVA_HOME/bin:$PATH</span><br><span class="line"></span><br><span class="line"># 暴露80端口</span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line"># 容器启动后输出内容和执行命令</span><br><span class="line">CMD echo $MYPATH</span><br><span class="line">CMD echo &quot;success............&quot;</span><br><span class="line">CMD /bin/bash</span><br></pre></td></tr></table></figure><h1 id="虚悬镜像"><a href="#虚悬镜像" class="headerlink" title="虚悬镜像"></a>虚悬镜像</h1><p>仓库名、标签都是<code>&lt;none&gt;</code>的镜像，俗称<code>dangling imag</code>，删除掉即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有虚悬镜像</span></span><br><span class="line">docker image <span class="built_in">ls</span> -f dangling=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 删除所有虚悬镜像</span></span><br><span class="line">docker image prune</span><br></pre></td></tr></table></figure><h1 id="docker-network"><a href="#docker-network" class="headerlink" title="docker network"></a>docker network</h1><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><ul><li>容器间的互联和通信以及端口映射</li><li>容器ip变动时，可直接通过服务名直接进行网络通信（需要自定义网络）</li></ul><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p><code>docker network --help</code>查看所有命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看docker network</span></span><br><span class="line">docker network <span class="built_in">ls</span></span><br><span class="line"><span class="comment"># 查看网络源数据</span></span><br><span class="line">docker network inspect networkid/networkname</span><br><span class="line"><span class="comment"># 创建网络</span></span><br><span class="line">docker network create networkname</span><br><span class="line"><span class="comment"># 删除网络</span></span><br><span class="line">docker <span class="built_in">rm</span> networkid/networkname</span><br></pre></td></tr></table></figure><h2 id="网络模式"><a href="#网络模式" class="headerlink" title="网络模式"></a>网络模式</h2><table><thead><tr><th align="center">网络模式</th><th align="center">描述</th><th align="center">命令</th></tr></thead><tbody><tr><td align="center">bridge</td><td align="center">为每一个容器分配、设置ip，并将容器连接到一个<code>docker0</code>；<br />虚拟网桥，默认为该模式</td><td align="center">使用<code>--network bridge</code>指定，默认使用<code>docker0</code></td></tr><tr><td align="center">host</td><td align="center">容器不会虚拟出自己的网卡、配置自己的ip等，而是使用宿主机的ip和端口</td><td align="center">使用<code>--network host</code>指定</td></tr><tr><td align="center">none</td><td align="center">容器有独立的<code>Network namespace</code>，但并没有对其进行任何的网络设置，如分配<code>veth pair</code>和网桥连接、ip等</td><td align="center">使用<code>--network none</code>指定</td></tr><tr><td align="center">container</td><td align="center">新创建的容器不会创建自己的网卡和配置自己的ip，而是和一个指定的容器共享ip、端口范围等</td><td align="center">使用<code>--network container:容器名称/容器id</code>指定</td></tr><tr><td align="center">自定义</td><td align="center">自定义一个<code>network</code>，</td><td align="center"><code>docker network create my_network</code><br /><code>--network my_network</code></td></tr></tbody></table><h1 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker compose"></a>docker compose</h1><blockquote><p>Docker-Compose是Docker官网的开源项目，负责实现对Docker容器集群的快速编排。</p><p>官方文档：<code>https://docs.docker.com/compose/compose-file/compose-file-v3/</code></p></blockquote><h2 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker compose"></a>安装docker compose</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先检查下是否安装过，装docker时可能已经安装过了</span></span><br><span class="line">yum list installed  | grep docker-compose</span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">yum -y install docker-compose-plugin</span><br><span class="line"><span class="comment"># 查看compose版本</span></span><br><span class="line">docker compose version</span><br></pre></td></tr></table></figure><h2 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h2><ul><li>一个文件：<code>docker-compose.yml</code></li><li>两个要素：<ul><li>服务service：一个个的容器实例，如订单服务、仓库服务、mysql容器等</li><li>工程project：由一组关联的容器组成的一个<strong>完整业务单元</strong>，在<code>docker-compose.yml</code>文件中定义</li></ul></li></ul><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><ol><li>编写<code>Dockerfile</code>定义各个微服务应用，并构建出对应的镜像文件</li><li>使用<code>docker-compose.yml</code>定义一个完整业务单元，安排好整体应用中的各个容器服务</li><li>执行<code>docker compose up</code>命令，启动并运行整个应用程序，完成一键部署</li></ol><h2 id="常用命令-1"><a href="#常用命令-1" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 命令帮助</span></span><br><span class="line">docker compose --<span class="built_in">help</span></span><br><span class="line"><span class="comment"># 创建并在后台启动容器</span></span><br><span class="line">docker compose up -d</span><br><span class="line"><span class="comment"># 停止并删除容器、网络等</span></span><br><span class="line">docker compose down</span><br><span class="line"><span class="comment"># 进入yml中配置的容器内部</span></span><br><span class="line">docker compose <span class="built_in">exec</span> 服务名 /bin/bash</span><br><span class="line"><span class="comment"># 查看yml中配置的所有容器</span></span><br><span class="line">docker compose ps</span><br><span class="line"><span class="comment"># 查看yml中配置的所有容器进程</span></span><br><span class="line">docker compose top</span><br><span class="line"><span class="comment"># 查看容器输出日志</span></span><br><span class="line">docker compose logs 服务名</span><br><span class="line"><span class="comment"># 停止yml中配置的所有容器</span></span><br><span class="line">docker compose stop</span><br><span class="line"><span class="comment"># 启动yml中配置的所有容器</span></span><br><span class="line">docker compose start</span><br><span class="line"><span class="comment"># 重启yml中配置的所有容器</span></span><br><span class="line">docker compose restart</span><br><span class="line"><span class="comment"># 检查yml配置，-q表示配置有误时输出</span></span><br><span class="line">docker compose config -q</span><br></pre></td></tr></table></figure><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><blockquote><p>springboot+mysql+redis实现添加用户和查询用户的功能</p></blockquote><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>将编写好springboot项目打成jar包</li><li>参照<a href="#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%95%9C%E5%83%8F">自定义镜像</a>构建好一个有jdk环境的centos镜像</li></ul><h3 id="步骤-2"><a href="#步骤-2" class="headerlink" title="步骤"></a>步骤</h3><h4 id="不使用docker-compose"><a href="#不使用docker-compose" class="headerlink" title="不使用docker compose"></a>不使用docker compose</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、将springboot项目的jar包通过docker build构建成镜像</span></span><br><span class="line"><span class="comment"># 1.1、编写Dockerfile，文件内容见下文</span></span><br><span class="line"><span class="built_in">mkdir</span> /tmp/pxztest</span><br><span class="line">vi Dockerfile</span><br><span class="line"><span class="comment"># 1.2、构建镜像</span></span><br><span class="line">docker build -t userservice:1.0 .</span><br><span class="line"><span class="comment"># 2、启动mysql容器、redis容器和微服务容器</span></span><br><span class="line">docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=root -d -p 3306:3306 --privileged=<span class="literal">true</span> -v /tmp/mysql/log:/var/log/mysql -v /tmp/mysql/data:/var/lib/mysql -v /tmp/mysql/conf:/etc/mysql/conf.d mysql:5.7</span><br><span class="line"></span><br><span class="line">docker run --name r1 -d -p 6379:6379 --privileged=<span class="literal">true</span> -v /tmp/redis/redis.conf:/etc/redis/redis.conf -v /tmp/redis/data:/data  redis:latest redis-server /etc/redis/redis.conf</span><br><span class="line"></span><br><span class="line">docker run -d -p 8888:8888 --name user-service userservice:1.0</span><br><span class="line"><span class="comment"># 3、调用微服务接口并查看容器日志</span></span><br><span class="line">curl -GET http://192.168.5.110:8888/find/4</span><br><span class="line">docker logs -n50 -f user-service</span><br></pre></td></tr></table></figure><h4 id="使用docker-compose"><a href="#使用docker-compose" class="headerlink" title="使用docker compose"></a>使用docker compose</h4><blockquote><p>不使用<code>docker compose</code>虽然可以成功运行案例，但是存在以下几个问题：</p><ol><li>容器启动的先后顺序要求固定，要先启动mysql+redis后，才能启动springboot；</li><li>需要手动执行多个<code>docker run</code>命令；</li><li>容器启停或宕机时，ip地址对应的容器实例可能发生变化，导致容器间互相访问失败，除非生产ip固定（不推荐），所以容器间需要通过服务名来访问，而不是ip；</li></ol></blockquote><p><strong>1、编写docker-compose.yml</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp/pxztest</span><br><span class="line">vi docker-compose.yml</span><br></pre></td></tr></table></figure><p><em><strong>docker-compose.yml内容</strong></em></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span> <span class="comment"># 定义docker compose的版本</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span> <span class="comment"># 服务列表</span></span><br><span class="line">  <span class="attr">microService:</span> <span class="comment"># 自定义服务名称</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">userservice:1.0</span> <span class="comment"># 使用的镜像</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">ms1</span> <span class="comment"># 自定义容器名称</span></span><br><span class="line">    <span class="attr">ports:</span> <span class="comment"># 定义暴露的端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8888:8888&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span> <span class="comment"># 定义数据卷</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/tmp/pxztest/userservice:/data</span></span><br><span class="line">    <span class="attr">networks:</span> <span class="comment"># 使用的docker network</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">pxz_network</span></span><br><span class="line">    <span class="attr">depends_on:</span> <span class="comment"># 依赖的服务</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis1</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;6379:6379&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/tmp/redis/redis.conf:/etc/redis/redis.conf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/tmp/redis/data:/data</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">pxz_network</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">redis-server</span> <span class="string">/etc/redis/redis.conf</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mysql1</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">&quot;root&quot;</span></span><br><span class="line">      <span class="attr">MYSQL_ALLOW_ENPTY_PASSWORD:</span> <span class="string">&quot;no&quot;</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> <span class="string">&quot;db1&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3306:3306&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/tmp/mysql/log:/var/log/mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/tmp/mysql/data:/var/lib/mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/tmp/mysql/conf:/etc/mysql/conf.d</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/tmp/mysql/init:/docker-entrypoint-initdb.d</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">pxz_network</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">--default-authentication-plugin=mysql_native_password</span> <span class="comment"># 解决外部无法访问</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span> <span class="comment"># 创建network</span></span><br><span class="line">  <span class="attr">pxz_network:</span></span><br></pre></td></tr></table></figure><p><strong>2、调整springboot项目</strong></p><p>将springboot项目中mysql和redis的ip地址替换为<code>docker-compose.yml</code>中定义的服务名，并重新打包、生成镜像。</p><p><strong>3、启动docker compose</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在docker-compose.yml同级目录下执行</span></span><br><span class="line">docker compose up -d</span><br><span class="line"><span class="comment"># 查看结果</span></span><br><span class="line">docker compose ps</span><br></pre></td></tr></table></figure><h4 id="Dockerfile内容-1"><a href="#Dockerfile内容-1" class="headerlink" title="Dockerfile内容"></a>Dockerfile内容</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># mycentos镜像要有jdk环境</span><br><span class="line">FROM mycentos:1.0</span><br><span class="line">ADD dockerboot-0.0.1-SNAPSHOT.jar /tmp/service/pxz.jar</span><br><span class="line">EXPOSE 8888</span><br><span class="line">CMD java -jar /tmp/service/pxz.jar</span><br></pre></td></tr></table></figure><h1 id="可视化工具Portainer"><a href="#可视化工具Portainer" class="headerlink" title="可视化工具Portainer"></a>可视化工具Portainer</h1><blockquote><p>官网：<code>https://www.portainer.io/</code></p><p>官方文档：<code>https://docs.portainer.io/v/ce-2.11/start/install</code></p></blockquote><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、启动portainer --restart表示该容器会跟随docker服务的重启而重启，永远在running状态</span></span><br><span class="line">docker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:2.11.1</span><br><span class="line"><span class="comment"># 2、访问web页面</span></span><br><span class="line">https://192.168.5.110:9443/</span><br><span class="line"><span class="comment"># 3、第一次登录需要创建用户</span></span><br><span class="line">admin/12345678</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="docker容器监控CIG"><a href="#docker容器监控CIG" class="headerlink" title="docker容器监控CIG"></a>docker容器监控CIG</h1><blockquote><p>CIG &#x3D; CAdvisor（监控收集） + InfluxDB（存储数据） + Granfana（展示图表）</p></blockquote><h2 id="配合docker-compose使用CIG"><a href="#配合docker-compose使用CIG" class="headerlink" title="配合docker compose使用CIG"></a>配合docker compose使用CIG</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /tmp/cig</span><br><span class="line"><span class="built_in">cd</span> /tmp/cig</span><br><span class="line">vi docker-compose.yml <span class="comment"># yml内容见下文</span></span><br><span class="line"><span class="comment"># 检查yml文件配置，无输出表示配置正确</span></span><br><span class="line">docker compose config -q</span><br><span class="line"><span class="comment"># 启动compose，在yml文件同级目录下执行</span></span><br><span class="line"><span class="comment"># 启动granfana报错：GF_PATHS_DATA=&#x27;/var/lib/grafana&#x27; is not writable.</span></span><br><span class="line"><span class="comment"># 问题原因：yml中配置的104用户没有权限</span></span><br><span class="line"><span class="comment"># 解决方法：给yml中与GF_PATHS_DATA映射的数据卷目录加777权限即可</span></span><br><span class="line">docker compose up -d</span><br><span class="line">docker compose ps</span><br><span class="line"><span class="comment"># 浏览器访问</span></span><br><span class="line">http://192.168.5.110:8080/ <span class="comment"># 访问CAdvisor</span></span><br><span class="line">http://192.168.5.110:8083/ <span class="comment"># 访问influxdb</span></span><br><span class="line">http://192.168.5.110:3000/ <span class="comment"># 访问granfana，admin/admin</span></span><br></pre></td></tr></table></figure><h3 id="配置granfana"><a href="#配置granfana" class="headerlink" title="配置granfana"></a>配置granfana</h3><h4 id="配置数据源"><a href="#配置数据源" class="headerlink" title="配置数据源"></a>配置数据源</h4><p><img src="/1653811219(1).jpg" alt="配置数据源1"></p><p><img src="/1653811302(1).jpg" alt="配置数据源2"></p><h4 id="添加panel"><a href="#添加panel" class="headerlink" title="添加panel"></a>添加panel</h4><p><img src="/1653811455(1).jpg" alt="添加panel1"></p><p><img src="/1653811630(1).jpg" alt="添加panel2"></p><p><img src="/1653814050(1).jpg" alt="添加panel3"></p><h3 id="docker-compose-yml内容"><a href="#docker-compose-yml内容" class="headerlink" title="docker-compose.yml内容"></a>docker-compose.yml内容</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">grafana_data:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">influxdb:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tutum/influxdb:0.9</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PRE_CREATE_DB=cadvisor</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8083:8083&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8086:8086&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/tmp/influxdb:/data</span></span><br><span class="line">  <span class="attr">cadvisor:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">google/cadvisor</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">influxdb:influxsrv</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">-storage_driver=influxdb</span> <span class="string">-storage_driver_db=cadvisor</span> <span class="string">-storage_driver_host=influxsrv:8086</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8080:8080&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/:/rootfs:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run:/var/run:rw</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/sys:/sys:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/lib/docker/:/var/lib/docker:ro</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">grafana:</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">&quot;104&quot;</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">grafana/grafana</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">influxdb:influxsrv</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3000:3000&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/lib/grafana:/var/lib/grafana</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">HTTP_USER=admin</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">HTTP_PASS=admin</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">INFLUXDB_HOST=influxsrv</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">INFLUXDB_PORT=8086</span></span><br></pre></td></tr></table></figure><h1 id="卸载docker"><a href="#卸载docker" class="headerlink" title="卸载docker"></a>卸载docker</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop docker</span><br><span class="line">yum remove docker-ce docker-ce-cli containerd.io docker-compose-plugin</span><br><span class="line"><span class="built_in">rm</span> -rf /var/lib/docker</span><br><span class="line"><span class="built_in">rm</span> -rf /var/lib/containerd</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis入门</title>
      <link href="/2022/08/10/db/redis%E5%85%A5%E9%97%A8/"/>
      <url>/2022/08/10/db/redis%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>redis是一个开源的、基于内存的key-value数据库</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="使用源代码"><a href="#使用源代码" class="headerlink" title="使用源代码"></a>使用源代码</h2><h3 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h3><p>最新稳定版本下载地址：<code>https://download.redis.io/redis-stable.tar.gz </code></p><p>本次使用的是<code>7.0.1</code>版本</p><h3 id="解压并编译"><a href="#解压并编译" class="headerlink" title="解压并编译"></a>解压并编译</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf redis-stable.tar.gz</span><br><span class="line"><span class="built_in">cd</span> redis-stable</span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>编译成功后，在<code>src</code>目录下可以找到几个redis的二进制文件，包括：</p><ul><li><strong>redis-server</strong>:Redis服务端</li><li><strong>redis-cli</strong>:与Redis-server交互的命令行程序</li></ul><p>如果要将这些二进制文件安装到<code>usr/local/bin</code>目录，在<code>redis-stable</code>目录下执行<code>make install</code>命令。</p><h3 id="前台启动和停止"><a href="#前台启动和停止" class="headerlink" title="前台启动和停止"></a>前台启动和停止</h3><p>执行<code>redis-server</code>命令前台启动redis服务，按<code>ctrl-c</code>停止服务。</p><h3 id="后台启动和停止"><a href="#后台启动和停止" class="headerlink" title="后台启动和停止"></a>后台启动和停止</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> redis.conf /etc/redis.conf</span><br><span class="line">vi /etc/redis.conf <span class="comment"># 修改daemonize属性为yes</span></span><br><span class="line">redis-server /etc/redis.conf <span class="comment"># 后台启动</span></span><br><span class="line">ps -ef | grep redis <span class="comment"># 查看redis进程</span></span><br><span class="line"><span class="built_in">kill</span> -9 redis-pid <span class="comment"># 停止redis</span></span><br></pre></td></tr></table></figure><h2 id="使用docker"><a href="#使用docker" class="headerlink" title="使用docker"></a>使用docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker search redis</span><br><span class="line">docker run redis</span><br></pre></td></tr></table></figure><h1 id="redis客户端"><a href="#redis客户端" class="headerlink" title="redis客户端"></a>redis客户端</h1><blockquote><p><code>redis-cli</code>是一个终端程序，用于向redis server发送命令，并读取来自redis server的响应，有两种工作模式：</p><ul><li>交互式：输入redis命令并收到响应</li><li>命令式：附加参数执行<code>redis-cli</code>命令，并将响应打印到标准输出</li></ul></blockquote><h2 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h2><ul><li>–help：命令帮助</li><li>-h：指定主机名或ip地址</li><li>-p：指定端口</li><li>-a：指定密码，建议通过指定<code>REDISCLI_AUTH</code>环境变量自动为redis提供密码</li><li>-n：指定数据库编号</li><li>-u：uri模式，<code>redis://user:password@host:port/dbnum</code></li><li>–raw：使用原始输出</li><li>-r：指定命令运行的次数，-1表示无限次运行</li><li>-i：执行各次命令运行的间隔，默认是0</li><li>–stat：滚动打印redis server的统计信息，可用<code>-i</code>指定打印间隔</li><li>–bigkeys：查找较大的key</li><li>–scan：显示key列表，类似于<code>keys *</code></li><li>–pattern：key的匹配模式，可与<code>--scan</code>、<code>--bigkeys</code>、<code>--hotkeys</code>联合使用，默认为<code>*</code></li><li>–latency：查看redis server的延迟</li><li>–rdb：rdb文件的远程备份，<code>redis-cli --rdb /tmp/dump.rdb</code></li></ul><h2 id="命令式"><a href="#命令式" class="headerlink" title="命令式"></a>命令式</h2><blockquote><p>即直接在<code>redis-cli</code>后跟要执行的命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis-cli incr mycounter &gt; /tmp/mycounter.txt</span><br><span class="line">redis-cli get mycounter</span><br><span class="line"><span class="built_in">cat</span> /tmp/mycounter.txt</span><br></pre></td></tr></table></figure><h2 id="交互式"><a href="#交互式" class="headerlink" title="交互式"></a>交互式</h2><blockquote><p>即先用<code>redis-cli</code>连接到redis server后，再执行命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">redis-cli</span><br><span class="line">ping</span><br><span class="line">5 incr mycounter <span class="comment"># 执行5次incr命令</span></span><br><span class="line">clear <span class="comment"># 清屏</span></span><br></pre></td></tr></table></figure><h2 id="监控redis命令"><a href="#监控redis命令" class="headerlink" title="监控redis命令"></a>监控redis命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 命令式</span></span><br><span class="line">redis-cli MONITOR</span><br><span class="line"><span class="comment"># 交互式</span></span><br><span class="line">MONITOR</span><br></pre></td></tr></table></figure><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><blockquote><p>redis.conf为redis的配置文件，不使用配置文件启动redis（<code>redis-server</code>)时会使用内置的默认配置启动。</p></blockquote><h2 id="通过命令行传递参数"><a href="#通过命令行传递参数" class="headerlink" title="通过命令行传递参数"></a>通过命令行传递参数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动一个redis server，端口为6380，该server为127.0.0.1:6379的副本</span></span><br><span class="line">redis-server --port 6380 --replicaof 127.0.0.1 6379</span><br></pre></td></tr></table></figure><h2 id="在服务器运行时更改redis配置"><a href="#在服务器运行时更改redis配置" class="headerlink" title="在服务器运行时更改redis配置"></a>在服务器运行时更改redis配置</h2><blockquote><p>即时修改配置对<strong>redis.conf 文件没有影响，</strong>因此在下次重新启动 Redis 时将使用旧配置</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CONFIG GET parameter <span class="comment"># 获取配置</span></span><br><span class="line">CONFIG SET parameter value <span class="comment"># 设置配置</span></span><br></pre></td></tr></table></figure><h2 id="redis-conf部分配置说明"><a href="#redis-conf部分配置说明" class="headerlink" title="redis.conf部分配置说明"></a>redis.conf部分配置说明</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bind 172.0.0.1 # 表示允许访问的ip</span><br><span class="line">protected-mode no # 关闭保护模式，其他主机访问</span><br><span class="line">daemonize yes # 设置redis后台启动</span><br><span class="line">maxmemory 100MB # 指定redis的内存大小</span><br><span class="line">maxmemory-policy # redis内存满后，key的驱逐策略</span><br><span class="line">maxmemory-samples # lru、lfu、最小ttl算法的采样数量，默认为5</span><br></pre></td></tr></table></figure><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><blockquote><p>redis的key通常命名为<code>object-type:id</code>，如<code>user:1000</code>，key和value最大为512MB</p></blockquote><h2 id="通用key命令"><a href="#通用key命令" class="headerlink" title="通用key命令"></a>通用key命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">keys * <span class="comment"># 查询所有key</span></span><br><span class="line"><span class="built_in">type</span> k1 <span class="comment"># 获取k1的类型</span></span><br><span class="line">exists k1 <span class="comment"># 查看k1是否存在</span></span><br><span class="line">del k1 <span class="comment"># 删除k1</span></span><br><span class="line">expire k1 30 <span class="comment"># 设置k1的过期时间为30s</span></span><br><span class="line">pexpire k1 1000 <span class="comment"># 设置k1的过期时间为1000ms</span></span><br><span class="line">ttl k1 <span class="comment"># 查看k1的过期时间，单位s -1表示不会过期 -2表示已过期</span></span><br><span class="line">pttl k1 <span class="comment"># 查看k1的过期时间，单位ms -1表示不会过期 -2表示已过期</span></span><br><span class="line">persist k1 <span class="comment"># 删除k1的过期时间，使之永久存在</span></span><br><span class="line">flushall <span class="comment"># 清空所有key</span></span><br></pre></td></tr></table></figure><h2 id="String"><a href="#String" class="headerlink" title="String"></a>String</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> k1 v1 nx ex 30 <span class="comment"># 当k1不存在时，设置key为k1，value为v1，有效期为30</span></span><br><span class="line">get k1 <span class="comment"># 获取k1的值</span></span><br><span class="line">ttl k1 <span class="comment"># 查看k1的过期时间 -1表示不会过期 -2表示已过期</span></span><br><span class="line">incr k1 <span class="comment"># 对k1进行原子加1操作</span></span><br><span class="line">incrby k1 3 <span class="comment"># 对k1进行原子加3操作</span></span><br><span class="line">decr k1 <span class="comment"># 对k1进行原子加1操作</span></span><br><span class="line">decrby k1 3 <span class="comment"># 对k1进行原子加3操作</span></span><br><span class="line">getset k1 v2 <span class="comment"># 设置k1的值为v2，并返回k1的旧值</span></span><br><span class="line">MSET k1 v1 k2 v2 k3 v3 <span class="comment"># 批量设置kv</span></span><br><span class="line">mget k1 k2 k3 <span class="comment"># 批量获取value</span></span><br></pre></td></tr></table></figure><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><blockquote><p>底层通过链表实现</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">lpush l1 v1 v2 v3 v4 <span class="comment"># 从链表左侧（头部）插入数据</span></span><br><span class="line">rpush l1 v5 v6 v7 v8 <span class="comment"># 从链表右侧（尾部）插入数据</span></span><br><span class="line">lrange l1 0 -1 <span class="comment"># 查看链表所有元素，end为-1最后一个元素，为-2表示倒数第二个元素，一次类推</span></span><br><span class="line">lpop l1<span class="comment"># 从左侧弹出1个元素</span></span><br><span class="line">rpop l1 2 <span class="comment"># 从右侧弹出2个元素</span></span><br><span class="line">ltrim l1 0 2 <span class="comment"># 只保留链表下表0到2的数据，其他的删除</span></span><br><span class="line">BRPOP l1 l2 <span class="built_in">timeout</span> <span class="comment"># 阻塞的rpop，timeout时间内有数据时返回，无数据时一直等待</span></span><br><span class="line">blpop l1 l2 <span class="built_in">timeout</span> <span class="comment"># 阻塞的lpop，timeout时间内有数据时返回，无数据时一直等待</span></span><br><span class="line">llen l1 <span class="comment"># 获取l1的长度</span></span><br></pre></td></tr></table></figure><h2 id="Hash"><a href="#Hash" class="headerlink" title="Hash"></a>Hash</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HSET user:1000 username zhangsan age 20 <span class="comment"># 设置user:1000的username为zhangsan，age为20</span></span><br><span class="line">HGET user:1000 username <span class="comment"># 获取user:1000的用户名</span></span><br><span class="line">HMGET user:1000 username age <span class="comment"># 获取user:1000的用户名和年龄</span></span><br><span class="line">HGETALL user:1000 <span class="comment"># 获取user：1000的所有属性</span></span><br><span class="line">HINCRBY user:1000 age 10 <span class="comment"># 给user:1000的年龄加10</span></span><br></pre></td></tr></table></figure><h2 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h2><blockquote><p>无序且唯一的字符串集合</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SADD s1 1 2 3 4 <span class="comment"># 向s1集合中添加4个元素</span></span><br><span class="line">SMEMBERS s1 <span class="comment"># 查看集合s1中的元素</span></span><br><span class="line">SISMEMBER s1 1 <span class="comment"># 判断1是否为s1中的元素，返回1表示是，0表示不是</span></span><br><span class="line">SINTER s1 s2 <span class="comment"># 获取s1和s2的交集</span></span><br><span class="line">SPOP s1 2 <span class="comment"># 从s1中随机删除两个元素并返回</span></span><br><span class="line">SCARD s1 <span class="comment"># 获取s1中元素的数量</span></span><br><span class="line">SRANDMEMBER s1 2 <span class="comment"># 从s1中随机返回两个元素，不删除</span></span><br></pre></td></tr></table></figure><h2 id="ZSet"><a href="#ZSet" class="headerlink" title="ZSet"></a>ZSet</h2><blockquote><p>有序且唯一的字符串集合，类似于Set，但ZSet中有个用户排序的属性score，通过skip list和hash table实现</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 向z1中添加zhangsan、lisi、wangwu，score分别为10、20、30</span></span><br><span class="line">ZADD z1 10 zhangsan 20 lisi 30 wangwu </span><br><span class="line"><span class="comment"># 获取z1的所有元素，withscores表示输出score</span></span><br><span class="line">ZRANGE z1 0 -1 withscores</span><br><span class="line"><span class="comment"># 通过score范围获取z1中的元素</span></span><br><span class="line">ZRANGEBYSCORE z1 10 30 withscores</span><br><span class="line"><span class="comment"># 以相反的排序输出z1中的所有元素</span></span><br><span class="line">ZREVRANGE z1 0 -1</span><br><span class="line"><span class="comment"># 删除元素zhangsan</span></span><br><span class="line">ZREM z1 zhangsan</span><br><span class="line"><span class="comment"># 通过score范围批量删除元素</span></span><br><span class="line">ZREMRANGEBYSCORE z1 10 20</span><br><span class="line"><span class="comment"># 获取lisi的排名</span></span><br><span class="line">ZRANK z1 lisi</span><br><span class="line"><span class="comment"># 以相反的排序获取lisi的排名</span></span><br><span class="line">ZREVRANK z1 lisi</span><br></pre></td></tr></table></figure><h2 id="Bitmap"><a href="#Bitmap" class="headerlink" title="Bitmap"></a>Bitmap</h2><blockquote><p>Bitmap不是实际的数据类型，而是在 String 类型上定义的一组面向位的操作。由于字符串是二进制安全 blob，它们的最大长度为 512 MB，因此它们适合设置最多 2^32 个不同的位，每位的值只能为0或1.</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SETBIT b1 0 1 <span class="comment"># 设置b1第0位的值为1</span></span><br><span class="line">GETBIT b1 0 <span class="comment"># 获取b1第0位的值</span></span><br><span class="line">BITOP AND b3 b1 b2 <span class="comment"># 将b1和b2按位与操作后赋给b3</span></span><br><span class="line">BITOP OR b4 b1 b2 <span class="comment"># 将b1和b2按位或操作后赋给b4</span></span><br><span class="line">BITOP XOR b5 b1 b2 <span class="comment"># 将b1和b2按位异或（相同为0，不同为1）操作后赋给b5</span></span><br><span class="line">BITOP NOT b6 b1 <span class="comment"># 将b1按位非操作后赋给b6</span></span><br><span class="line">BITCOUNT b1 <span class="comment"># 统计b1中位为1的个数</span></span><br><span class="line">BITPOS b1 1 <span class="comment"># 获取b1中第一个值为1的位的下标</span></span><br></pre></td></tr></table></figure><h2 id="HyperLogLog"><a href="#HyperLogLog" class="headerlink" title="HyperLogLog"></a>HyperLogLog</h2><blockquote><p>HyperLogLog 是一种概率数据结构，常用于统计集合的<strong>基数</strong>（集合中元素的数量）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PFADD hll 1 2 3 4</span><br><span class="line">PFCOUNT hll</span><br></pre></td></tr></table></figure><h2 id="Geospatial"><a href="#Geospatial" class="headerlink" title="Geospatial"></a>Geospatial</h2><blockquote><p>存放地理位置</p></blockquote><h1 id="键驱逐"><a href="#键驱逐" class="headerlink" title="键驱逐"></a>键驱逐</h1><blockquote><p>即redis内存满后，key的Eviction policy，在redis.conf中的maxmemory-policy属性指定</p></blockquote><p><code>maxmemory-policy</code>可用策略：</p><ul><li><strong>noeviction（默认）</strong>：达到内存限制时不保存新值。当数据库使用复制时，这适用于主数据库</li><li><strong>allkeys-lru</strong>：保留最近使用的密钥；删除最近最少使用 (LRU) 键</li><li><strong>allkeys-lfu</strong> : 保存常用键；删除最不常用 (LFU) 键</li><li><strong>volatile-lru</strong>：类似于lru，key必须设置expire</li><li><strong>volatile-lfu</strong>：类似于lfu，key必须设置expire</li><li><strong>allkeys-random</strong>：随机删除键为添加的新数据腾出空间</li><li><strong>volatile-random</strong>：类似于random,key必须设置expire</li><li><strong>volatile-ttl</strong>：删除最近最少使用的，设置了expire的，ttl值最小的键</li></ul><h1 id="主从复制"><a href="#主从复制" class="headerlink" title="主从复制"></a>主从复制</h1><blockquote><p>Redis 如何通过复制支持高可用性和故障转移</p><ul><li>Redis 使用异步复制</li><li>一个master可以有多个replicas</li><li>副本能够接受来自其他副本的连接</li><li>Redis 复制时master是非阻塞的</li></ul></blockquote><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>在从机的<code>redis.conf</code>文件中修改配置：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># replicaof masterip masterport</span></span><br><span class="line"><span class="comment"># 旧版本的命令为slaveof</span></span><br><span class="line"><span class="attr">replicaof</span> <span class="string">192.168.1.1 6379</span></span><br><span class="line"><span class="comment"># 副本是否只读，默认是yes</span></span><br><span class="line"><span class="attr">replica-read-only</span> <span class="string">yes </span></span><br><span class="line"><span class="comment"># master的密码</span></span><br><span class="line"><span class="attr">masterauth</span> <span class="string">123456</span></span><br></pre></td></tr></table></figure><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INFO replication <span class="comment"># 显示与副本有关的信息</span></span><br><span class="line">ROLE <span class="comment"># 显示master和replica的复制状态、复制偏移量、副本列表等</span></span><br></pre></td></tr></table></figure><h1 id="哨兵"><a href="#哨兵" class="headerlink" title="哨兵"></a>哨兵</h1><blockquote><p>Redis Sentinel 在不使用Redis Cluster时为 Redis 提供高可用性。</p><p>Redis Sentinel 还提供其他附带任务，例如监控、通知并充当客户端的配置提供程序。</p><p>这是宏观层面的 Sentinel 能力的完整列表（即<em>大图</em>）：</p><ul><li><strong>监测</strong>：Sentinel 会不断检查您的主实例和副本实例是否按预期工作。</li><li><strong>通知</strong>：当一个受监控的 Redis 实例出现问题时，Sentinel 可以通过 API 通知系统管理员或其他计算机序。</li><li><strong>自动故障转移</strong>：如果一个 master 没有按预期工作，Sentinel 可以启动一个故障转移过程，其中一个副本被提升为 master，其他额外的副本被重新配置为使用新的 master，并且应用程序连接redis时，会被告知要使用新地址。</li><li><strong>配置提供者</strong>：Sentinel 充当客户端服务发现的权威来源：客户端连接到 Sentinel 以请求负责给定服务的当前 Redis 主服务器的地址。如果发生故障转移，Sentinels 将报告新地址。</li></ul></blockquote><h2 id="快速启动哨兵模式"><a href="#快速启动哨兵模式" class="headerlink" title="快速启动哨兵模式"></a>快速启动哨兵模式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> ./sentinel.conf /etc/sentinel.conf <span class="comment"># 拷贝redis目录下的sentinel配置文件</span></span><br><span class="line"><span class="comment"># 启动哨兵模式，同redis-sentinel /etc/sentinel.conf</span></span><br><span class="line">redis-server /etc/sentinel.conf --sentinel </span><br></pre></td></tr></table></figure><h2 id="配置哨兵"><a href="#配置哨兵" class="headerlink" title="配置哨兵"></a>配置哨兵</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># master name为mymasterip为127.0.0.1，端口为6379,</span></span><br><span class="line"><span class="comment"># 2表示quorum数量，即有几个sentinel同意master故障时，该master才被标记为故障</span></span><br><span class="line"><span class="attr">sentinel</span> <span class="string">monitor mymaster 127.0.0.1 6379 2</span></span><br><span class="line"><span class="comment"># sentinel经过60000ms后收不到master的响应后，认为该master已故障</span></span><br><span class="line"><span class="attr">sentinel</span> <span class="string">down-after-milliseconds mymaster 60000</span></span><br><span class="line"><span class="comment"># 设置故障转移超时时间为180000ms</span></span><br><span class="line"><span class="attr">sentinel</span> <span class="string">failover-timeout mymaster 180000</span></span><br><span class="line"><span class="comment"># 设置故障转移后，重新使用新master的副本数</span></span><br><span class="line"><span class="attr">sentinel</span> <span class="string">parallel-syncs mymaster 1</span></span><br></pre></td></tr></table></figure><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><blockquote><p>下面以搭建一主两从三哨兵的架构来演示；</p><p>node：192.168.5.121 master(6379) sentinel1(26379)</p><p>​192.168.5.111 slave(6379) sentinel2(26379)</p><p>​192.168.5.112 slave(6379) sentinel3(26379)</p></blockquote><p>两个slave节点的<code>redis.conf</code>配置复制属性：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">replicaof</span> <span class="string">192.168.5.121 6379</span></span><br></pre></td></tr></table></figure><p>三个sentinel的<code>sentinel.conf</code>调整如下属性：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">port</span> <span class="string">26379</span></span><br><span class="line"><span class="attr">daemonize</span> <span class="string">yes # 允许后台启动</span></span><br><span class="line"><span class="attr">logfile</span> <span class="string">&quot;/tmp/sentinel.log&quot;</span></span><br><span class="line"><span class="attr">sentinel</span> <span class="string">monitor mymaster 192.168.5.121 6379 2</span></span><br><span class="line"><span class="attr">sentinel</span> <span class="string">down-after-milliseconds mymaster 5000</span></span><br><span class="line"><span class="attr">sentinel</span> <span class="string">failover-timeout mymaster 60000</span></span><br><span class="line"><span class="attr">sentinel</span> <span class="string">parallel-syncs mymaster 1</span></span><br></pre></td></tr></table></figure><p>分别启动三台redis server及三台redis sentinel</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis-server /etc/redis.conf <span class="comment"># 启动redis server</span></span><br><span class="line">redis-server /etc/sentinel.conf --sentinel <span class="comment"># 启动redis sentinel</span></span><br><span class="line">ps -ef | grep redis <span class="comment"># 查看启动结果</span></span><br></pre></td></tr></table></figure><p>查看复制信息及哨兵信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -p 6379 <span class="comment"># 连接redis server</span></span><br><span class="line">info replication <span class="comment"># 查看复制信息</span></span><br><span class="line"><span class="comment"># 退出redis-cli  Ctrl + c</span></span><br><span class="line">redis-cli -p 26379 <span class="comment"># 连接redis sentinel</span></span><br><span class="line"><span class="comment"># 查看哨兵信息</span></span><br><span class="line"><span class="comment"># num-other-sentinels为2，即Sentinel已经为这个master检测到了另外两个Sentinel，日志中有`+sentinel`</span></span><br><span class="line"><span class="comment"># flags是master，如果master故障，flags会变成s_down或o_down</span></span><br><span class="line"><span class="comment"># num-slaves为2，表示有两个副本</span></span><br><span class="line">sentinel master mymaster </span><br></pre></td></tr></table></figure><p>手动停掉master节点后，观察sentinel信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep redis</span><br><span class="line"><span class="built_in">kill</span> -9 redispid</span><br><span class="line"><span class="comment"># 等待5s，即down-after-milliseconds配置的时间</span></span><br><span class="line">redis-cli -p 26379 </span><br><span class="line">sentinel master mymaster </span><br><span class="line">sentinel get-master-addr-by-name mymaster</span><br></pre></td></tr></table></figure><h2 id="命令-1"><a href="#命令-1" class="headerlink" title="命令"></a>命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sentinel master mymaster <span class="comment"># 查看master信息</span></span><br><span class="line">sentinel replicas mymaster <span class="comment"># 查看master的副本信息</span></span><br><span class="line">sentinel sentinels mymaster <span class="comment"># 查看其他sentinel信息</span></span><br><span class="line">SENTINEL GET-MASTER-ADDR-BY-NAME mymaster <span class="comment"># 获取master地址</span></span><br><span class="line">sentinel <span class="built_in">help</span> <span class="comment"># 命令帮助</span></span><br></pre></td></tr></table></figure><h1 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h1><blockquote><p>redis持久化是将数据写入磁盘存储，方式有：</p><ul><li><strong>RDB</strong>(Redis Dababase)：每隔一段时间保存一次数据库快照</li><li><strong>AOF</strong>(Append Only File)：保存服务器收到的每个写操作，服务器重启后，重新执行这些操作，当日志很大时，Redis在后台会<strong>重写日志</strong></li><li><strong>不持久化</strong>：数据仅存放在内存中</li><li><strong>RDB + AOF</strong>：同时开启rdb和aof，当数据库重启时，会使用aof来重新加载数据，因为rdb保存的快照可能不完整</li></ul></blockquote><h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># RDB相关</span></span><br><span class="line"><span class="comment"># redis默认开启RDB</span></span><br><span class="line"><span class="comment"># save后的参数表示3600s内，有1个key发生变化，就生成RDB文件</span></span><br><span class="line"><span class="comment"># save &quot;&quot; 表示关闭RDB</span></span><br><span class="line"><span class="attr">save</span> <span class="string">3600 1 </span></span><br><span class="line"><span class="attr">save</span> <span class="string">300 100</span></span><br><span class="line"><span class="attr">save</span> <span class="string">60 10000</span></span><br><span class="line"><span class="comment"># RDB文件的名称</span></span><br><span class="line"><span class="attr">dbfilename</span> <span class="string">&quot;dump.rdb&quot; </span></span><br><span class="line"><span class="comment"># 工作目录</span></span><br><span class="line"><span class="attr">dir</span> <span class="string">&quot;/usr/local/redis/redis-stable&quot; </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># AOF相关</span></span><br><span class="line"><span class="comment"># 开启aof持久化</span></span><br><span class="line"><span class="attr">appendonly</span> <span class="string">yes</span></span><br><span class="line"><span class="comment"># 每秒同步一次aof文件</span></span><br><span class="line"><span class="attr">appendfsync</span> <span class="string">everysec</span></span><br></pre></td></tr></table></figure><h2 id="命令-2"><a href="#命令-2" class="headerlink" title="命令"></a>命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">save <span class="comment"># 手动保存RDB快照</span></span><br><span class="line">bgsave <span class="comment"># 手动后台保存RDB快照</span></span><br><span class="line">BGREWRITEAOF <span class="comment"># 后台重写aof文件</span></span><br></pre></td></tr></table></figure><h1 id="发布订阅"><a href="#发布订阅" class="headerlink" title="发布订阅"></a>发布订阅</h1><blockquote><p>一个客户端订阅某个channel，另一个客户端向这个channel里发布数据，订阅该channel的客户端可接收到消息。</p></blockquote><h2 id="通道名称订阅"><a href="#通道名称订阅" class="headerlink" title="通道名称订阅"></a>通道名称订阅</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开一个终端</span></span><br><span class="line">redis-cli</span><br><span class="line">SUBSCRIBE channel1 <span class="comment"># 订阅channel1通道</span></span><br><span class="line"><span class="comment"># 重新打开一个终端</span></span><br><span class="line">redis-cli</span><br><span class="line">PUBLISH channel1 hello <span class="comment"># 向channel1通道发送消息hello，观察订阅终端的输出</span></span><br></pre></td></tr></table></figure><h2 id="模式匹配订阅"><a href="#模式匹配订阅" class="headerlink" title="模式匹配订阅"></a>模式匹配订阅</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开一个终端</span></span><br><span class="line">redis-cli</span><br><span class="line">PSUBSCRIBE cha* <span class="comment"># 订阅以cha开头的通道</span></span><br><span class="line"><span class="comment"># 重新打开一个终端</span></span><br><span class="line">redis-cli</span><br><span class="line">PUBLISH channel1 hello <span class="comment"># 向channel1通道发送消息hello，观察订阅终端的输出</span></span><br></pre></td></tr></table></figure><h2 id="分片发布订阅"><a href="#分片发布订阅" class="headerlink" title="分片发布订阅"></a>分片发布订阅</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开一个终端</span></span><br><span class="line">redis-cli</span><br><span class="line">SSUBSCRIBE channel1 <span class="comment"># 订阅channel1通道</span></span><br><span class="line"><span class="comment"># 重新打开一个终端</span></span><br><span class="line">redis-cli</span><br><span class="line">SPUBLISH channel1 hello <span class="comment"># 向channel1通道发送消息hello，观察订阅终端的输出</span></span><br></pre></td></tr></table></figure><h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">UNSUBSCRIBE channel1 <span class="comment"># 取消订阅channel1通道</span></span><br><span class="line">UNSUBSCRIBE <span class="comment"># 取消订阅所有通道</span></span><br><span class="line">PUNSUBSCRIBE cha* <span class="comment"># 取消订阅以cha开头的通道</span></span><br><span class="line">PUNSUBSCRIBE <span class="comment"># 取消订阅所有通道</span></span><br><span class="line">SUNSUBSCRIBE channel1 <span class="comment"># 取消订阅channel1通道</span></span><br><span class="line">SUNSUBSCRIBE <span class="comment"># 取消订阅所有通道</span></span><br></pre></td></tr></table></figure><h1 id="集群"><a href="#集群" class="headerlink" title="集群"></a>集群</h1><h2 id="数据分片"><a href="#数据分片" class="headerlink" title="数据分片"></a>数据分片</h2><ul><li>redis cluster使用数据分片，将所有的key都映射到slot上</li><li>redis cluster共有16384个slot</li><li>redis cluster中可使用哈希标签<code>&#123;&#125;</code>，保证一些相关的key映射到同一个slot上，如<code>user:&#123;123&#125;:username和user:&#123;123&#125;:age</code>一定位于同一个slot</li></ul><h2 id="搭建集群"><a href="#搭建集群" class="headerlink" title="搭建集群"></a>搭建集群</h2><blockquote><p>搭建一个三主三从的redis cluster，节点分配如下：</p><p>192.168.5.1216379 6380</p><p>192.168.5.1116379 6380</p><p>192.168.5.11263796380</p></blockquote><p>六个节点<strong>redis.conf</strong>配置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">port</span> <span class="string">6379 # 端口要换</span></span><br><span class="line"><span class="attr">appendonly</span> <span class="string">yes</span></span><br><span class="line"><span class="attr">protected-mode</span> <span class="string">no</span></span><br><span class="line"><span class="attr">daemonize</span> <span class="string">yes</span></span><br><span class="line"><span class="comment">#bind 172.0.0.1 </span></span><br><span class="line"><span class="attr">cluster-enabled</span> <span class="string">yes # 开启集群模式</span></span><br><span class="line"><span class="attr">cluster-config-file</span> <span class="string">nodes.conf # 指定各实例存储节点信息的文件</span></span><br><span class="line"><span class="attr">cluster-node-timeout</span> <span class="string">5000 # 集群节点超时时间ms</span></span><br></pre></td></tr></table></figure><p>分别启动六个节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">redis-server /etc/redis.6379.conf</span><br><span class="line">redis-server /etc/redis.6380.conf</span><br><span class="line"><span class="comment"># 这里要注意，搭建集群的节点必须是新节点，不能有数据，有数据的话需要清理掉</span></span><br><span class="line">redis-cli</span><br><span class="line">flushall</span><br><span class="line">cluster reset hard</span><br></pre></td></tr></table></figure><p>创建集群</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 连接任意一个节点执行</span></span><br><span class="line"><span class="comment"># cluster-replicas表示副本数，六个节点，一个副本，即三主三从</span></span><br><span class="line"><span class="comment"># redis-cli将提出一个配置。输入yes接受建议的配置</span></span><br><span class="line"><span class="comment"># 输出[OK] All 16384 slots covered即为成功</span></span><br><span class="line">redis-cli --cluster create 192.168.5.121:6379 192.168.5.121:6380 \</span><br><span class="line">192.168.5.111:6379 192.168.5.111:6380 192.168.5.112:6379 192.168.5.112:6380 \</span><br><span class="line">--cluster-replicas 1</span><br><span class="line"><span class="comment"># 查看集群信息</span></span><br><span class="line">cluster info</span><br><span class="line"><span class="comment"># 查看集群节点</span></span><br><span class="line">cluster nodes</span><br></pre></td></tr></table></figure><p>连接集群</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -c参数以集群的方式连接redis服务器</span></span><br><span class="line"><span class="comment"># 集群模式具有重定向功能，避免set key时，key的hash值所在的slot不属于当前的redis server</span></span><br><span class="line">redis-cli -c -p 6379</span><br></pre></td></tr></table></figure><p>测试集群</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看集群状态</span></span><br><span class="line">redis-cli --cluster check 192.168.5.121:6379</span><br><span class="line"><span class="comment"># 手动停掉一个master节点</span></span><br><span class="line"><span class="built_in">kill</span> -9 redis-server-pid</span><br><span class="line"><span class="comment"># 再次查看集群状态</span></span><br><span class="line">redis-cli --cluster check 192.168.5.121:6379</span><br><span class="line"><span class="comment"># 重启master节点</span></span><br><span class="line">redis-server /etc/redis.6379.conf</span><br><span class="line"><span class="comment"># 再次查看集群状态</span></span><br><span class="line">redis-cli --cluster check 192.168.5.121:6379</span><br></pre></td></tr></table></figure><h2 id="集群扩容"><a href="#集群扩容" class="headerlink" title="集群扩容"></a>集群扩容</h2><blockquote><p>先在对上面搭建的三主三从集群添加两个节点，使集群扩容为四主四从，两个节点为</p><p>192.168.5.11063796380</p></blockquote><p>启动两个节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-server /etc/redis.6379.conf</span><br><span class="line">redis-server /etc/redis.6380.conf</span><br></pre></td></tr></table></figure><p>添加节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一个ip：port为要添加的node，第二ip：port为现有集群中任一node</span></span><br><span class="line">redis-cli --cluster add-node 192.168.5.110:6379 192.168.5.121:6379</span><br><span class="line"><span class="comment"># 检查集群状态，发现新节点已加入集群，但slot为0，且没有从节点</span></span><br><span class="line">redis-cli --cluster check 192.168.5.121:6379</span><br></pre></td></tr></table></figure><p>给新节点分配slot</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ip:port为集群中任一节点</span></span><br><span class="line"><span class="comment"># How many slots do you want to move (from 1 to 16384)? 输入4096 16384/master个数</span></span><br><span class="line"><span class="comment"># What is the receiving node ID? 输入集群中新节点的id，redis-cli --cluster check 192.168.5.121:6379 查看id</span></span><br><span class="line"><span class="comment"># Source node #1: 输入all</span></span><br><span class="line"><span class="comment"># Do you want to proceed with the proposed reshard plan (yes/no)? 输入yes</span></span><br><span class="line">redis-cli --cluster reshard 192.168.5.121:6379</span><br><span class="line"><span class="comment"># 检查集群状态，新节点已分配slot</span></span><br><span class="line">redis-cli --cluster check 192.168.5.121:6379</span><br></pre></td></tr></table></figure><p>加入从节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一个ip:port为新加入的从节点，第二ip：port为现有集群中任一节点</span></span><br><span class="line"><span class="comment"># cluster-master-id指定主节点的id</span></span><br><span class="line">redis-cli --cluster add-node 192.168.5.110:6380 192.168.5.121:6379 --cluster-slave \</span><br><span class="line">--cluster-master-id a53d4839a64933b96f59ebc06fbeb32d7699e618</span><br><span class="line"><span class="comment"># 检查集群状态，至此集群已为四主四从架构</span></span><br><span class="line">redis-cli --cluster check 192.168.5.121:6379</span><br></pre></td></tr></table></figure><h2 id="集群缩容"><a href="#集群缩容" class="headerlink" title="集群缩容"></a>集群缩容</h2><blockquote><p>现在再将上面扩容后的四主四从的集群缩容为三主三从，去掉192.168.5.110上的两个节点</p></blockquote><p>从集群中删除从节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ip：port为现有集群中任一节点，最后一个参数为要删除节点的id</span></span><br><span class="line">redis-cli --cluster del-node 192.168.5.121:6379 c745ac3f5c80628174a8f2dc0fca689539613704</span><br><span class="line"><span class="comment"># 检查集群状态，从节点已删除</span></span><br><span class="line">redis-cli --cluster check 192.168.5.121:6379</span><br></pre></td></tr></table></figure><p>重新分配主节点上的slot</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将要删除的主节点上的slot分配给其他master</span></span><br><span class="line"><span class="comment"># How many slots do you want to move (from 1 to 16384)? 输入4096，即master的slot数</span></span><br><span class="line"><span class="comment"># What is the receiving node ID? 输入一个master的id，即把4096个slot全部给这个master</span></span><br><span class="line"><span class="comment"># Source node #1: 输入要删除的master的的id</span></span><br><span class="line"><span class="comment"># Source node #2: 输入done</span></span><br><span class="line"><span class="comment"># Do you want to proceed with the proposed reshard plan (yes/no)? 输入yes</span></span><br><span class="line">redis-cli --cluster reshard 192.168.5.121:6379</span><br><span class="line"><span class="comment"># 检查集群状态，该master上已没有slot</span></span><br><span class="line">redis-cli --cluster check 192.168.5.121:6379</span><br></pre></td></tr></table></figure><p>从集群中删除主节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ip：port为现有集群中任一节点，最后一个参数为要删除节点的id</span></span><br><span class="line">redis-cli --cluster del-node 192.168.5.121:6379 c745ac3f5c80628174a8f2dc0fca689539613704</span><br><span class="line"><span class="comment"># 检查集群状态，至此集群已恢复为三主三从</span></span><br><span class="line">redis-cli --cluster check 192.168.5.121:6379</span><br></pre></td></tr></table></figure><h1 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h1><blockquote><ul><li>redis事务能保证原子性</li><li>redis事务不会回滚</li></ul></blockquote><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ul><li>MULTI：开启一个事务</li><li>EXEC：提交事务</li><li>DISCARD：丢弃事务</li><li>WATCH：监测一个key，当这个key发生变化时，事务终止</li></ul><h2 id="案例-1"><a href="#案例-1" class="headerlink" title="案例"></a>案例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在事务中设置a和b</span></span><br><span class="line">MULTI</span><br><span class="line"><span class="built_in">set</span> a a1</span><br><span class="line"><span class="built_in">set</span> b b1</span><br><span class="line">EXEC</span><br><span class="line"></span><br><span class="line"><span class="comment"># incr c 会报错，事务中止，但不会回滚，c和d已正常赋值</span></span><br><span class="line">MULTI</span><br><span class="line"><span class="built_in">set</span> c c1</span><br><span class="line"><span class="built_in">set</span> d d1</span><br><span class="line">incr c</span><br><span class="line"><span class="built_in">set</span> e e1</span><br><span class="line">EXEC</span><br><span class="line"></span><br><span class="line"><span class="comment"># 丢弃一个事务</span></span><br><span class="line">MULTI</span><br><span class="line"><span class="built_in">set</span> f f1</span><br><span class="line"><span class="built_in">set</span> g g1</span><br><span class="line">DISCARD</span><br><span class="line"></span><br><span class="line"><span class="comment"># 监控一个key</span></span><br><span class="line"><span class="comment"># 新开一个终端执行set a操作，a的值发生变化，该事务中止</span></span><br><span class="line">WATCH a</span><br><span class="line">MULTI</span><br><span class="line"><span class="built_in">set</span> h h1</span><br><span class="line"><span class="built_in">set</span> l l1</span><br><span class="line">EXEC</span><br></pre></td></tr></table></figure><h1 id="Jedis使用"><a href="#Jedis使用" class="headerlink" title="Jedis使用"></a>Jedis使用</h1><blockquote><p>Redis推出的java client，其api跟redis-cli中的命令基本一致，方便上手</p><p>git地址：<code>https://github.com/redis/jedis</code></p></blockquote><h2 id="maven依赖"><a href="#maven依赖" class="headerlink" title="maven依赖"></a>maven依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="获取连接"><a href="#获取连接" class="headerlink" title="获取连接"></a>获取连接</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Jedis</span>(<span class="keyword">new</span> <span class="title class_">HostAndPort</span>(<span class="string">&quot;192.168.5.121&quot;</span>, <span class="number">6379</span>), DefaultJedisClientConfig.builder().build());</span><br></pre></td></tr></table></figure><h2 id="多线程中使用Jedis"><a href="#多线程中使用Jedis" class="headerlink" title="多线程中使用Jedis"></a>多线程中使用Jedis</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多线程下使用单个jedis实例可能有莫名其妙的错误，从连接池中获取实例可用于多线程环境</span></span><br><span class="line"><span class="comment">// 该线程池可定义为静态变量</span></span><br><span class="line"><span class="type">JedisPool</span> <span class="variable">jedisPool</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JedisPool</span>(<span class="keyword">new</span> <span class="title class_">JedisPoolConfig</span>(), <span class="string">&quot;192.168.5.121&quot;</span>, <span class="number">6379</span>);</span><br><span class="line"><span class="keyword">try</span> (<span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> jedisPool.getResource()) &#123;</span><br><span class="line">    jedis.set(<span class="string">&quot;testk&quot;</span>, <span class="string">&quot;testv&quot;</span>);</span><br><span class="line">    System.out.println(jedis.get(<span class="string">&quot;testk&quot;</span>));</span><br><span class="line">    jedis.zadd(<span class="string">&quot;z1&quot;</span>, <span class="number">10</span>, <span class="string">&quot;java&quot;</span>);</span><br><span class="line">    jedis.zadd(<span class="string">&quot;z1&quot;</span>, <span class="number">20</span>, <span class="string">&quot;c++&quot;</span>);</span><br><span class="line">    Set&lt;Tuple&gt; z1 = jedis.zrangeWithScores(<span class="string">&quot;z1&quot;</span>, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (Tuple tuple : z1) &#123;</span><br><span class="line">        System.out.println(tuple.getScore() + <span class="string">&quot;  &quot;</span> + tuple.getElement());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">jedisPool.close();</span><br></pre></td></tr></table></figure><h2 id="设置主从复制"><a href="#设置主从复制" class="headerlink" title="设置主从复制"></a>设置主从复制</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置当前redis为192.168.5.112:6380的从机，若redis.conf中配置从机只读的话，该jedis不能执行写操作</span></span><br><span class="line">jedis.slaveof(<span class="string">&quot;192.168.5.112&quot;</span>, <span class="number">6380</span>);</span><br><span class="line"><span class="comment">// 将jedis实例升级为主机，而不是任何一个主机的从机</span></span><br><span class="line">jedis.slaveofNoOne();</span><br></pre></td></tr></table></figure><h2 id="事务-1"><a href="#事务-1" class="headerlink" title="事务"></a>事务</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transaction</span><span class="params">()</span> &#123;</span><br><span class="line">    jedis.watch(<span class="string">&quot;k1&quot;</span>, <span class="string">&quot;k2&quot;</span>); <span class="comment">// watch key</span></span><br><span class="line">    <span class="type">Transaction</span> <span class="variable">transaction</span> <span class="operator">=</span> jedis.multi(); <span class="comment">// 开启redis事务</span></span><br><span class="line">    transaction.set(<span class="string">&quot;foo&quot;</span>, <span class="string">&quot;bar&quot;</span>);</span><br><span class="line">    Response&lt;String&gt; foo = transaction.get(<span class="string">&quot;foo&quot;</span>); <span class="comment">// 获取返回值</span></span><br><span class="line">    transaction.lpush(<span class="string">&quot;games&quot;</span>, <span class="string">&quot;lol&quot;</span>, <span class="string">&quot;cf&quot;</span>, <span class="string">&quot;dnf&quot;</span>);</span><br><span class="line">    Response&lt;List&lt;String&gt;&gt; games = transaction.lrange(<span class="string">&quot;games&quot;</span>, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (transaction.get(<span class="string">&quot;k1&quot;</span>).equals(<span class="string">&quot;v1&quot;</span>)) &#123; <span class="comment">// 这种判断是错误的，不能在事务中使用事务的中查询结果</span></span><br><span class="line">        <span class="comment">// do some thing</span></span><br><span class="line">    &#125;</span><br><span class="line">    transaction.exec(); <span class="comment">// 提交事务</span></span><br><span class="line">    <span class="comment">// transaction.discard();</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打印结果，必须在exec方法后</span></span><br><span class="line">    System.out.println(foo.get());</span><br><span class="line">    System.out.println(games.get());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Pipeline"><a href="#Pipeline" class="headerlink" title="Pipeline"></a>Pipeline</h2><blockquote><p>有时你需要发送一堆不同的命令。一个非常酷的方法是使用流水线，并且比原始的方法具有更好的性能。这样，您无需等待响应即可发送命令，并且您实际上在最后读取了响应，这样更快。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pipeline</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Pipeline</span> <span class="variable">pipelined</span> <span class="operator">=</span> jedis.pipelined();</span><br><span class="line">    pipelined.set(<span class="string">&quot;car&quot;</span>, <span class="string">&quot;baoma&quot;</span>);</span><br><span class="line">    pipelined.zadd(<span class="string">&quot;language&quot;</span>, <span class="number">10</span>, <span class="string">&quot;java&quot;</span>);</span><br><span class="line">    pipelined.zadd(<span class="string">&quot;language&quot;</span>, <span class="number">20</span>, <span class="string">&quot;c&quot;</span>);</span><br><span class="line">    pipelined.zadd(<span class="string">&quot;language&quot;</span>, <span class="number">30</span>, <span class="string">&quot;c++&quot;</span>);</span><br><span class="line">    Response&lt;String&gt; car = pipelined.get(<span class="string">&quot;car&quot;</span>);</span><br><span class="line">    Response&lt;List&lt;Tuple&gt;&gt; language = pipelined.zrangeWithScores(<span class="string">&quot;language&quot;</span>, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">    pipelined.sync();</span><br><span class="line">    System.out.println(car.get());</span><br><span class="line">    <span class="keyword">for</span> (Tuple tuple : language.get()) &#123;</span><br><span class="line">        System.out.println(tuple.getScore() + <span class="string">&quot; - &quot;</span> + tuple.getElement());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="发布订阅-1"><a href="#发布订阅-1" class="headerlink" title="发布订阅"></a>发布订阅</h2><blockquote><p>要订阅 Redis 中的频道，请创建 JedisPubSub 实例并在 Jedis 实例上调用 subscribe;</p><p>请注意，订阅是一个<strong>阻塞</strong>操作，因为它会在调用订阅的线程上轮询 Redis 以获取响应。单个 JedisPubSub 实例可用于订阅多个频道。您可以在现有 JedisPubSub 实例上调用 subscribe 或 psubscribe 来更改您的订阅。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * redis监听器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisListener</span> <span class="keyword">extends</span> <span class="title class_">JedisPubSub</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onMessage</span><span class="params">(String channel, String message)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;onMessage: &quot;</span> + channel + <span class="string">&quot; - &quot;</span> + message);</span><br><span class="line">        <span class="built_in">super</span>.onMessage(channel, message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPMessage</span><span class="params">(String pattern, String channel, String message)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;onPMessage: &quot;</span> + pattern + <span class="string">&quot; - &quot;</span> + channel + <span class="string">&quot; - &quot;</span> + message);</span><br><span class="line">        <span class="built_in">super</span>.onPMessage(pattern, channel, message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onSubscribe</span><span class="params">(String channel, <span class="type">int</span> subscribedChannels)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;onSubscribe: &quot;</span> + channel + <span class="string">&quot; - &quot;</span> + subscribedChannels);</span><br><span class="line">        <span class="built_in">super</span>.onSubscribe(channel, subscribedChannels);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onUnsubscribe</span><span class="params">(String channel, <span class="type">int</span> subscribedChannels)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;onUnsubscribe: &quot;</span> + channel + <span class="string">&quot; - &quot;</span> + subscribedChannels);</span><br><span class="line">        <span class="built_in">super</span>.onUnsubscribe(channel, subscribedChannels);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPUnsubscribe</span><span class="params">(String pattern, <span class="type">int</span> subscribedChannels)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;onPUnsubscribe: &quot;</span> + pattern + <span class="string">&quot; - &quot;</span> + subscribedChannels);</span><br><span class="line">        <span class="built_in">super</span>.onPUnsubscribe(pattern, subscribedChannels);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPSubscribe</span><span class="params">(String pattern, <span class="type">int</span> subscribedChannels)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;onPSubscribe: &quot;</span> + pattern + <span class="string">&quot; - &quot;</span> + subscribedChannels);</span><br><span class="line">        <span class="built_in">super</span>.onPSubscribe(pattern, subscribedChannels);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sub</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> jedisPool.getResource();</span><br><span class="line">    <span class="type">RedisListener</span> <span class="variable">redisListener</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RedisListener</span>();</span><br><span class="line">    <span class="comment">// 阻塞当前线程，订阅mychannel通道</span></span><br><span class="line">    jedis.subscribe(redisListener, <span class="string">&quot;mychannel&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="连接集群"><a href="#连接集群" class="headerlink" title="连接集群"></a>连接集群</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cluster</span><span class="params">()</span> &#123;</span><br><span class="line">    HashSet&lt;HostAndPort&gt; clusterNodes = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">    clusterNodes.add(<span class="keyword">new</span> <span class="title class_">HostAndPort</span>(<span class="string">&quot;192.168.5.121&quot;</span>, <span class="number">6379</span>));</span><br><span class="line">    clusterNodes.add(<span class="keyword">new</span> <span class="title class_">HostAndPort</span>(<span class="string">&quot;192.168.5.121&quot;</span>, <span class="number">6380</span>));</span><br><span class="line">    clusterNodes.add(<span class="keyword">new</span> <span class="title class_">HostAndPort</span>(<span class="string">&quot;192.168.5.121&quot;</span>, <span class="number">6381</span>));</span><br><span class="line">    clusterNodes.add(<span class="keyword">new</span> <span class="title class_">HostAndPort</span>(<span class="string">&quot;192.168.5.121&quot;</span>, <span class="number">6381</span>));</span><br><span class="line">    clusterNodes.add(<span class="keyword">new</span> <span class="title class_">HostAndPort</span>(<span class="string">&quot;192.168.5.121&quot;</span>, <span class="number">6383</span>));</span><br><span class="line">    clusterNodes.add(<span class="keyword">new</span> <span class="title class_">HostAndPort</span>(<span class="string">&quot;192.168.5.121&quot;</span>, <span class="number">6384</span>));</span><br><span class="line">    <span class="comment">// JedisCluster有多个构造方法，按实际情况调不同的构造方法</span></span><br><span class="line">    <span class="type">JedisCluster</span> <span class="variable">jedisCluster</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JedisCluster</span>(clusterNodes);</span><br><span class="line">    jedisCluster.set(<span class="string">&quot;k1&quot;</span>, <span class="string">&quot;v2&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Lettuce使用"><a href="#Lettuce使用" class="headerlink" title="Lettuce使用"></a>Lettuce使用</h1><blockquote><p>Lettuce是一个可扩展的Redis客户端，用于构建非阻塞响应式应用程序。</p><p>Lettuce 是一个基于<a href="https://netty.io/">netty</a>和 Reactor 的可扩展的线程安全 Redis 客户端。Lettuce 提供<a href="https://lettuce.io/core/release/reference/index.html#basic-usage">同步</a>、<a href="https://lettuce.io/core/release/reference/index.html#asynchronous-api">异步</a>和<a href="https://lettuce.io/core/release/reference/index.html#reactive-api">反应式</a>API 来与 Redis 交互。</p></blockquote><h2 id="maven依赖-1"><a href="#maven依赖-1" class="headerlink" title="maven依赖"></a>maven依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.lettuce<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lettuce-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.1.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// redis://password@ip:port/databasenumber</span></span><br><span class="line"><span class="type">RedisClient</span> <span class="variable">redisClient</span> <span class="operator">=</span> RedisClient.create(<span class="string">&quot;redis://@192.168.5.121:6379/0&quot;</span>);</span><br><span class="line">StatefulRedisConnection&lt;String, String&gt; connect = redisClient.connect();</span><br><span class="line">RedisCommands&lt;String, String&gt; syncCommands = connect.sync();</span><br><span class="line">syncCommands.set(<span class="string">&quot;lettuce&quot;</span>, <span class="string">&quot;hello&quot;</span>);</span><br><span class="line">connect.close();</span><br><span class="line">redisClient.shutdown();</span><br></pre></td></tr></table></figure><h2 id="连接redis"><a href="#连接redis" class="headerlink" title="连接redis"></a>连接redis</h2><p>使用uri：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RedisURI.create(<span class="string">&quot;redis://localhost/&quot;</span>);</span><br></pre></td></tr></table></figure><p>使用build：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RedisURI.Builder.redis(<span class="string">&quot;localhost&quot;</span>, <span class="number">6379</span>).auth(<span class="string">&quot;password&quot;</span>).database(<span class="number">1</span>).build();</span><br></pre></td></tr></table></figure><p>使用new对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">RedisURI</span>(<span class="string">&quot;localhost&quot;</span>, <span class="number">6379</span>, <span class="number">60</span>, TimeUnit.SECONDS);</span><br></pre></td></tr></table></figure><h3 id="uri格式"><a href="#uri格式" class="headerlink" title="uri格式"></a>uri格式</h3><p>单机：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis :// [[username :] password@] host [:port][/database]</span><br><span class="line">          [?[timeout=timeout[d|h|m|s|ms|us|ns]]</span><br></pre></td></tr></table></figure><p>哨兵：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-sentinel :// [[username :] password@] host1[:port1] [, host2[:port2]] [, hostN[:portN]] [/database]</span><br><span class="line">                   [?[timeout=timeout[d|h|m|s|ms|us|ns]] [&amp;sentinelMasterId=sentinelMasterId]</span><br></pre></td></tr></table></figure><h3 id="同步api"><a href="#同步api" class="headerlink" title="同步api"></a>同步api</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 构建redisURI</span></span><br><span class="line"><span class="type">RedisURI</span> <span class="variable">redisURI</span> <span class="operator">=</span> RedisURI.Builder</span><br><span class="line">    .redis(<span class="string">&quot;192.168.5.121&quot;</span>, <span class="number">6379</span>)</span><br><span class="line">    .withDatabase(<span class="number">0</span>)</span><br><span class="line">    .withTimeout(Duration.ofSeconds(<span class="number">60</span>))</span><br><span class="line">    .build();</span><br><span class="line"><span class="comment">// 创建redis client实例</span></span><br><span class="line"><span class="type">RedisClient</span> <span class="variable">redisClient</span> <span class="operator">=</span> RedisClient.create(<span class="string">&quot;redis://@192.168.5.121:6379/0&quot;</span>);</span><br><span class="line"><span class="comment">// 打开redis连接</span></span><br><span class="line">StatefulRedisConnection&lt;String, String&gt; connect = redisClient.connect();</span><br><span class="line"><span class="comment">// 获取同步api</span></span><br><span class="line">RedisCommands&lt;String, String&gt; syncCommands = connect.sync();</span><br><span class="line"><span class="comment">// 执行get命令</span></span><br><span class="line"><span class="type">String</span> <span class="variable">lettuce</span> <span class="operator">=</span> syncCommands.get(<span class="string">&quot;lettuce&quot;</span>);</span><br><span class="line">System.out.println(lettuce);</span><br><span class="line"><span class="comment">// 关闭redis连接</span></span><br><span class="line">connect.close();</span><br><span class="line"><span class="comment">// 关闭redis client实例</span></span><br><span class="line">redisClient.shutdown();</span><br></pre></td></tr></table></figure><h3 id="异步api"><a href="#异步api" class="headerlink" title="异步api"></a>异步api</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 构建redisURI</span></span><br><span class="line"><span class="type">RedisURI</span> <span class="variable">redisURI</span> <span class="operator">=</span> RedisURI.Builder</span><br><span class="line">    .redis(<span class="string">&quot;192.168.5.121&quot;</span>, <span class="number">6379</span>)</span><br><span class="line">    .withDatabase(<span class="number">0</span>)</span><br><span class="line">    .withTimeout(Duration.ofSeconds(<span class="number">60</span>))</span><br><span class="line">    .build();</span><br><span class="line"><span class="comment">// 创建redis client实例</span></span><br><span class="line"><span class="type">RedisClient</span> <span class="variable">redisClient</span> <span class="operator">=</span> RedisClient.create(redisURI);</span><br><span class="line"><span class="comment">// 打开redis连接</span></span><br><span class="line">StatefulRedisConnection&lt;String, String&gt; connect = redisClient.connect();</span><br><span class="line"><span class="comment">// 获取异步api</span></span><br><span class="line">RedisAsyncCommands&lt;String, String&gt; asyncCommands = connect.async();</span><br><span class="line"><span class="comment">// 执行get命令</span></span><br><span class="line">RedisFuture&lt;String&gt; lettuce = asyncCommands.get(<span class="string">&quot;lettuce&quot;</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 获取RedisFuture中的值</span></span><br><span class="line">    System.out.println(lettuce.get(<span class="number">1</span>, TimeUnit.MINUTES));</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 获取RedisFuture中的值</span></span><br><span class="line">lettuce.thenAccept(System.out::println);</span><br><span class="line"><span class="comment">// 关闭redis连接</span></span><br><span class="line">connect.close();</span><br><span class="line"><span class="comment">// 关闭redis client实例</span></span><br><span class="line">redisClient.shutdown();</span><br></pre></td></tr></table></figure><h3 id="响应式api"><a href="#响应式api" class="headerlink" title="响应式api"></a>响应式api</h3><blockquote><p>参照官网自行理解</p></blockquote><h2 id="发布-x2F-订阅"><a href="#发布-x2F-订阅" class="headerlink" title="发布&#x2F;订阅"></a>发布&#x2F;订阅</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">RedisClient</span> <span class="variable">redisClient</span> <span class="operator">=</span> RedisClient.create(<span class="string">&quot;redis://@192.168.5.121:6379/0&quot;</span>);</span><br><span class="line">StatefulRedisPubSubConnection&lt;String, String&gt; pubsubConnect </span><br><span class="line">    = redisClient.connectPubSub();</span><br><span class="line"><span class="comment">// 注意：不要在内部回调方法中使用阻塞调用的方法</span></span><br><span class="line">pubsubConnect.addListener(<span class="keyword">new</span> <span class="title class_">RedisPubSubListener</span>&lt;String, String&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">message</span><span class="params">(String channel, String message)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;信道&quot;</span> + channel + <span class="string">&quot;中收到消息：&quot;</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">message</span><span class="params">(String pattern, String channel, String message)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">subscribed</span><span class="params">(String channel, <span class="type">long</span> count)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">psubscribed</span><span class="params">(String pattern, <span class="type">long</span> count)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unsubscribed</span><span class="params">(String channel, <span class="type">long</span> count)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">punsubscribed</span><span class="params">(String pattern, <span class="type">long</span> count)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 同步订阅</span></span><br><span class="line">RedisPubSubCommands&lt;String, String&gt; sync = pubsubConnect.sync();</span><br><span class="line">sync.subscribe(<span class="string">&quot;channel1&quot;</span>, <span class="string">&quot;channel2&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 异步订阅</span></span><br><span class="line"><span class="comment">//RedisPubSubAsyncCommands&lt;String, String&gt; async = pubsubConnect.async();</span></span><br><span class="line"><span class="comment">//RedisFuture&lt;Void&gt; aa = async.subscribe(&quot;channel1&quot;);</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    Thread.sleep(<span class="number">1000000</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">pubsubConnect.close();</span><br><span class="line">redisClient.shutdown();</span><br></pre></td></tr></table></figure><h2 id="事务-2"><a href="#事务-2" class="headerlink" title="事务"></a>事务</h2><p><strong>同步事务</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">RedisClient</span> <span class="variable">redisClient</span> <span class="operator">=</span> RedisClient.create(<span class="string">&quot;redis://@192.168.5.121:6379/0&quot;</span>);</span><br><span class="line">StatefulRedisConnection&lt;String, String&gt; connect = redisClient.connect();</span><br><span class="line">RedisCommands&lt;String, String&gt; sync = connect.sync();</span><br><span class="line">sync.watch(<span class="string">&quot;k1&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">multi</span> <span class="operator">=</span> sync.multi();</span><br><span class="line"><span class="type">String</span> <span class="variable">set</span> <span class="operator">=</span> sync.set(<span class="string">&quot;multi&quot;</span>, <span class="string">&quot;ok&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">set1</span> <span class="operator">=</span> sync.set(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;yes&quot;</span>);</span><br><span class="line"><span class="comment">//sync.discard();</span></span><br><span class="line"><span class="type">TransactionResult</span> <span class="variable">exec</span> <span class="operator">=</span> sync.exec();</span><br><span class="line">System.out.println(exec);</span><br><span class="line">connect.close();</span><br><span class="line">redisClient.shutdown();</span><br></pre></td></tr></table></figure><hr><p><strong>异步事务</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">RedisClient</span> <span class="variable">redisClient</span> <span class="operator">=</span> RedisClient.create(<span class="string">&quot;redis://@192.168.5.121:6379/0&quot;</span>);</span><br><span class="line">StatefulRedisConnection&lt;String, String&gt; connect = redisClient.connect();</span><br><span class="line">RedisAsyncCommands&lt;String, String&gt; async = connect.async();</span><br><span class="line">async.watch(<span class="string">&quot;k1&quot;</span>);</span><br><span class="line">RedisFuture&lt;String&gt; multi = async.multi();</span><br><span class="line">RedisFuture&lt;String&gt; set = async.set(<span class="string">&quot;k2&quot;</span>, <span class="string">&quot;v2&quot;</span>);</span><br><span class="line">RedisFuture&lt;String&gt; set1 = async.set(<span class="string">&quot;k3&quot;</span>, <span class="string">&quot;v3&quot;</span>);</span><br><span class="line">RedisFuture&lt;TransactionResult&gt; exec = async.exec();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    System.out.println(multi.get());</span><br><span class="line">    System.out.println(set.get());</span><br><span class="line">    System.out.println(set1.get());</span><br><span class="line">    System.out.println(exec.get());</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (ExecutionException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">connect.close();</span><br><span class="line">redisClient.shutdown();</span><br></pre></td></tr></table></figure><h2 id="集群-1"><a href="#集群-1" class="headerlink" title="集群"></a>集群</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">RedisURI</span> <span class="variable">node1</span> <span class="operator">=</span> RedisURI.create(<span class="string">&quot;node1&quot;</span>, <span class="number">6379</span>);</span><br><span class="line"><span class="type">RedisURI</span> <span class="variable">node2</span> <span class="operator">=</span> RedisURI.create(<span class="string">&quot;node2&quot;</span>, <span class="number">6379</span>);</span><br><span class="line"><span class="type">RedisClusterClient</span> <span class="variable">redisClusterClient</span> <span class="operator">=</span> </span><br><span class="line">    RedisClusterClient.create(Arrays.asList(node1, node2));</span><br><span class="line">StatefulRedisClusterConnection&lt;String, String&gt; connect = redisClusterClient.connect();</span><br><span class="line">RedisAdvancedClusterCommands&lt;String, String&gt; sync = connect.sync();</span><br><span class="line"></span><br><span class="line"><span class="comment">// some operatio</span></span><br><span class="line"></span><br><span class="line">connect.close();</span><br><span class="line">redisClusterClient.shutdown();</span><br></pre></td></tr></table></figure><h1 id="Spring-Data-Redis使用"><a href="#Spring-Data-Redis使用" class="headerlink" title="Spring Data Redis使用"></a>Spring Data Redis使用</h1><blockquote><p>spring data redis为spring对redis的封装，底层依赖于jedis或lettuce</p></blockquote><h2 id="maven依赖-2"><a href="#maven依赖-2" class="headerlink" title="maven依赖"></a>maven依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.data<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="连接到redis"><a href="#连接到redis" class="headerlink" title="连接到redis"></a>连接到redis</h2><blockquote><p>主要通过<code>org.springframework.data.redis.connection</code>包下的<code>RedisConnection</code>和<code>RedisConnectionFactory</code>两个接口来连接</p></blockquote><h3 id="使用lettuce连接"><a href="#使用lettuce连接" class="headerlink" title="使用lettuce连接"></a>使用lettuce连接</h3><p><strong>maven依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.lettuce<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lettuce-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.1.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.data<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p><strong>注入RedisConnectionFactory</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AppConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> LettuceConnectionFactory <span class="title function_">lettuceConnectionFactory</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 配置从副本读取数据</span></span><br><span class="line">        <span class="type">LettuceClientConfiguration</span> <span class="variable">clientConfig</span> <span class="operator">=</span> LettuceClientConfiguration.builder()</span><br><span class="line">                .readFrom(ReadFrom.REPLICA_PREFERRED)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="type">RedisStandaloneConfiguration</span> <span class="variable">serverConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RedisStandaloneConfiguration</span>(<span class="string">&quot;server&quot;</span>, <span class="number">6379</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LettuceConnectionFactory</span>(serverConfig, clientConfig);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用jedis连接"><a href="#使用jedis连接" class="headerlink" title="使用jedis连接"></a>使用jedis连接</h3><p><strong>maven依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.data<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p><strong>注入RedisConnectionFactory</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AppConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> JedisConnectionFactory <span class="title function_">jedisConnectionFactory</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JedisConnectionFactory</span>(<span class="keyword">new</span> <span class="title class_">RedisStandaloneConfiguration</span>(<span class="string">&quot;192.168.5.121&quot;</span>, <span class="number">6379</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="redis哨兵"><a href="#redis哨兵" class="headerlink" title="redis哨兵"></a>redis哨兵</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Jedis</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> RedisConnectionFactory <span class="title function_">jedisConnectionFactory</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">RedisSentinelConfiguration</span> <span class="variable">sentinelConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RedisSentinelConfiguration</span>()</span><br><span class="line">        .master(<span class="string">&quot;mymaster&quot;</span>)</span><br><span class="line">        .sentinel(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">26379</span>)</span><br><span class="line">        .sentinel(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">26380</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JedisConnectionFactory</span>(sentinelConfig);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Lettuce</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> RedisConnectionFactory <span class="title function_">lettuceConnectionFactory</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">RedisSentinelConfiguration</span> <span class="variable">sentinelConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RedisSentinelConfiguration</span>()</span><br><span class="line">        .master(<span class="string">&quot;mymaster&quot;</span>)</span><br><span class="line">        .sentinel(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">26379</span>)</span><br><span class="line">        .sentinel(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">26380</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LettuceConnectionFactory</span>(sentinelConfig);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用RedisTemplate"><a href="#使用RedisTemplate" class="headerlink" title="使用RedisTemplate"></a>使用RedisTemplate</h2><blockquote><p><code>org.springframework.data.redis.core</code>包下封装了对redis的各种操作，如<code>RedisTemplate</code>、<code>ValueOperations</code>、<code>BoundValueOperations</code>等;</p><p><code>XXOperations</code>提供对redis中某种类型的操作；</p><p><code>BoundXXOperations</code>提供绑定某个key后的操作；</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> LettuceConnectionFactory <span class="title function_">lettuceConnectionFactory</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">RedisStandaloneConfiguration</span> <span class="variable">serverConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RedisStandaloneConfiguration</span>(<span class="string">&quot;192.168.5.121&quot;</span>, <span class="number">6379</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LettuceConnectionFactory</span>(serverConfig);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RedisTemplate <span class="title function_">redisTemplate</span><span class="params">(LettuceConnectionFactory lettuceConnectionFactory)</span> &#123;</span><br><span class="line">        RedisTemplate&lt;String, String&gt; redisTemplate = <span class="keyword">new</span> <span class="title class_">RedisTemplate</span>&lt;&gt;();</span><br><span class="line">        redisTemplate.setConnectionFactory(lettuceConnectionFactory);</span><br><span class="line">        <span class="keyword">return</span> redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> StringRedisTemplate <span class="title function_">stringRedisTemplate</span><span class="params">(LettuceConnectionFactory lettuceConnectionFactory)</span> &#123;</span><br><span class="line">        <span class="type">StringRedisTemplate</span> <span class="variable">stringRedisTemplate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringRedisTemplate</span>();</span><br><span class="line">        stringRedisTemplate.setConnectionFactory(lettuceConnectionFactory);</span><br><span class="line">        <span class="keyword">return</span> stringRedisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"><span class="meta">@Resource(name = &quot;redisTemplate&quot;)</span></span><br><span class="line"><span class="keyword">private</span> ListOperations&lt;String, String&gt; listOperations;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">t1</span><span class="params">()</span> &#123;</span><br><span class="line">    listOperations.leftPush(<span class="string">&quot;l1&quot;</span>, <span class="string">&quot;java&quot;</span>);</span><br><span class="line">    stringRedisTemplate.opsForValue().set(<span class="string">&quot;k1&quot;</span>, <span class="string">&quot;v1&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="序列化器"><a href="#序列化器" class="headerlink" title="序列化器"></a>序列化器</h2><blockquote><p><code>RedisTemplate</code>默认使用<code>JdkSerializationRedisSerializer</code>，这样存到redis中的数据可能为乱码，可使用以下序列化器：</p><ul><li><code>StringRedisSerializer</code>:处理字符串数据</li><li><code>GenericJackson2JsonRedisSerializer</code>:处理json格式数据</li></ul></blockquote><p><strong>RedisTemplate注入</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> RedisTemplate <span class="title function_">redisTemplate</span><span class="params">(LettuceConnectionFactory lettuceConnectionFactory)</span> &#123;</span><br><span class="line">    RedisTemplate&lt;String, String&gt; redisTemplate = <span class="keyword">new</span> <span class="title class_">RedisTemplate</span>&lt;&gt;();</span><br><span class="line">    redisTemplate.setKeySerializer(RedisSerializer.string());</span><br><span class="line">    redisTemplate.setValueSerializer(RedisSerializer.string());</span><br><span class="line">    redisTemplate.setHashKeySerializer(RedisSerializer.string());</span><br><span class="line">    redisTemplate.setHashValueSerializer(RedisSerializer.string());</span><br><span class="line">    redisTemplate.setConnectionFactory(lettuceConnectionFactory);</span><br><span class="line">    <span class="keyword">return</span> redisTemplate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="发布订阅-2"><a href="#发布订阅-2" class="headerlink" title="发布订阅"></a>发布订阅</h2><p><strong>发布</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.convertAndSend(<span class="string">&quot;channel1&quot;</span>, <span class="string">&quot;msg-&quot;</span>);</span><br></pre></td></tr></table></figure><hr><p><strong>订阅</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMsgListener</span> <span class="keyword">implements</span> <span class="title class_">MessageListener</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onMessage</span><span class="params">(Message message, <span class="type">byte</span>[] pattern)</span> &#123;</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(pattern));</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(message.getChannel()));</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(message.getBody()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> RedisMessageListenerContainer <span class="title function_">redisMessageListenerContainer</span><span class="params">(LettuceConnectionFactory lettuceConnectionFactory, MyMsgListener myMsgListener)</span> &#123;</span><br><span class="line">    <span class="type">RedisMessageListenerContainer</span> <span class="variable">container</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RedisMessageListenerContainer</span>();</span><br><span class="line">    container.setConnectionFactory(lettuceConnectionFactory);</span><br><span class="line">    List&lt;Topic&gt; topics = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    topics.add(<span class="keyword">new</span> <span class="title class_">ChannelTopic</span>(<span class="string">&quot;channel1&quot;</span>));</span><br><span class="line">    topics.add(<span class="keyword">new</span> <span class="title class_">PatternTopic</span>(<span class="string">&quot;*test&quot;</span>));</span><br><span class="line">    container.addMessageListener(myMsgListener, topics);</span><br><span class="line">    <span class="keyword">return</span> container;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="事务-3"><a href="#事务-3" class="headerlink" title="事务"></a>事务</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.execute(<span class="keyword">new</span> <span class="title class_">SessionCallback</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Object&gt; <span class="title function_">execute</span><span class="params">(RedisOperations operations)</span> <span class="keyword">throws</span> DataAccessException &#123;</span><br><span class="line">        operations.multi();</span><br><span class="line">        operations.opsForValue().set(<span class="string">&quot;k1&quot;</span>, <span class="string">&quot;v1&quot;</span>);</span><br><span class="line">        operations.opsForValue().increment(<span class="string">&quot;k1&quot;</span>);</span><br><span class="line">        operations.opsForValue().set(<span class="string">&quot;k2&quot;</span>, <span class="string">&quot;v2&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> operations.exec();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="集群-2"><a href="#集群-2" class="headerlink" title="集群"></a>集群</h2><p><strong>注册<code>RedisConnectionFactory</code>时使用集群配置</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> RedisConnectionFactory <span class="title function_">redisConnectionFactory</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    List&lt;String&gt; clusterNodes = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    clusterNodes.add(<span class="string">&quot;127.0.0.1:6379&quot;</span>);</span><br><span class="line">    clusterNodes.add(<span class="string">&quot;127.0.0.1:6380&quot;</span>);</span><br><span class="line">    clusterNodes.add(<span class="string">&quot;127.0.0.1:6381&quot;</span>);</span><br><span class="line">    clusterNodes.add(<span class="string">&quot;127.0.0.1:6382&quot;</span>);</span><br><span class="line">    clusterNodes.add(<span class="string">&quot;127.0.0.1:6383&quot;</span>);</span><br><span class="line">    clusterNodes.add(<span class="string">&quot;127.0.0.1:6384&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LettuceConnectionFactory</span>(<span class="keyword">new</span> <span class="title class_">RedisClusterConfiguration</span>(clusterNodes));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="spring-boot集成"><a href="#spring-boot集成" class="headerlink" title="spring boot集成"></a>spring boot集成</h1><blockquote><p>spring boot集成了spring data redis，默认使用lettuce，并自动装配了<code>RedisConnectionFactory</code>和<code>RedisTemplate</code>，配置类为<code>RedisProperties</code></p></blockquote><p><strong>常用配置</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> RedisTemplate <span class="title function_">redisTemplate</span><span class="params">(LettuceConnectionFactory lettuceConnectionFactory)</span> &#123;</span><br><span class="line">    RedisTemplate&lt;String, String&gt; redisTemplate = <span class="keyword">new</span> <span class="title class_">RedisTemplate</span>&lt;&gt;();</span><br><span class="line">    redisTemplate.setKeySerializer(RedisSerializer.string());</span><br><span class="line">    redisTemplate.setValueSerializer(RedisSerializer.string());</span><br><span class="line">    redisTemplate.setHashKeySerializer(RedisSerializer.string());</span><br><span class="line">    redisTemplate.setHashValueSerializer(RedisSerializer.string());</span><br><span class="line">    redisTemplate.setConnectionFactory(lettuceConnectionFactory);</span><br><span class="line">    <span class="keyword">return</span> redisTemplate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>yml配置（使用lettuce）</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span>  </span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">cluster:</span></span><br><span class="line">      <span class="attr">nodes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">192.169</span><span class="number">.1</span><span class="number">.101</span><span class="string">:6379</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">192.169</span><span class="number">.1</span><span class="number">.202</span><span class="string">:6379</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">192.169</span><span class="number">.1</span><span class="number">.203</span><span class="string">:6379</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">192.169</span><span class="number">.1</span><span class="number">.211</span><span class="string">:6379</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">192.169</span><span class="number">.1</span><span class="number">.181</span><span class="string">:6379</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">192.169</span><span class="number">.1</span><span class="number">.182</span><span class="string">:6379</span></span><br><span class="line">    <span class="attr">lettuce:</span></span><br><span class="line">      <span class="attr">pool:</span> <span class="comment"># 需要依赖commons-pool2包</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">max-active:</span> <span class="number">8</span></span><br><span class="line">        <span class="attr">max-idle:</span> <span class="number">8</span></span><br><span class="line">        <span class="attr">min-idle:</span> <span class="number">0</span></span><br><span class="line">        <span class="attr">max-wait:</span> <span class="string">-1ms</span></span><br><span class="line">      <span class="attr">cluster:</span></span><br><span class="line">        <span class="attr">refresh:</span></span><br><span class="line">          <span class="attr">adaptive:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">period:</span> <span class="string">15s</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
